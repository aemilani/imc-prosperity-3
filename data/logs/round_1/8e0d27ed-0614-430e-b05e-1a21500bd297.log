Sandbox logs:
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": 2033.5}",
  "timestamp": 0
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 72 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 76 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nBUY: 78 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -45 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADGn0A=\"}]}]}}",
  "timestamp": 800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.1349878829287\nKELP position: 0\nBUY: 71 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JHpDOorEn0A=\"}]}]}}",
  "timestamp": 900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4014402707785\nKELP position: 0\nBUY: 81 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KokoE5vFn0A=\"}]}]}}",
  "timestamp": 1000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4733884023242\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"J+ntv+TFn0A=\"}]}]}}",
  "timestamp": 1100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.1278040069683\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6LgN34LEn0A=\"}]}]}}",
  "timestamp": 1200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.0345062901235\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"We6dVSPEn0A=\"}]}]}}",
  "timestamp": 1300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.0093166406155\nKELP position: 0\nBUY: 56 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AitNignEn0A=\"}]}]}}",
  "timestamp": 1400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.0025154887585\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 71 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zpdrkwLEn0A=\"}]}]}}",
  "timestamp": 1500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.3656671860645\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -20 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eHV1cXbFn0A=\"}]}]}}",
  "timestamp": 1600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4637292656703\nKELP position: 0\nBUY: 58 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AjnY29rFn0A=\"}]}]}}",
  "timestamp": 1700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4902068379736\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -46 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fQXI+PXFn0A=\"}]}]}}",
  "timestamp": 1800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.497355841605\nKELP position: 0\nBUY: 82 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rIjZSv3Fn0A=\"}]}]}}",
  "timestamp": 1900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4992860768946\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cW7ZRP/Fn0A=\"}]}]}}",
  "timestamp": 2000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.1347951582654\nKELP position: 0\nBUY: 55 @ 2033\nSELL: -48 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"o/G9B4rEn0A=\"}]}]}}",
  "timestamp": 2100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4013882282977\nKELP position: 0\nBUY: 71 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JwaEBZvFn0A=\"}]}]}}",
  "timestamp": 2200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.108367012575\nKELP position: 0\nBUY: 74 @ 2033\nSELL: -43 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5hvD927En0A=\"}]}]}}",
  "timestamp": 2300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.029258524149\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ZlHy9R3En0A=\"}]}]}}",
  "timestamp": 2400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.0078997600228\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -48 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"x+vfFgjEn0A=\"}]}]}}",
  "timestamp": 2500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.002132932181\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2aciLwLEn0A=\"}]}]}}",
  "timestamp": 2600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.0005758914683\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -41 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"F2z3lgDEn0A=\"}]}]}}",
  "timestamp": 2700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.0001554906805\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -23 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jc3CKADEn0A=\"}]}]}}",
  "timestamp": 2800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.0000419824828\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kGUBCwDEn0A=\"}]}]}}",
  "timestamp": 2900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.00001133527\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 80 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dbL4AgDEn0A=\"}]}]}}",
  "timestamp": 3000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.364990943544\nKELP position: 0\nBUY: 78 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bpcvwHXFn0A=\"}]}]}}",
  "timestamp": 3100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4635466713619\nKELP position: 0\nBUY: 55 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rYb6q9rFn0A=\"}]}]}}",
  "timestamp": 3200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.490157536867\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7Xrb6/XFn0A=\"}]}]}}",
  "timestamp": 3300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4973425302592\nKELP position: 0\nBUY: 79 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fjlcR/3Fn0A=\"}]}]}}",
  "timestamp": 3400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4992824828278\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2DzoQ//Fn0A=\"}]}]}}",
  "timestamp": 3500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4998062703385\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -23 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wgU3zf/Fn0A=\"}]}]}}",
  "timestamp": 3600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999476929897\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"aLxJ8v/Fn0A=\"}]}]}}",
  "timestamp": 3700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999858771073\nKELP position: 0\nBUY: 57 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jTpM/P/Fn0A=\"}]}]}}",
  "timestamp": 3800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999961868189\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -23 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DBoA///Fn0A=\"}]}]}}",
  "timestamp": 3900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.499998970441\nKELP position: 0\nBUY: 81 @ 2033\nSELL: -20 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UOi6///Fn0A=\"}]}]}}",
  "timestamp": 4000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.499999722019\nKELP position: 0\nBUY: 74 @ 2033\nSELL: -45 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"U1jt///Fn0A=\"}]}]}}",
  "timestamp": 4100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999249453\nKELP position: 0\nBUY: 57 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kvb6///Fn0A=\"}]}]}}",
  "timestamp": 4200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999797353\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"26P+///Fn0A=\"}]}]}}",
  "timestamp": 4300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999945287\nKELP position: 0\nBUY: 78 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AaL////Fn0A=\"}]}]}}",
  "timestamp": 4400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999985228\nKELP position: 0\nBUY: 58 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"n+b////Fn0A=\"}]}]}}",
  "timestamp": 4500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999996012\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jvn////Fn0A=\"}]}]}}",
  "timestamp": 4600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999998922\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jv7////Fn0A=\"}]}]}}",
  "timestamp": 4700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.499999999971\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 73 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gP/////Fn0A=\"}]}]}}",
  "timestamp": 4800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.499999999992\nKELP position: 0\nBUY: 56 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3f/////Fn0A=\"}]}]}}",
  "timestamp": 4900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999977\nKELP position: 0\nBUY: 81 @ 2033\nSELL: -14 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9v/////Fn0A=\"}]}]}}",
  "timestamp": 5000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999993\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/f/////Fn0A=\"}]}]}}",
  "timestamp": 5100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -45 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -20 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 79 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 81 @ 2033\nSELL: -16 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -20 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 5900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -20 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 6000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 6100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 80 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 6200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 6300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 74 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 6400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 6500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.4999999999998\nKELP position: 0\nBUY: 79 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Fn0A=\"}]}]}}",
  "timestamp": 6600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.8649878854508\nKELP position: 0\nBUY: 57 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"yl1iv3XHn0A=\"}]}]}}",
  "timestamp": 6700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5985402736533\nKELP position: 0\nBUY: 81 @ 2033\nSELL: -46 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"uNK952TGn0A=\"}]}]}}",
  "timestamp": 6800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5266054033127\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gGRyPhvGn0A=\"}]}]}}",
  "timestamp": 6900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.50718342459\nKELP position: 0\nBUY: 81 @ 2033\nSELL: -12 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wHYXWwfGn0A=\"}]}]}}",
  "timestamp": 7000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5019395221386\nKELP position: 0\nBUY: 81 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nyBv/AHGn0A=\"}]}]}}",
  "timestamp": 7100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.500523670795\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wfNGiQDGn0A=\"}]}]}}",
  "timestamp": 7200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5001413911014\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oJgQJQDGn0A=\"}]}]}}",
  "timestamp": 7300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000381755963\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wOsBCgDGn0A=\"}]}]}}",
  "timestamp": 7400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000103074108\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+LezAgDGn0A=\"}]}]}}",
  "timestamp": 7500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.500002783001\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -23 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mMO6AADGn0A=\"}]}]}}",
  "timestamp": 7600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000007514102\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IW0yAADGn0A=\"}]}]}}",
  "timestamp": 7700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.500000202881\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eJ0NAADGn0A=\"}]}]}}",
  "timestamp": 7800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.500000054778\nKELP position: 0\nBUY: 74 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"FK0DAADGn0A=\"}]}]}}",
  "timestamp": 7900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000000147902\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 80 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"GP4AAADGn0A=\"}]}]}}",
  "timestamp": 8000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000000039934\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"m0QAAADGn0A=\"}]}]}}",
  "timestamp": 8100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000000010782\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -23 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hhIAAADGn0A=\"}]}]}}",
  "timestamp": 8200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000000002913\nKELP position: 0\nBUY: 78 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AQUAAADGn0A=\"}]}]}}",
  "timestamp": 8300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000000000787\nKELP position: 0\nBUY: 79 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WgEAAADGn0A=\"}]}]}}",
  "timestamp": 8400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000000000211\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -15 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XQAAAADGn0A=\"}]}]}}",
  "timestamp": 8500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.500000000006\nKELP position: 0\nBUY: 79 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"GgAAAADGn0A=\"}]}]}}",
  "timestamp": 8600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000000000018\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 74 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CAAAAADGn0A=\"}]}]}}",
  "timestamp": 8700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.8649878854512\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zF1iv3XHn0A=\"}]}]}}",
  "timestamp": 8800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.963545845854\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jyDDq9rHn0A=\"}]}]}}",
  "timestamp": 8900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9901573139928\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+oXM6/XHn0A=\"}]}]}}",
  "timestamp": 9000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9973424700843\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -45 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"si9YR/3Hn0A=\"}]}]}}",
  "timestamp": 9100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9992824665806\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -47 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"uCXnQ//Hn0A=\"}]}]}}",
  "timestamp": 9200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9998062659517\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -20 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Zbo2zf/Hn0A=\"}]}]}}",
  "timestamp": 9300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999476918051\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -47 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DqhJ8v/Hn0A=\"}]}]}}",
  "timestamp": 9400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999858767874\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DjVM/P/Hn0A=\"}]}]}}",
  "timestamp": 9500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999961867325\nKELP position: 0\nBUY: 71 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kBgA///Hn0A=\"}]}]}}",
  "timestamp": 9600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999989704177\nKELP position: 0\nBUY: 60 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6ee6///Hn0A=\"}]}]}}",
  "timestamp": 9700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999997220127\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"N1jt///Hn0A=\"}]}]}}",
  "timestamp": 9800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999249435\nKELP position: 0\nBUY: 74 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ivb6///Hn0A=\"}]}]}}",
  "timestamp": 9900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999797346\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -23 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2KP+///Hn0A=\"}]}]}}",
  "timestamp": 10000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.3649878829558\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7TJiv3XJn0A=\"}]}]}}",
  "timestamp": 10100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4635458453972\nKELP position: 0\nBUY: 70 @ 2034\nSELL: -30 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"thjDq9rJn0A=\"}]}]}}",
  "timestamp": 10200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4901573138852\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IYTM6/XJn0A=\"}]}]}}",
  "timestamp": 10300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4973424700563\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ny9YR/3Jn0A=\"}]}]}}",
  "timestamp": 10400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.499282466573\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -16 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"lyXnQ//Jn0A=\"}]}]}}",
  "timestamp": 10500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4998062659497\nKELP position: 0\nSELL: -3 @ 2035\nBUY: 70 @ 2034\nSELL: -47 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XLo2zf/Jn0A=\"}]}]}}",
  "timestamp": 10600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999476918047\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -19 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DKhJ8v/Jn0A=\"}]}]}}",
  "timestamp": 10700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999858767872\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DTVM/P/Jn0A=\"}]}]}}",
  "timestamp": 10800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999961867325\nKELP position: 0\nBUY: 56 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kBgA///Jn0A=\"}]}]}}",
  "timestamp": 10900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.499998970418\nKELP position: 0\nBUY: 52 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6ue6///Jn0A=\"}]}]}}",
  "timestamp": 11000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.1349876109477\nKELP position: 0\nBUY: 81 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"izkxOorIn0A=\"}]}]}}",
  "timestamp": 11100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0364457721264\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cV0KUiXIn0A=\"}]}]}}",
  "timestamp": 11200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.009840294117\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qvWSEwrIn0A=\"}]}]}}",
  "timestamp": 11300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0026568747198\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"INh7uALIn0A=\"}]}]}}",
  "timestamp": 11400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.3657053729855\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xyN4e3bJn0A=\"}]}]}}",
  "timestamp": 11500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0987339714768\nKELP position: 0\nBUY: 57 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/amEGmXIn0A=\"}]}]}}",
  "timestamp": 11600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0266576999893\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -46 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kPYnTBvIn0A=\"}]}]}}",
  "timestamp": 11700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0071975445665\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"GQrLXgfIn0A=\"}]}]}}",
  "timestamp": 11800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0019433345228\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -46 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4vhu/QHIn0A=\"}]}]}}",
  "timestamp": 11900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.000524700138\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"uweMiQDIn0A=\"}]}]}}",
  "timestamp": 12000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.000141669024\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"TT8jJQDIn0A=\"}]}]}}",
  "timestamp": 12100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0000382506355\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6vQGCgDIn0A=\"}]}]}}",
  "timestamp": 12200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.6349982117258\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hqH4PIrGn0A=\"}]}]}}",
  "timestamp": 12300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9014430615066\nKELP position: 0\nBUY: 79 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gtHjE5vHn0A=\"}]}]}}",
  "timestamp": 12400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.973389155963\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -47 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"knwgwOTHn0A=\"}]}]}}",
  "timestamp": 12500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9928150377993\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -46 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"TVmBpPjHn0A=\"}]}]}}",
  "timestamp": 12600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.633048291745\nKELP position: 0\nBUY: 78 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VbfPPYjGn0A=\"}]}]}}",
  "timestamp": 12700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9009165139487\nKELP position: 0\nBUY: 52 @ 2033\nSELL: -46 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WM/biZrHn0A=\"}]}]}}",
  "timestamp": 12800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9732469830801\nKELP position: 0\nBUY: 52 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Cm3bmuTHn0A=\"}]}]}}",
  "timestamp": 12900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.6277658329295\nKELP position: 0\nBUY: 82 @ 2033\nSELL: -18 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6ucL1YLGn0A=\"}]}]}}",
  "timestamp": 13000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.89949006085\nKELP position: 0\nBUY: 52 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"tinsE5nHn0A=\"}]}]}}",
  "timestamp": 13100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9728618269482\nKELP position: 0\nSELL: -1 @ 2034\nBUY: 52 @ 2033\nSELL: -49 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"FAnkNeTHn0A=\"}]}]}}",
  "timestamp": 13200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9926726575923\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+F8uf/jHn0A=\"}]}]}}",
  "timestamp": 13300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.6330098558874\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VFS8M4jGn0A=\"}]}]}}",
  "timestamp": 13400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5359118037286\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OFoQxiTGn0A=\"}]}]}}",
  "timestamp": 13500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5096961245063\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nObH7QnGn0A=\"}]}]}}",
  "timestamp": 13600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5026179490603\nKELP position: 0\nBUY: 78 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Y5ZHrgLGn0A=\"}]}]}}",
  "timestamp": 13700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5007068459142\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"V6BLuQDGn0A=\"}]}]}}",
  "timestamp": 13800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5001908483723\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ep4HMgDGn0A=\"}]}]}}",
  "timestamp": 13900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000515290585\nKELP position: 0\nBUY: 79 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fA6CDQDGn0A=\"}]}]}}",
  "timestamp": 14000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000139128456\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3qylAwDGn0A=\"}]}]}}",
  "timestamp": 14100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.5000037564685\nKELP position: 0\nBUY: 71 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oxf8AADGn0A=\"}]}]}}",
  "timestamp": 14200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.8649888998793\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"inGmv3XHn0A=\"}]}]}}",
  "timestamp": 14300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9635461197631\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"SILVq9rHn0A=\"}]}]}}",
  "timestamp": 14400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.990157387949\nKELP position: 0\nBUY: 56 @ 2033\nSELL: -21 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"iXzR6/XHn0A=\"}]}]}}",
  "timestamp": 14500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9973424900522\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -22 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"voZZR/3Hn0A=\"}]}]}}",
  "timestamp": 14600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9992824719718\nKELP position: 0\nBUY: 52 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"V4LnQ//Hn0A=\"}]}]}}",
  "timestamp": 14700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9998062674074\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -19 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Z9M2zf/Hn0A=\"}]}]}}",
  "timestamp": 14800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999476921982\nKELP position: 0\nSELL: -4 @ 2034\nBUY: 51 @ 2033\nSELL: -46 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"z65J8v/Hn0A=\"}]}]}}",
  "timestamp": 14900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999858768936\nKELP position: 0\nBUY: 52 @ 2033\nSELL: -46 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4TZM/P/Hn0A=\"}]}]}}",
  "timestamp": 15000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.999996186761\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DhkA///Hn0A=\"}]}]}}",
  "timestamp": 15100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999989704254\nKELP position: 0\nBUY: 52 @ 2033\nSELL: -42 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"C+i6///Hn0A=\"}]}]}}",
  "timestamp": 15200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999997220148\nKELP position: 0\nBUY: 56 @ 2033\nSELL: -26 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QFjt///Hn0A=\"}]}]}}",
  "timestamp": 15300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.999999924944\nKELP position: 0\nBUY: 80 @ 2033\nSELL: -20 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jPb6///Hn0A=\"}]}]}}",
  "timestamp": 15400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999797349\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2aP+///Hn0A=\"}]}]}}",
  "timestamp": 15500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999945285\nKELP position: 0\nBUY: 73 @ 2033\nSELL: -27 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AKL////Hn0A=\"}]}]}}",
  "timestamp": 15600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999985228\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -48 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"n+b////Hn0A=\"}]}]}}",
  "timestamp": 15700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999996012\nKELP position: 0\nBUY: 78 @ 2033\nSELL: -44 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jvn////Hn0A=\"}]}]}}",
  "timestamp": 15800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999998922\nKELP position: 0\nBUY: 53 @ 2033\nSELL: -29 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jv7////Hn0A=\"}]}]}}",
  "timestamp": 15900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.999999999971\nKELP position: 0\nBUY: 54 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gP/////Hn0A=\"}]}]}}",
  "timestamp": 16000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.999999999992\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3f/////Hn0A=\"}]}]}}",
  "timestamp": 16100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9999999999977\nKELP position: 0\nBUY: 77 @ 2033\nSELL: -24 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9v/////Hn0A=\"}]}]}}",
  "timestamp": 16200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.6349878859066\nKELP position: 0\nBUY: 72 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ta1DOorGn0A=\"}]}]}}",
  "timestamp": 16300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9014402731702\nKELP position: 0\nBUY: 57 @ 2033\nSELL: -23 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QbIoE5vHn0A=\"}]}]}}",
  "timestamp": 16400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9733884030857\nKELP position: 0\nBUY: 51 @ 2033\nSELL: -28 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"PPbtv+THn0A=\"}]}]}}",
  "timestamp": 16500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.9928148345207\nKELP position: 0\nBUY: 76 @ 2033\nSELL: -43 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ALVzpPjHn0A=\"}]}]}}",
  "timestamp": 16600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2033.998060002819\nKELP position: 0\nBUY: 75 @ 2033\nSELL: -25 @ 2034\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"N/5wA/7Hn0A=\"}]}]}}",
  "timestamp": 16700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.3644639950148\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oqwMNnXJn0A=\"}]}]}}",
  "timestamp": 16800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.098398843335\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WpiqwmTIn0A=\"}]}]}}",
  "timestamp": 16900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0265672185917\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/dtvNBvIn0A=\"}]}]}}",
  "timestamp": 17000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.007173114822\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"SZZjWAfIn0A=\"}]}]}}",
  "timestamp": 17100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.3669249744723\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -17 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xzUuu3fJn0A=\"}]}]}}",
  "timestamp": 17200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4640688852633\nKELP position: 0\nBUY: 56 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"MLXfNNvJn0A=\"}]}]}}",
  "timestamp": 17300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.490298536483\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -47 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4s3REPbJn0A=\"}]}]}}",
  "timestamp": 17400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4973806002913\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qg9XUf3Jn0A=\"}]}]}}",
  "timestamp": 17500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4992927617463\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -17 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UguaRv/Jn0A=\"}]}]}}",
  "timestamp": 17600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4998090456472\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"M0Xxzf/Jn0A=\"}]}]}}",
  "timestamp": 17700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999484423229\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -18 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2gV88v/Jn0A=\"}]}]}}",
  "timestamp": 17800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999860794271\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 71 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Yc5Z/P/Jn0A=\"}]}]}}",
  "timestamp": 17900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999962414452\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hcQD///Jn0A=\"}]}]}}",
  "timestamp": 18000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999989851904\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"tOW7///Jn0A=\"}]}]}}",
  "timestamp": 18100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999997260013\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vZzt///Jn0A=\"}]}]}}",
  "timestamp": 18200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999260203\nKELP position: 0\nBUY: 70 @ 2034\nSELL: -30 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Cgn7///Jn0A=\"}]}]}}",
  "timestamp": 18300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999800257\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 72 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2Kj+///Jn0A=\"}]}]}}",
  "timestamp": 18400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.499999994607\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WaP////Jn0A=\"}]}]}}",
  "timestamp": 18500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999985437\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -37 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"++b////Jn0A=\"}]}]}}",
  "timestamp": 18600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999996066\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Pvn////Jn0A=\"}]}]}}",
  "timestamp": 18700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999998938\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Lf7////Jn0A=\"}]}]}}",
  "timestamp": 18800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999714\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -18 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gv/////Jn0A=\"}]}]}}",
  "timestamp": 18900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999923\nKELP position: 0\nBUY: 81 @ 2034\nSELL: -19 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3v/////Jn0A=\"}]}]}}",
  "timestamp": 19000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.499999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9//////Jn0A=\"}]}]}}",
  "timestamp": 19100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999993\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/f/////Jn0A=\"}]}]}}",
  "timestamp": 19200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 19300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 19400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 19500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 19600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 81 @ 2034\nSELL: -19 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 19700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 19800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 19900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 70 @ 2034\nSELL: -30 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -32 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 81 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 20900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 21000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 52 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 21100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 79 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 21200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 52 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 21300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 21400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.134987888885\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eOBDOorIn0A=\"}]}]}}",
  "timestamp": 21500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0364458471656\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"m2YPUiXIn0A=\"}]}]}}",
  "timestamp": 21600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0098403143777\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -44 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vVGUEwrIn0A=\"}]}]}}",
  "timestamp": 21700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0026568801904\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"HDZ8uALIn0A=\"}]}]}}",
  "timestamp": 21800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0007173573094\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vAgNvADIn0A=\"}]}]}}",
  "timestamp": 21900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.3651816096328\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5fkq8nXJn0A=\"}]}]}}",
  "timestamp": 22000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.0985925739167\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Z6Jz9WTIn0A=\"}]}]}}",
  "timestamp": 22100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.026619524\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -47 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DwQmQhvIn0A=\"}]}]}}",
  "timestamp": 22200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.3721764152785\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"22/QG33Jn0A=\"}]}]}}",
  "timestamp": 22300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4654868406512\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QxWVqNzJn0A=\"}]}]}}",
  "timestamp": 22400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.1256709500246\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 77 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"p7Hir4DIn0A=\"}]}]}}",
  "timestamp": 22500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.3989243683466\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 76 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gS6hf5jJn0A=\"}]}]}}",
  "timestamp": 22600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4727090845684\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+arZDeTJn0A=\"}]}]}}",
  "timestamp": 22700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4926314167558\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"y79edPjJn0A=\"}]}]}}",
  "timestamp": 22800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.498010479894\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"15B19v3Jn0A=\"}]}]}}",
  "timestamp": 22900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4994628293796\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 71 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Axcvc//Jn0A=\"}]}]}}",
  "timestamp": 23000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4998549639186\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -15 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"GMv62f/Jn0A=\"}]}]}}",
  "timestamp": 23100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999608402568\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vAi89f/Jn0A=\"}]}]}}",
  "timestamp": 23200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999894268692\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/3I6/f/Jn0A=\"}]}]}}",
  "timestamp": 23300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999971452546\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2WtA///Jn0A=\"}]}]}}",
  "timestamp": 23400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999992292187\nKELP position: 0\nBUY: 81 @ 2034\nSELL: -16 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"FEbM///Jn0A=\"}]}]}}",
  "timestamp": 23500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.499999791889\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rgjy///Jn0A=\"}]}]}}",
  "timestamp": 23600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.49999994381\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 71 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qjr8///Jn0A=\"}]}]}}",
  "timestamp": 23700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999848287\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XPv+///Jn0A=\"}]}]}}",
  "timestamp": 23800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999959039\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"obn////Jn0A=\"}]}]}}",
  "timestamp": 23900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.499999998894\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -15 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AO3////Jn0A=\"}]}]}}",
  "timestamp": 24000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999997015\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3/r////Jn0A=\"}]}]}}",
  "timestamp": 24100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999193\nKELP position: 0\nBUY: 58 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nf7////Jn0A=\"}]}]}}",
  "timestamp": 24200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999782\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oP/////Jn0A=\"}]}]}}",
  "timestamp": 24300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.499999999994\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -13 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5v/////Jn0A=\"}]}]}}",
  "timestamp": 24400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999984\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+f/////Jn0A=\"}]}]}}",
  "timestamp": 24500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999995\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/v/////Jn0A=\"}]}]}}",
  "timestamp": 24600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 24700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 24800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 24900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -18 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 56 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 56 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 25900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 77 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 75 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 81 @ 2034\nSELL: -19 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 76 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 70 @ 2034\nSELL: -30 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 26900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 56 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 79 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 75 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -44 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 78 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 82 @ 2034\nSELL: -18 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 58 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 27900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 71 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 70 @ 2034\nSELL: -30 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -17 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 71 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 28900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 70 @ 2034\nSELL: -31 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 58 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 75 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 82 @ 2034\nSELL: -18 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 29900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.4999999999998\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Jn0A=\"}]}]}}",
  "timestamp": 30000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.8649878914048\nKELP position: 0\nBUY: 51 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"FMRiv3XLn0A=\"}]}]}}",
  "timestamp": 30100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9635458478956\nKELP position: 0\nBUY: 52 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"okPDq9rLn0A=\"}]}]}}",
  "timestamp": 30200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9901573145755\nKELP position: 0\nBUY: 51 @ 2034\nSELL: -19 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/Y/M6/XLn0A=\"}]}]}}",
  "timestamp": 30300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.997342470244\nKELP position: 0\nSELL: -2 @ 2035\nBUY: 80 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cDJYR/3Ln0A=\"}]}]}}",
  "timestamp": 30400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9992824666238\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -45 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dibnQ//Ln0A=\"}]}]}}",
  "timestamp": 30500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9998062659636\nKELP position: 0\nBUY: 57 @ 2034\nSELL: -18 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mbo2zf/Ln0A=\"}]}]}}",
  "timestamp": 30600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999476918085\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"HahJ8v/Ln0A=\"}]}]}}",
  "timestamp": 30700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999858767883\nKELP position: 0\nBUY: 52 @ 2034\nSELL: -19 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EjVM/P/Ln0A=\"}]}]}}",
  "timestamp": 30800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.634984079278\nKELP position: 0\nBUY: 57 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6zdEOYrKn0A=\"}]}]}}",
  "timestamp": 30900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5364448188386\nKELP position: 0\nSELL: -6 @ 2035\nBUY: 78 @ 2034\nSELL: -44 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"FWTKUSXKn0A=\"}]}]}}",
  "timestamp": 31000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.874829693449\nKELP position: 0\nBUY: 59 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vOta03/Ln0A=\"}]}]}}",
  "timestamp": 31100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9662032584613\nKELP position: 0\nBUY: 58 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hRFjZN3Ln0A=\"}]}]}}",
  "timestamp": 31200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9908748244693\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Gtbjp/bLn0A=\"}]}]}}",
  "timestamp": 31300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9975361985742\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zxUhev3Ln0A=\"}]}]}}",
  "timestamp": 31400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9993347733212\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rmSdUf/Ln0A=\"}]}]}}",
  "timestamp": 31500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9998203887753\nKELP position: 0\nBUY: 74 @ 2034\nSELL: -26 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qH7q0P/Ln0A=\"}]}]}}",
  "timestamp": 31600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999515049676\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sI1J8//Ln0A=\"}]}]}}",
  "timestamp": 31700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999869063413\nKELP position: 0\nSELL: -2 @ 2035\nBUY: 74 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qEyR/P/Ln0A=\"}]}]}}",
  "timestamp": 31800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999964647122\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -44 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OMAS///Ln0A=\"}]}]}}",
  "timestamp": 31900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999990454724\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"V/G////Ln0A=\"}]}]}}",
  "timestamp": 32000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999997422774\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XLTu///Ln0A=\"}]}]}}",
  "timestamp": 32100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.999999930415\nKELP position: 0\nBUY: 51 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ilT7///Ln0A=\"}]}]}}",
  "timestamp": 32200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.999999981212\nKELP position: 0\nBUY: 82 @ 2034\nSELL: -47 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Or3+///Ln0A=\"}]}]}}",
  "timestamp": 32300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999999949273\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2qj////Ln0A=\"}]}]}}",
  "timestamp": 32400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9999999986303\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -47 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eOj////Ln0A=\"}]}]}}",
  "timestamp": 32500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.99999999963\nKELP position: 0\nBUY: 78 @ 2034\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pfn////Ln0A=\"}]}]}}",
  "timestamp": 32600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3649878942797\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ePViv3XNn0A=\"}]}]}}",
  "timestamp": 32700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4635458488888\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"slTDq9rNn0A=\"}]}]}}",
  "timestamp": 32800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4901573148595\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3pTM6/XNn0A=\"}]}]}}",
  "timestamp": 32900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4973424703217\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xjNYR/3Nn0A=\"}]}]}}",
  "timestamp": 33000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1342704901508\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EBA0fonMn0A=\"}]}]}}",
  "timestamp": 33100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0362521592954\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VTpJHyXMn0A=\"}]}]}}",
  "timestamp": 33200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.374777669278\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"SKO3xX/Nn0A=\"}]}]}}",
  "timestamp": 33300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4661892114905\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ZmS0YN3Nn0A=\"}]}]}}",
  "timestamp": 33400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1258605636249\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gHKX4YDMn0A=\"}]}]}}",
  "timestamp": 33500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0339815850714\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"MZIRzCLMn0A=\"}]}]}}",
  "timestamp": 33600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0091749720484\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"j/MpZQnMn0A=\"}]}]}}",
  "timestamp": 33700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0024772383763\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"PqdkiQLMn0A=\"}]}]}}",
  "timestamp": 33800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3656568684064\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dA3BbnbNn0A=\"}]}]}}",
  "timestamp": 33900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0987208801419\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 80 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kR4WF2XMn0A=\"}]}]}}",
  "timestamp": 34000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3916468406296\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WJDeC5HNn0A=\"}]}]}}",
  "timestamp": 34100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1057372196303\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IbFgRmzMn0A=\"}]}]}}",
  "timestamp": 34200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.393541522583\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"c4SM/JLNn0A=\"}]}]}}",
  "timestamp": 34300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1062487117254\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"aVh2zGzMn0A=\"}]}]}}",
  "timestamp": 34400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3936796449666\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7sDBIJPNn0A=\"}]}]}}",
  "timestamp": 34500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4712929568334\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vfGemuLNn0A=\"}]}]}}",
  "timestamp": 34600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4922490584456\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Cx4jEPjNn0A=\"}]}]}}",
  "timestamp": 34700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4979072428716\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -36 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"TXJl2/3Nn0A=\"}]}]}}",
  "timestamp": 34800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4994349553633\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"D3/ga//Nn0A=\"}]}]}}",
  "timestamp": 34900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998474379327\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pLsB2P/Nn0A=\"}]}]}}",
  "timestamp": 35000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999588082408\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"96oz9f/Nn0A=\"}]}]}}",
  "timestamp": 35100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499988878225\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XKEV/f/Nn0A=\"}]}]}}",
  "timestamp": 35200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999969971207\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7Xo2///Nn0A=\"}]}]}}",
  "timestamp": 35300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8649870864301\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"uL4sv3XPn0A=\"}]}]}}",
  "timestamp": 35400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.598540064288\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2sWv52TOn0A=\"}]}]}}",
  "timestamp": 35500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.526605347248\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UaFuPhvOn0A=\"}]}]}}",
  "timestamp": 35600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1421700161711\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"tUcElZHMn0A=\"}]}]}}",
  "timestamp": 35700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4033797044901\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"n7qRD53Nn0A=\"}]}]}}",
  "timestamp": 35800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4739120682168\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"r4g0SeXNn0A=\"}]}]}}",
  "timestamp": 35900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4929562254677\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+UqEyfjNn0A=\"}]}]}}",
  "timestamp": 36000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4980981784743\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+upyDf7Nn0A=\"}]}]}}",
  "timestamp": 36100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499486508013\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1iJkef/Nn0A=\"}]}]}}",
  "timestamp": 36200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998613571506\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/NWn2//Nn0A=\"}]}]}}",
  "timestamp": 36300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999625664298\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KeAv9v/Nn0A=\"}]}]}}",
  "timestamp": 36400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999898929361\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"97lZ/f/Nn0A=\"}]}]}}",
  "timestamp": 36500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999972710928\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"u91I///Nn0A=\"}]}]}}",
  "timestamp": 36600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999992631951\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"yo3O///Nn0A=\"}]}]}}",
  "timestamp": 36700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999998010626\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"SKby///Nn0A=\"}]}]}}",
  "timestamp": 36800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999946287\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OGX8///Nn0A=\"}]}]}}",
  "timestamp": 36900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999854977\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2gb////Nn0A=\"}]}]}}",
  "timestamp": 37000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999960844\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"u7z////Nn0A=\"}]}]}}",
  "timestamp": 37100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999998943\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1+3////Nn0A=\"}]}]}}",
  "timestamp": 37200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999997146\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Gfv////Nn0A=\"}]}]}}",
  "timestamp": 37300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999999923\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rf7////Nn0A=\"}]}]}}",
  "timestamp": 37400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999793\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pf/////Nn0A=\"}]}]}}",
  "timestamp": 37500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999943\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5//////Nn0A=\"}]}]}}",
  "timestamp": 37600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999984\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+f/////Nn0A=\"}]}]}}",
  "timestamp": 37700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999995\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/v/////Nn0A=\"}]}]}}",
  "timestamp": 37800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 37900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 38900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 39000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -12 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 39100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 39200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 39300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8649878973529\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"RCpjv3XPn0A=\"}]}]}}",
  "timestamp": 39400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5985402832086\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4Xa+52TOn0A=\"}]}]}}",
  "timestamp": 39500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5266054063547\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"w5hyPhvOn0A=\"}]}]}}",
  "timestamp": 39600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5071834254454\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"coUXWwfOn0A=\"}]}]}}",
  "timestamp": 39700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5019395223721\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oiRv/AHOn0A=\"}]}]}}",
  "timestamp": 39800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5005236708585\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2PRGiQDOn0A=\"}]}]}}",
  "timestamp": 39900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5001413911184\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"65gQJQDOn0A=\"}]}]}}",
  "timestamp": 40000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000381756008\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1OsBCgDOn0A=\"}]}]}}",
  "timestamp": 40100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500010307412\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/bezAgDOn0A=\"}]}]}}",
  "timestamp": 40200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000027830015\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"msO6AADOn0A=\"}]}]}}",
  "timestamp": 40300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000007514104\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Im0yAADOn0A=\"}]}]}}",
  "timestamp": 40400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000002028808\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"d50NAADOn0A=\"}]}]}}",
  "timestamp": 40500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000000547777\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"E60DAADOn0A=\"}]}]}}",
  "timestamp": 40600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.50000001479\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 80 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"F/4AAADOn0A=\"}]}]}}",
  "timestamp": 40700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000000039931\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mkQAAADOn0A=\"}]}]}}",
  "timestamp": 40800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500000001078\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hRIAAADOn0A=\"}]}]}}",
  "timestamp": 40900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1349878951264\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sktEOorMn0A=\"}]}]}}",
  "timestamp": 41000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4014402804178\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xC4pE5vNn0A=\"}]}]}}",
  "timestamp": 41100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4733884053894\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0B3uv+TNn0A=\"}]}]}}",
  "timestamp": 41200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4928148351682\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -15 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IMBzpPjNn0A=\"}]}]}}",
  "timestamp": 41300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4980600029958\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QAFxA/7Nn0A=\"}]}]}}",
  "timestamp": 41400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4994762006268\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -12 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Smuwdv/Nn0A=\"}]}]}}",
  "timestamp": 41500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499858574156\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gBLt2v/Nn0A=\"}]}]}}",
  "timestamp": 41600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.864949705527\nKELP position: 0\nSELL: -2 @ 2036\nBUY: 73 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sSdgtXXPn0A=\"}]}]}}",
  "timestamp": 41700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.963535537643\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2FoPqdrPn0A=\"}]}]}}",
  "timestamp": 41800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9901545308026\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ir8R6/XPn0A=\"}]}]}}",
  "timestamp": 41900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9973417186247\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"uMElR/3Pn0A=\"}]}]}}",
  "timestamp": 42000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9992822636866\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -43 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"B4jZQ//Pn0A=\"}]}]}}",
  "timestamp": 42100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9998062111704\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Qg0zzf/Pn0A=\"}]}]}}",
  "timestamp": 42200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999947677014\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"8qlI8v/Pn0A=\"}]}]}}",
  "timestamp": 42300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999858727936\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cfBL/P/Pn0A=\"}]}]}}",
  "timestamp": 42400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999961856543\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CgYA///Pn0A=\"}]}]}}",
  "timestamp": 42500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999989701266\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6eK6///Pn0A=\"}]}]}}",
  "timestamp": 42600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999721934\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3Vbt///Pn0A=\"}]}]}}",
  "timestamp": 42700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999249221\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"LPb6///Pn0A=\"}]}]}}",
  "timestamp": 42800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999979729\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"v6P+///Pn0A=\"}]}]}}",
  "timestamp": 42900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999994527\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+aH////Pn0A=\"}]}]}}",
  "timestamp": 43000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999985223\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"neb////Pn0A=\"}]}]}}",
  "timestamp": 43100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999999601\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jfn////Pn0A=\"}]}]}}",
  "timestamp": 43200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999998922\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 70 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jv7////Pn0A=\"}]}]}}",
  "timestamp": 43300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999999971\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gP/////Pn0A=\"}]}]}}",
  "timestamp": 43400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999999992\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -44 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3f/////Pn0A=\"}]}]}}",
  "timestamp": 43500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999977\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9v/////Pn0A=\"}]}]}}",
  "timestamp": 43600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999993\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/f/////Pn0A=\"}]}]}}",
  "timestamp": 43700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 43800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.6349878978085\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xnlEOorOn0A=\"}]}]}}",
  "timestamp": 43900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5364458502254\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"LJsPUiXOn0A=\"}]}]}}",
  "timestamp": 44000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5098403152513\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"v2CUEwrOn0A=\"}]}]}}",
  "timestamp": 44100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5026568804299\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OTp8uALOn0A=\"}]}]}}",
  "timestamp": 44200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5007173573742\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2QkNvADOn0A=\"}]}]}}",
  "timestamp": 44300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500193686466\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JhTGMgDOn0A=\"}]}]}}",
  "timestamp": 44400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500052295344\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"K3u1DQDOn0A=\"}]}]}}",
  "timestamp": 44500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000141197424\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VI+zAwDOn0A=\"}]}]}}",
  "timestamp": 44600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000038123305\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"V9f/AADOn0A=\"}]}]}}",
  "timestamp": 44700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500001029329\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vRNFAADOn0A=\"}]}]}}",
  "timestamp": 44800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000002779188\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nKYSAADOn0A=\"}]}]}}",
  "timestamp": 44900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500000075038\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JQkFAADOn0A=\"}]}]}}",
  "timestamp": 45000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000000202601\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EVwBAADOn0A=\"}]}]}}",
  "timestamp": 45100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000000054702\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+l0AAADOn0A=\"}]}]}}",
  "timestamp": 45200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500000001477\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"YBkAAADOn0A=\"}]}]}}",
  "timestamp": 45300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1349878952344\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jU1EOorMn0A=\"}]}]}}",
  "timestamp": 45400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.036445849314\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hIsPUiXMn0A=\"}]}]}}",
  "timestamp": 45500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0098403149893\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"P1yUEwrMn0A=\"}]}]}}",
  "timestamp": 45600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0026568803578\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/Dh8uALMn0A=\"}]}]}}",
  "timestamp": 45700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.000717357355\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hAkNvADMn0A=\"}]}]}}",
  "timestamp": 45800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0001936864608\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DxTGMgDMn0A=\"}]}]}}",
  "timestamp": 45900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000522953426\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JXu1DQDMn0A=\"}]}]}}",
  "timestamp": 46000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000141197422\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"U4+zAwDMn0A=\"}]}]}}",
  "timestamp": 46100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000038123303\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vtf/AADMn0A=\"}]}]}}",
  "timestamp": 46200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000010293293\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vhNFAADMn0A=\"}]}]}}",
  "timestamp": 46300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000002779188\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nKYSAADMn0A=\"}]}]}}",
  "timestamp": 46400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000750383\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JgkFAADMn0A=\"}]}]}}",
  "timestamp": 46500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000202606\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"E1wBAADMn0A=\"}]}]}}",
  "timestamp": 46600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.6349878973303\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"j3FEOorKn0A=\"}]}]}}",
  "timestamp": 46700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5364458496629\nKELP position: 0\nBUY: 75 @ 2034\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gpEPUiXKn0A=\"}]}]}}",
  "timestamp": 46800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5098403150673\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -30 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ll2UEwrKn0A=\"}]}]}}",
  "timestamp": 46900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.867645248425\nKELP position: 0\nBUY: 51 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EPr+d3jLn0A=\"}]}]}}",
  "timestamp": 47000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.599257670538\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WoPNo2XKn0A=\"}]}]}}",
  "timestamp": 47100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5267990938294\nKELP position: 0\nSELL: -1 @ 2035\nBUY: 73 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Pb44cRvKn0A=\"}]}]}}",
  "timestamp": 47200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5072357205456\nKELP position: 0\nBUY: 71 @ 2034\nSELL: -24 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bfzMaAfKn0A=\"}]}]}}",
  "timestamp": 47300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.8669418838979\nKELP position: 0\nSELL: -5 @ 2035\nBUY: 72 @ 2034\nSELL: -45 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"f/ucv3fLn0A=\"}]}]}}",
  "timestamp": 47400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.59906778714\nKELP position: 0\nBUY: 55 @ 2034\nSELL: -28 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"aqcGcmXKn0A=\"}]}]}}",
  "timestamp": 47500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5267478271362\nKELP position: 0\nBUY: 71 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KEvIYxvKn0A=\"}]}]}}",
  "timestamp": 47600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5072218786713\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1hIsZQfKn0A=\"}]}]}}",
  "timestamp": 47700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5019499047148\nKELP position: 0\nBUY: 57 @ 2034\nSELL: -30 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7OMn/wHKn0A=\"}]}]}}",
  "timestamp": 47800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.500526474089\nKELP position: 0\nBUY: 73 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+hMDigDKn0A=\"}]}]}}",
  "timestamp": 47900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5001421479906\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4mNDJQDKn0A=\"}]}]}}",
  "timestamp": 48000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.8650262782467\nKELP position: 0\nBUY: 51 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AN1yyXXLn0A=\"}]}]}}",
  "timestamp": 48100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5985506415234\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -22 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"X5l16mTKn0A=\"}]}]}}",
  "timestamp": 48200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5266082027695\nKELP position: 0\nBUY: 54 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zUIuPxvKn0A=\"}]}]}}",
  "timestamp": 48300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.507184180453\nKELP position: 0\nBUY: 56 @ 2034\nSELL: -18 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"YDBKWwfKn0A=\"}]}]}}",
  "timestamp": 48400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.501939726222\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"v9J8/AHKn0A=\"}]}]}}",
  "timestamp": 48500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5005237258977\nKELP position: 0\nBUY: 77 @ 2034\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"aaZKiQDKn0A=\"}]}]}}",
  "timestamp": 48600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.500141405979\nKELP position: 0\nBUY: 52 @ 2034\nSELL: -27 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OZgRJQDKn0A=\"}]}]}}",
  "timestamp": 48700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5000381796133\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wzACCgDKn0A=\"}]}]}}",
  "timestamp": 48800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.5000103084956\nKELP position: 0\nBUY: 72 @ 2034\nSELL: -29 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"m8qzAgDKn0A=\"}]}]}}",
  "timestamp": 48900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.864990675198\nKELP position: 0\nBUY: 51 @ 2034\nSELL: -21 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"SJUdwHXLn0A=\"}]}]}}",
  "timestamp": 49000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9635465995561\nKELP position: 0\nBUY: 80 @ 2034\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ELX1q9rLn0A=\"}]}]}}",
  "timestamp": 49100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9901575175265\nKELP position: 0\nBUY: 76 @ 2034\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qS7a6/XLn0A=\"}]}]}}",
  "timestamp": 49200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2034.9973425250407\nKELP position: 0\nBUY: 79 @ 2034\nSELL: -44 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"199bR/3Ln0A=\"}]}]}}",
  "timestamp": 49300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3642702471077\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"73hCA3XNn0A=\"}]}]}}",
  "timestamp": 49400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4633520747448\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QF73eNrNn0A=\"}]}]}}",
  "timestamp": 49500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1250946643927\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4tHQGIDMn0A=\"}]}]}}",
  "timestamp": 49600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3987687536533\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 71 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bg7WVpjNn0A=\"}]}]}}",
  "timestamp": 49700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4726670673201\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -31 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JfDVAuTNn0A=\"}]}]}}",
  "timestamp": 49800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4926200720051\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dmplcfjNn0A=\"}]}]}}",
  "timestamp": 49900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4980074168047\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XgGo9f3Nn0A=\"}]}]}}",
  "timestamp": 50000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499462002345\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qpb3cv/Nn0A=\"}]}]}}",
  "timestamp": 50100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998547406192\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"187r2f/Nn0A=\"}]}]}}",
  "timestamp": 50200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999607799662\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"8/y39f/Nn0A=\"}]}]}}",
  "timestamp": 50300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999894105908\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vls5/f/Nn0A=\"}]}]}}",
  "timestamp": 50400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999971408595\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VyBA///Nn0A=\"}]}]}}",
  "timestamp": 50500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999228032\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sTHM///Nn0A=\"}]}]}}",
  "timestamp": 50600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999997915686\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"LQPy///Nn0A=\"}]}]}}",
  "timestamp": 50700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999437237\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ljn8///Nn0A=\"}]}]}}",
  "timestamp": 50800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999848053\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9fr+///Nn0A=\"}]}]}}",
  "timestamp": 50900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999958975\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hbn////Nn0A=\"}]}]}}",
  "timestamp": 51000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999988922\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+Oz////Nn0A=\"}]}]}}",
  "timestamp": 51100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999997008\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3Pr////Nn0A=\"}]}]}}",
  "timestamp": 51200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999193\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nf7////Nn0A=\"}]}]}}",
  "timestamp": 51300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999782\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oP/////Nn0A=\"}]}]}}",
  "timestamp": 51400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999999994\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5v/////Nn0A=\"}]}]}}",
  "timestamp": 51500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999984\nKELP position: 0\nSELL: -3 @ 2036\nBUY: 73 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+f/////Nn0A=\"}]}]}}",
  "timestamp": 51600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999995\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/v/////Nn0A=\"}]}]}}",
  "timestamp": 51700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 51800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 51900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 52000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1349878948354\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"skZEOorMn0A=\"}]}]}}",
  "timestamp": 52100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.036445849206\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qYkPUiXMn0A=\"}]}]}}",
  "timestamp": 52200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0098403149598\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vVuUEwrMn0A=\"}]}]}}",
  "timestamp": 52300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.00265688035\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2jh8uALMn0A=\"}]}]}}",
  "timestamp": 52400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0007173573526\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"egkNvADMn0A=\"}]}]}}",
  "timestamp": 52500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0001936864603\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DRTGMgDMn0A=\"}]}]}}",
  "timestamp": 52600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000522953421\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 75 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"I3u1DQDMn0A=\"}]}]}}",
  "timestamp": 52700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000141197422\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"U4+zAwDMn0A=\"}]}]}}",
  "timestamp": 52800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000038123303\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vtf/AADMn0A=\"}]}]}}",
  "timestamp": 52900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000010293293\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vhNFAADMn0A=\"}]}]}}",
  "timestamp": 53000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000002779188\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nKYSAADMn0A=\"}]}]}}",
  "timestamp": 53100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.364987969431\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 73 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jwBov3XNn0A=\"}]}]}}",
  "timestamp": 53200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4635458691807\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"T7HEq9rNn0A=\"}]}]}}",
  "timestamp": 53300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4901573203383\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -11 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/vLM6/XNn0A=\"}]}]}}",
  "timestamp": 53400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.497342471801\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ME1YR/3Nn0A=\"}]}]}}",
  "timestamp": 53500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4992824670444\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sC3nQ//Nn0A=\"}]}]}}",
  "timestamp": 53600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998062660773\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jbw2zf/Nn0A=\"}]}]}}",
  "timestamp": 53700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499947691839\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"o6hJ8v/Nn0A=\"}]}]}}",
  "timestamp": 53800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999858767965\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"NjVM/P/Nn0A=\"}]}]}}",
  "timestamp": 53900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499996186735\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mxgA///Nn0A=\"}]}]}}",
  "timestamp": 54000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999989704183\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7Oe6///Nn0A=\"}]}]}}",
  "timestamp": 54100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999722013\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OFjt///Nn0A=\"}]}]}}",
  "timestamp": 54200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999249435\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ivb6///Nn0A=\"}]}]}}",
  "timestamp": 54300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999797346\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2KP+///Nn0A=\"}]}]}}",
  "timestamp": 54400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999945283\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/6H////Nn0A=\"}]}]}}",
  "timestamp": 54500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999985228\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"n+b////Nn0A=\"}]}]}}",
  "timestamp": 54600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999996012\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jvn////Nn0A=\"}]}]}}",
  "timestamp": 54700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999998925\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"J/7////Nn0A=\"}]}]}}",
  "timestamp": 54800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999999971\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gP/////Nn0A=\"}]}]}}",
  "timestamp": 54900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999999992\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3f/////Nn0A=\"}]}]}}",
  "timestamp": 55000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999977\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9v/////Nn0A=\"}]}]}}",
  "timestamp": 55100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999993\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/f/////Nn0A=\"}]}]}}",
  "timestamp": 55200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 55300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -17 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 55400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 55500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 55600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 55700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1349878948354\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -41 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"skZEOorMn0A=\"}]}]}}",
  "timestamp": 55800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.401440280339\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ai0pE5vNn0A=\"}]}]}}",
  "timestamp": 55900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4733884053683\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cx3uv+TNn0A=\"}]}]}}",
  "timestamp": 56000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1278040184638\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Zn4O34LMn0A=\"}]}]}}",
  "timestamp": 56100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.399500377269\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cXygFpnNn0A=\"}]}]}}",
  "timestamp": 56200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4728646128424\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"YP6eNuTNn0A=\"}]}]}}",
  "timestamp": 56300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1276626184792\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KU39uYLMn0A=\"}]}]}}",
  "timestamp": 56400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3994621941752\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4g+eDJnNn0A=\"}]}]}}",
  "timestamp": 56500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4728543030355\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ph3rM+TNn0A=\"}]}]}}",
  "timestamp": 56600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1276598353038\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"koZCuYLMn0A=\"}]}]}}",
  "timestamp": 56700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0344673663355\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -42 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"w8xpSyPMn0A=\"}]}]}}",
  "timestamp": 56800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0093061313794\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"teeLhwnMn0A=\"}]}]}}",
  "timestamp": 56900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0025126512783\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"RCytkgLMn0A=\"}]}]}}",
  "timestamp": 57000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0006784155396\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 74 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ObLXsQDMn0A=\"}]}]}}",
  "timestamp": 57100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0001831721736\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+3kEMADMn0A=\"}]}]}}",
  "timestamp": 57200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000494564854\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"8/f2DADMn0A=\"}]}]}}",
  "timestamp": 57300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000133532508\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Gh+AAwDMn0A=\"}]}]}}",
  "timestamp": 57400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000036053777\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6/PxAADMn0A=\"}]}]}}",
  "timestamp": 57500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000009734517\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xlNBAADMn0A=\"}]}]}}",
  "timestamp": 57600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000002628321\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bKMRAADMn0A=\"}]}]}}",
  "timestamp": 57700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000709647\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -41 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KsMEAADMn0A=\"}]}]}}",
  "timestamp": 57800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000191608\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"LkkBAADMn0A=\"}]}]}}",
  "timestamp": 57900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000051734\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4VgAAADMn0A=\"}]}]}}",
  "timestamp": 58000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000013968\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/xcAAADMn0A=\"}]}]}}",
  "timestamp": 58100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000003772\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ewYAAADMn0A=\"}]}]}}",
  "timestamp": 58200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000001016\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vwEAAADMn0A=\"}]}]}}",
  "timestamp": 58300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000275\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eQAAAADMn0A=\"}]}]}}",
  "timestamp": 58400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000073\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IAAAAADMn0A=\"}]}]}}",
  "timestamp": 58500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000018\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CAAAAADMn0A=\"}]}]}}",
  "timestamp": 58600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000005\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AgAAAADMn0A=\"}]}]}}",
  "timestamp": 58700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 58800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 75 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 58900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 59000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 59100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3649878943795\nKELP position: 0\nSELL: -10 @ 2036\nBUY: 75 @ 2035\nSELL: -40 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"L/div3XNn0A=\"}]}]}}",
  "timestamp": 59200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4635458489158\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KVXDq9rNn0A=\"}]}]}}",
  "timestamp": 59300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1251469747228\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"g06HJoDMn0A=\"}]}]}}",
  "timestamp": 59400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0337889247417\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7lqQmSLMn0A=\"}]}]}}",
  "timestamp": 59500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0091229543914\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"BBuHVwnMn0A=\"}]}]}}",
  "timestamp": 59600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3674515298212\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"yr02RXjNn0A=\"}]}]}}",
  "timestamp": 59700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.464211062401\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0Q0lWtvNn0A=\"}]}]}}",
  "timestamp": 59800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4903369248345\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vgDiGvbNn0A=\"}]}]}}",
  "timestamp": 59900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4973909651844\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"LKMOVP3Nn0A=\"}]}]}}",
  "timestamp": 60000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4992955602702\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mNlVR//Nn0A=\"}]}]}}",
  "timestamp": 60100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998098012488\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vvojzv/Nn0A=\"}]}]}}",
  "timestamp": 60200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.13493655038\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"q5vOLIrMn0A=\"}]}]}}",
  "timestamp": 60300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4014264155212\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qLmGD5vNn0A=\"}]}]}}",
  "timestamp": 60400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1083773293146\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"I3R3+m7Mn0A=\"}]}]}}",
  "timestamp": 60500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.02926131012\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"BEit9h3Mn0A=\"}]}]}}",
  "timestamp": 60600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.007900512268\nKELP position: 0\nSELL: -9 @ 2036\nBUY: 74 @ 2035\nSELL: -41 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QGcSFwjMn0A=\"}]}]}}",
  "timestamp": 60700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.367121412258\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Pe2s7nfNn0A=\"}]}]}}",
  "timestamp": 60800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0991162550183\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 79 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OUe7fmXMn0A=\"}]}]}}",
  "timestamp": 60900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0267609131147\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jno2ZxvMn0A=\"}]}]}}",
  "timestamp": 61000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.372214602155\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Zh3TJX3Nn0A=\"}]}]}}",
  "timestamp": 61100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4654971519694\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XBBJq9zNn0A=\"}]}]}}",
  "timestamp": 61200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.490684173395\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"lnXpdfbNn0A=\"}]}]}}",
  "timestamp": 61300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.497484722615\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kJeibP3Nn0A=\"}]}]}}",
  "timestamp": 61400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4993208747997\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 72 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5q34Tf/Nn0A=\"}]}]}}",
  "timestamp": 61500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998166361736\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"c6nuz//Nn0A=\"}]}]}}",
  "timestamp": 61600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999504917653\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AY8F8//Nn0A=\"}]}]}}",
  "timestamp": 61700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999866327764\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2fB+/P/Nn0A=\"}]}]}}",
  "timestamp": 61800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1349842863322\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"FR1SOYrMn0A=\"}]}]}}",
  "timestamp": 61900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0364448749572\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"MSjOUSXMn0A=\"}]}]}}",
  "timestamp": 62000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0098400519164\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sLSCEwrMn0A=\"}]}]}}",
  "timestamp": 62100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3676451802205\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UWb6d3jNn0A=\"}]}]}}",
  "timestamp": 62200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0992576537335\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"p2LMo2XMn0A=\"}]}]}}",
  "timestamp": 62300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.391791790346\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gvndMZHNn0A=\"}]}]}}",
  "timestamp": 62400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1057763505553\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"TbmiUGzMn0A=\"}]}]}}",
  "timestamp": 62500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.028559072828\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"NO+WPh3Mn0A=\"}]}]}}",
  "timestamp": 62600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0077109101653\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7mte5QfMn0A=\"}]}]}}",
  "timestamp": 62700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.002081942865\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EtLEIQLMn0A=\"}]}]}}",
  "timestamp": 62800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0005621243638\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CYdbkwDMn0A=\"}]}]}}",
  "timestamp": 62900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0001517735627\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9FnJJwDMn0A=\"}]}]}}",
  "timestamp": 63000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3650288805902\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7IAhynXNn0A=\"}]}]}}",
  "timestamp": 63100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0985513456496\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"K9qk6mTMn0A=\"}]}]}}",
  "timestamp": 63200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0266083929926\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 80 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zwY7PxvMn0A=\"}]}]}}",
  "timestamp": 63300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0071842318214\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4aJNWwfMn0A=\"}]}]}}",
  "timestamp": 63400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.001939740092\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CMF9/AHMn0A=\"}]}]}}",
  "timestamp": 63500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0005237296427\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 72 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wOZKiQDMn0A=\"}]}]}}",
  "timestamp": 63600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0001414069902\nKELP position: 0\nBUY: 62 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mKkRJQDMn0A=\"}]}]}}",
  "timestamp": 63700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000381798864\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dDUCCgDMn0A=\"}]}]}}",
  "timestamp": 63800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.000010308569\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3suzAgDMn0A=\"}]}]}}",
  "timestamp": 63900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000027833137\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"98i6AADMn0A=\"}]}]}}",
  "timestamp": 64000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000007514946\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"lG4yAADMn0A=\"}]}]}}",
  "timestamp": 64100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000002029035\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"250NAADMn0A=\"}]}]}}",
  "timestamp": 64200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.000000054784\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"L60DAADMn0A=\"}]}]}}",
  "timestamp": 64300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000147916\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Hv4AAADMn0A=\"}]}]}}",
  "timestamp": 64400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000039936\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -43 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nEQAAADMn0A=\"}]}]}}",
  "timestamp": 64500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000010782\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hhIAAADMn0A=\"}]}]}}",
  "timestamp": 64600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.000000000291\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAUAAADMn0A=\"}]}]}}",
  "timestamp": 64700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000787\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WgEAAADMn0A=\"}]}]}}",
  "timestamp": 64800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000211\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XQAAAADMn0A=\"}]}]}}",
  "timestamp": 64900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.000000000006\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 77 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"GgAAAADMn0A=\"}]}]}}",
  "timestamp": 65000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000018\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CAAAAADMn0A=\"}]}]}}",
  "timestamp": 65100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000005\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AgAAAADMn0A=\"}]}]}}",
  "timestamp": 65200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3649878943795\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"L/div3XNn0A=\"}]}]}}",
  "timestamp": 65300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4635458489158\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -31 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KVXDq9rNn0A=\"}]}]}}",
  "timestamp": 65400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4901573148668\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/pTM6/XNn0A=\"}]}]}}",
  "timestamp": 65500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4973424703237\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zzNYR/3Nn0A=\"}]}]}}",
  "timestamp": 65600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4992824666456\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1ibnQ//Nn0A=\"}]}]}}",
  "timestamp": 65700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998062659695\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"s7o2zf/Nn0A=\"}]}]}}",
  "timestamp": 65800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.49994769181\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"I6hJ8v/Nn0A=\"}]}]}}",
  "timestamp": 65900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999858767885\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EzVM/P/Nn0A=\"}]}]}}",
  "timestamp": 66000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499996186733\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 75 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"khgA///Nn0A=\"}]}]}}",
  "timestamp": 66100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1349868654381\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"yTH/OYrMn0A=\"}]}]}}",
  "timestamp": 66200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0364455712822\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9+L8USXMn0A=\"}]}]}}",
  "timestamp": 66300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0098402399217\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mFKPEwrMn0A=\"}]}]}}",
  "timestamp": 66400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0026568600895\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 81 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"x9x6uALMn0A=\"}]}]}}",
  "timestamp": 66500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0007173518825\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gKsMvADMn0A=\"}]}]}}",
  "timestamp": 66600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0001936849833\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rfrFMgDMn0A=\"}]}]}}",
  "timestamp": 66700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000522949438\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"S3S1DQDMn0A=\"}]}]}}",
  "timestamp": 66800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000141196347\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eo2zAwDMn0A=\"}]}]}}",
  "timestamp": 66900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3649917073647\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xdliwHXNn0A=\"}]}]}}",
  "timestamp": 67000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0985413101926\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VGID6GTMn0A=\"}]}]}}",
  "timestamp": 67100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0266056835153\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WDKFPhvMn0A=\"}]}]}}",
  "timestamp": 67200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0071835002693\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6YocWwfMn0A=\"}]}]}}",
  "timestamp": 67300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3669277848203\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -13 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"MM/qu3fNn0A=\"}]}]}}",
  "timestamp": 67400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.099063982492\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"D1QHcWXMn0A=\"}]}]}}",
  "timestamp": 67500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0267468000343\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rl2DYxvMn0A=\"}]}]}}",
  "timestamp": 67600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0072216013648\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"v3YZZQfMn0A=\"}]}]}}",
  "timestamp": 67700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.001949829843\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -42 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ot0i/wHMn0A=\"}]}]}}",
  "timestamp": 67800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3655144426752\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"BgZrSXbNn0A=\"}]}]}}",
  "timestamp": 67900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0986824302365\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 75 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OcoBDWXMn0A=\"}]}]}}",
  "timestamp": 68000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.026643784579\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -42 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oh2CSBvMn0A=\"}]}]}}",
  "timestamp": 68100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0071937874582\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eOfOXQfMn0A=\"}]}]}}",
  "timestamp": 68200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0019423201077\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XeUq/QHMn0A=\"}]}]}}",
  "timestamp": 68300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0005244262463\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"T6Z5iQDMn0A=\"}]}]}}",
  "timestamp": 68400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.000141595073\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1UgeJQDMn0A=\"}]}]}}",
  "timestamp": 68500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000382306687\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"450FCgDMn0A=\"}]}]}}",
  "timestamp": 68600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000103222803\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bbe0AgDMn0A=\"}]}]}}",
  "timestamp": 68700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000027870158\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kQi7AADMn0A=\"}]}]}}",
  "timestamp": 68800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3649886470087\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QXmVv3XNn0A=\"}]}]}}",
  "timestamp": 68900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4635460521354\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cvjQq9rNn0A=\"}]}]}}",
  "timestamp": 69000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4901573697368\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"p0PQ6/XNn0A=\"}]}]}}",
  "timestamp": 69100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.132330856528\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KHS9gYfMn0A=\"}]}]}}",
  "timestamp": 69200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4007227857278\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2u0SV5rNn0A=\"}]}]}}",
  "timestamp": 69300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4731946749505\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"NxYljeTNn0A=\"}]}]}}",
  "timestamp": 69400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4927625274486\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -17 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WHC9lvjNn0A=\"}]}]}}",
  "timestamp": 69500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.498045879875\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4je9//3Nn0A=\"}]}]}}",
  "timestamp": 69600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4994723873813\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"O4Swdf/Nn0A=\"}]}]}}",
  "timestamp": 69700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998575445795\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"g/qn2v/Nn0A=\"}]}]}}",
  "timestamp": 69800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999615370357\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Tsvq9f/Nn0A=\"}]}]}}",
  "timestamp": 69900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999896149995\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DRNH/f/Nn0A=\"}]}]}}",
  "timestamp": 70000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.49999719605\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gdRD///Nn0A=\"}]}]}}",
  "timestamp": 70100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999992429334\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sjHN///Nn0A=\"}]}]}}",
  "timestamp": 70200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.499999795592\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"TEjy///Nn0A=\"}]}]}}",
  "timestamp": 70300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.49999994481\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2Ev8///Nn0A=\"}]}]}}",
  "timestamp": 70400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999850986\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -32 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///+///Nn0A=\"}]}]}}",
  "timestamp": 70500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999959766\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4br////Nn0A=\"}]}]}}",
  "timestamp": 70600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999989136\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vu3////Nn0A=\"}]}]}}",
  "timestamp": 70700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999997067\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9vr////Nn0A=\"}]}]}}",
  "timestamp": 70800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999209\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pP7////Nn0A=\"}]}]}}",
  "timestamp": 70900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999789\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"o//////Nn0A=\"}]}]}}",
  "timestamp": 71000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999943\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -14 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5//////Nn0A=\"}]}]}}",
  "timestamp": 71100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999984\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+f/////Nn0A=\"}]}]}}",
  "timestamp": 71200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999995\nKELP position: 0\nBUY: 58 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/v/////Nn0A=\"}]}]}}",
  "timestamp": 71300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4999999999998\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Nn0A=\"}]}]}}",
  "timestamp": 71400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.1349878948354\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"skZEOorMn0A=\"}]}]}}",
  "timestamp": 71500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.036445849206\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qYkPUiXMn0A=\"}]}]}}",
  "timestamp": 71600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0098403149598\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vVuUEwrMn0A=\"}]}]}}",
  "timestamp": 71700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.00265688035\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2jh8uALMn0A=\"}]}]}}",
  "timestamp": 71800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0007173573526\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"egkNvADMn0A=\"}]}]}}",
  "timestamp": 71900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0001936864603\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DRTGMgDMn0A=\"}]}]}}",
  "timestamp": 72000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000522953421\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"I3u1DQDMn0A=\"}]}]}}",
  "timestamp": 72100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000141197422\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"U4+zAwDMn0A=\"}]}]}}",
  "timestamp": 72200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000038123303\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vtf/AADMn0A=\"}]}]}}",
  "timestamp": 72300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000010293293\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vhNFAADMn0A=\"}]}]}}",
  "timestamp": 72400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000002779188\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nKYSAADMn0A=\"}]}]}}",
  "timestamp": 72500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000750383\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JgkFAADMn0A=\"}]}]}}",
  "timestamp": 72600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000202606\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"E1wBAADMn0A=\"}]}]}}",
  "timestamp": 72700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000054702\nKELP position: 0\nBUY: 58 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+l0AAADMn0A=\"}]}]}}",
  "timestamp": 72800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.000000001477\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"YBkAAADMn0A=\"}]}]}}",
  "timestamp": 72900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000003986\nKELP position: 0\nBUY: 58 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2QYAAADMn0A=\"}]}]}}",
  "timestamp": 73000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000001075\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2QEAAADMn0A=\"}]}]}}",
  "timestamp": 73100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000289\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fwAAAADMn0A=\"}]}]}}",
  "timestamp": 73200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000077\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IgAAAADMn0A=\"}]}]}}",
  "timestamp": 73300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000023\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CgAAAADMn0A=\"}]}]}}",
  "timestamp": 73400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0000000000005\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AgAAAADMn0A=\"}]}]}}",
  "timestamp": 73500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 73600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 73700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 73800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 73900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -44 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 74000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -47 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 74100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 74200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 74300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -48 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 74400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.0\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 76 @ 2035\nSELL: -49 @ 2035\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADMn0A=\"}]}]}}",
  "timestamp": 74500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.3649878943795\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"L/div3XNn0A=\"}]}]}}",
  "timestamp": 74600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4635458489158\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KVXDq9rNn0A=\"}]}]}}",
  "timestamp": 74700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4901573148668\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/pTM6/XNn0A=\"}]}]}}",
  "timestamp": 74800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4973424703237\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zzNYR/3Nn0A=\"}]}]}}",
  "timestamp": 74900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4992824666456\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1ibnQ//Nn0A=\"}]}]}}",
  "timestamp": 75000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.4998062659695\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"s7o2zf/Nn0A=\"}]}]}}",
  "timestamp": 75100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8649355797834\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -43 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"RDGssXXPn0A=\"}]}]}}",
  "timestamp": 75200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.3285130862687\nKELP position: 0\nBUY: 77 @ 2036\nSELL: -23 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VAe8ZVDRn0A=\"}]}]}}",
  "timestamp": 75300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.7236653069647\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"p6qECOXOn0A=\"}]}]}}",
  "timestamp": 75400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.560387210986\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ICEl1j3On0A=\"}]}]}}",
  "timestamp": 75500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5163043704163\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4cYXshDOn0A=\"}]}]}}",
  "timestamp": 75600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5044021671417\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 77 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"n28AggTOn0A=\"}]}]}}",
  "timestamp": 75700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5011885841902\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"54iUNwHOn0A=\"}]}]}}",
  "timestamp": 75800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500320917663\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eGsgVADOn0A=\"}]}]}}",
  "timestamp": 75900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000866477637\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -16 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"P9W2FgDOn0A=\"}]}]}}",
  "timestamp": 76000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000233948956\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"PwEiBgDOn0A=\"}]}]}}",
  "timestamp": 76100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000063166217\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vOanAQDOn0A=\"}]}]}}",
  "timestamp": 76200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500001705488\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EHRyAADOn0A=\"}]}]}}",
  "timestamp": 76300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8649883579171\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -14 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sxKCv3XPn0A=\"}]}]}}",
  "timestamp": 76400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5985404075448\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9c7G52TOn0A=\"}]}]}}",
  "timestamp": 76500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5266054399244\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fNl0PhvOn0A=\"}]}]}}",
  "timestamp": 76600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5071834345088\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JyEYWwfOn0A=\"}]}]}}",
  "timestamp": 76700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5019395248191\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rE5v/AHOn0A=\"}]}]}}",
  "timestamp": 76800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5005236715187\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -16 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"MABHiQDOn0A=\"}]}]}}",
  "timestamp": 76900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5001413912964\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+psQJQDOn0A=\"}]}]}}",
  "timestamp": 77000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8650260798472\nKELP position: 0\nSELL: -5 @ 2036\nBUY: 72 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"hoxlyXXPn0A=\"}]}]}}",
  "timestamp": 77100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5985505911326\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"qjdy6mTOn0A=\"}]}]}}",
  "timestamp": 77200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8916008578944\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+LbQ/5DPn0A=\"}]}]}}",
  "timestamp": 77300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.6057248078598\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"icAfQ2zOn0A=\"}]}]}}",
  "timestamp": 77400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5285451569612\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bg7xOh3On0A=\"}]}]}}",
  "timestamp": 77500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8726964322611\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ly8ipH3Pn0A=\"}]}]}}",
  "timestamp": 77600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9656272522416\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"BPJjzdzPn0A=\"}]}]}}",
  "timestamp": 77700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9907193009162\nKELP position: 0\nBUY: 81 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ztMef/bPn0A=\"}]}]}}",
  "timestamp": 77800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9974942070783\nKELP position: 0\nSELL: -1 @ 2037\nBUY: 76 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ZxUfb/3Pn0A=\"}]}]}}",
  "timestamp": 77900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.364311214646\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -29 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4sH/DXXRn0A=\"}]}]}}",
  "timestamp": 78000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4633631369563\nKELP position: 0\nBUY: 74 @ 2036\nSELL: -27 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mb3de9rRn0A=\"}]}]}}",
  "timestamp": 78100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4901079820233\nKELP position: 0\nSELL: -1 @ 2037\nBUY: 74 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Mund3vXRn0A=\"}]}]}}",
  "timestamp": 78200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.497329150411\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"c1HaQ/3Rn0A=\"}]}]}}",
  "timestamp": 78300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4992788702657\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gM31Qv/Rn0A=\"}]}]}}",
  "timestamp": 78400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4998052949466\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"p5D1zP/Rn0A=\"}]}]}}",
  "timestamp": 78500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999474296337\nKELP position: 0\nBUY: 53 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/A848v/Rn0A=\"}]}]}}",
  "timestamp": 78600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.499985806001\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9HRH/P/Rn0A=\"}]}]}}",
  "timestamp": 78700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.49999616762\nKELP position: 0\nBUY: 79 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"N9D+/v/Rn0A=\"}]}]}}",
  "timestamp": 78800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999989652574\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Qo+6///Rn0A=\"}]}]}}",
  "timestamp": 78900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999997206196\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"SEDt///Rn0A=\"}]}]}}",
  "timestamp": 79000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999245672\nKELP position: 0\nBUY: 70 @ 2036\nSELL: -30 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"E/D6///Rn0A=\"}]}]}}",
  "timestamp": 79100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999796332\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"GqL+///Rn0A=\"}]}]}}",
  "timestamp": 79200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.499999994501\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"h6H////Rn0A=\"}]}]}}",
  "timestamp": 79300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999985152\nKELP position: 0\nBUY: 79 @ 2036\nSELL: -17 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fub////Rn0A=\"}]}]}}",
  "timestamp": 79400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999995991\nKELP position: 0\nSELL: -7 @ 2037\nBUY: 78 @ 2036\nSELL: -43 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Hfn////Rn0A=\"}]}]}}",
  "timestamp": 79500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.499999999892\nKELP position: 0\nBUY: 53 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Jf7////Rn0A=\"}]}]}}",
  "timestamp": 79600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.499999999971\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gP/////Rn0A=\"}]}]}}",
  "timestamp": 79700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.1349879007726\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sqxEOorQn0A=\"}]}]}}",
  "timestamp": 79800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0364458512424\nKELP position: 0\nBUY: 79 @ 2036\nSELL: -47 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pawPUiXQn0A=\"}]}]}}",
  "timestamp": 79900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0098403155412\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"umWUEwrQn0A=\"}]}]}}",
  "timestamp": 80000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.002656880509\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"lTt8uALQn0A=\"}]}]}}",
  "timestamp": 80100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0007173573956\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"NwoNvADQn0A=\"}]}]}}",
  "timestamp": 80200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000193686472\nKELP position: 0\nBUY: 56 @ 2036\nSELL: -29 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QBTGMgDQn0A=\"}]}]}}",
  "timestamp": 80300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000522953455\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Mnu1DQDQn0A=\"}]}]}}",
  "timestamp": 80400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000014119743\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vo+zAwDQn0A=\"}]}]}}",
  "timestamp": 80500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000038123308\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"WNf/AADQn0A=\"}]}]}}",
  "timestamp": 80600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000010293293\nKELP position: 0\nBUY: 74 @ 2036\nSELL: -26 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"vhNFAADQn0A=\"}]}]}}",
  "timestamp": 80700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000002779188\nKELP position: 0\nBUY: 56 @ 2036\nSELL: -26 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nKYSAADQn0A=\"}]}]}}",
  "timestamp": 80800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000000075038\nKELP position: 0\nBUY: 56 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"JQkFAADQn0A=\"}]}]}}",
  "timestamp": 80900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000202601\nKELP position: 0\nBUY: 81 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EVwBAADQn0A=\"}]}]}}",
  "timestamp": 81000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000054702\nKELP position: 0\nBUY: 74 @ 2036\nSELL: -26 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+l0AAADQn0A=\"}]}]}}",
  "timestamp": 81100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000000001477\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"YBkAAADQn0A=\"}]}]}}",
  "timestamp": 81200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000003988\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2gYAAADQn0A=\"}]}]}}",
  "timestamp": 81300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000001075\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2QEAAADQn0A=\"}]}]}}",
  "timestamp": 81400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000000289\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fwAAAADQn0A=\"}]}]}}",
  "timestamp": 81500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.3649879003324\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dF1jv3XRn0A=\"}]}]}}",
  "timestamp": 81600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4635458509565\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OHjDq9rRn0A=\"}]}]}}",
  "timestamp": 81700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4901573154493\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -29 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AJ/M6/XRn0A=\"}]}]}}",
  "timestamp": 81800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.1323308475855\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"h9q8gYfQn0A=\"}]}]}}",
  "timestamp": 81900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4007227865277\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mPsSV5rRn0A=\"}]}]}}",
  "timestamp": 82000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4731946754007\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"8x0ljeTRn0A=\"}]}]}}",
  "timestamp": 82100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.492762527587\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"uXK9lvjRn0A=\"}]}]}}",
  "timestamp": 82200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4980458799137\nKELP position: 0\nBUY: 82 @ 2036\nSELL: -18 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jDi9//3Rn0A=\"}]}]}}",
  "timestamp": 82300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.499472387392\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"aoSwdf/Rn0A=\"}]}]}}",
  "timestamp": 82400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4998575445823\nKELP position: 0\nBUY: 74 @ 2036\nSELL: -26 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"j/qn2v/Rn0A=\"}]}]}}",
  "timestamp": 82500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999615370364\nKELP position: 0\nBUY: 55 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ucvq9f/Rn0A=\"}]}]}}",
  "timestamp": 82600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999896149998\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -18 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DhNH/f/Rn0A=\"}]}]}}",
  "timestamp": 82700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.49999719605\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -29 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gdRD///Rn0A=\"}]}]}}",
  "timestamp": 82800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999992429334\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -29 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sjHN///Rn0A=\"}]}]}}",
  "timestamp": 82900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999997955922\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -20 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"TUjy///Rn0A=\"}]}]}}",
  "timestamp": 83000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.49999994481\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2Ev8///Rn0A=\"}]}]}}",
  "timestamp": 83100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999850988\nKELP position: 0\nBUY: 81 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAD////Rn0A=\"}]}]}}",
  "timestamp": 83200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999959766\nKELP position: 0\nBUY: 73 @ 2036\nSELL: -27 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4br////Rn0A=\"}]}]}}",
  "timestamp": 83300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999989138\nKELP position: 0\nBUY: 53 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"V+3////Rn0A=\"}]}]}}",
  "timestamp": 83400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999997067\nKELP position: 0\nSELL: -1 @ 2037\nBUY: 80 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"9vr////Rn0A=\"}]}]}}",
  "timestamp": 83500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4999999999209\nKELP position: 0\nBUY: 74 @ 2036\nSELL: -26 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pP7////Rn0A=\"}]}]}}",
  "timestamp": 83600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.134987900759\nKELP position: 0\nBUY: 77 @ 2036\nSELL: -23 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dqxEOorQn0A=\"}]}]}}",
  "timestamp": 83700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0364458512388\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"lawPUiXQn0A=\"}]}]}}",
  "timestamp": 83800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0098403155403\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"tmWUEwrQn0A=\"}]}]}}",
  "timestamp": 83900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.002656880509\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -30 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"lTt8uALQn0A=\"}]}]}}",
  "timestamp": 84000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.365705386319\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -20 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2Ah5e3bRn0A=\"}]}]}}",
  "timestamp": 84100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0987339814405\nKELP position: 0\nBUY: 81 @ 2036\nSELL: -48 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KlWFGmXQn0A=\"}]}]}}",
  "timestamp": 84200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.026657703143\nKELP position: 0\nBUY: 70 @ 2036\nSELL: -45 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"viwoTBvQn0A=\"}]}]}}",
  "timestamp": 84300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0071975454516\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ThnLXgfQn0A=\"}]}]}}",
  "timestamp": 84400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0019433347645\nKELP position: 0\nBUY: 74 @ 2036\nSELL: -45 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Cf1u/QHQn0A=\"}]}]}}",
  "timestamp": 84500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0005247002039\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -20 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3QiMiQDQn0A=\"}]}]}}",
  "timestamp": 84600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0001416690418\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mz8jJQDQn0A=\"}]}]}}",
  "timestamp": 84700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000382506403\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"//QGCgDQn0A=\"}]}]}}",
  "timestamp": 84800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000103276727\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ERS1AgDQn0A=\"}]}]}}",
  "timestamp": 84900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000027884716\nKELP position: 0\nBUY: 53 @ 2036\nSELL: -26 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"lCG7AADQn0A=\"}]}]}}",
  "timestamp": 85000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000007528874\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"goYyAADQn0A=\"}]}]}}",
  "timestamp": 85100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000002032796\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -46 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UaQNAADQn0A=\"}]}]}}",
  "timestamp": 85200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000548855\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -20 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7a4DAADQn0A=\"}]}]}}",
  "timestamp": 85300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000148193\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mP4AAADQn0A=\"}]}]}}",
  "timestamp": 85400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.3649879043264\nKELP position: 0\nBUY: 55 @ 2036\nSELL: -29 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"EqJjv3XRn0A=\"}]}]}}",
  "timestamp": 85500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.463545852035\nKELP position: 0\nBUY: 79 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"v4rDq9rRn0A=\"}]}]}}",
  "timestamp": 85600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4901573157406\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AaTM6/XRn0A=\"}]}]}}",
  "timestamp": 85700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.1323308476642\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4du8gYfQn0A=\"}]}]}}",
  "timestamp": 85800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0357284812817\nKELP position: 0\nBUY: 73 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kMoBliTQn0A=\"}]}]}}",
  "timestamp": 85900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.009646628158\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -46 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0kHO4AnQn0A=\"}]}]}}",
  "timestamp": 86000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0026045850982\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -48 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"RL/GqgLQn0A=\"}]}]}}",
  "timestamp": 86100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0007032376482\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -23 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zXpZuADQn0A=\"}]}]}}",
  "timestamp": 86200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0001898741411\nKELP position: 0\nBUY: 82 @ 2036\nSELL: -43 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6DzGMQDQn0A=\"}]}]}}",
  "timestamp": 86300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000512660163\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -48 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dGdwDQDQn0A=\"}]}]}}",
  "timestamp": 86400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.3650017446303\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -23 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"rnAEw3XRn0A=\"}]}]}}",
  "timestamp": 86500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4635495890977\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/1S+rNrRn0A=\"}]}]}}",
  "timestamp": 86600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.4901583247606\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -47 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"1loQ7PXRn0A=\"}]}]}}",
  "timestamp": 86700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.132331120052\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -20 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dyPPgYfQn0A=\"}]}]}}",
  "timestamp": 86800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0357285548228\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/bkGliTQn0A=\"}]}]}}",
  "timestamp": 86900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0096466480138\nKELP position: 0\nBUY: 77 @ 2036\nSELL: -23 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"8ZbP4AnQn0A=\"}]}]}}",
  "timestamp": 87000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0026045904594\nKELP position: 0\nBUY: 77 @ 2036\nSELL: -23 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"XxvHqgLQn0A=\"}]}]}}",
  "timestamp": 87100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0007032390956\nKELP position: 0\nBUY: 73 @ 2036\nSELL: -27 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"q5NZuADQn0A=\"}]}]}}",
  "timestamp": 87200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0001898745318\nKELP position: 0\nBUY: 79 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nkPGMQDQn0A=\"}]}]}}",
  "timestamp": 87300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000512661218\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"RGlwDQDQn0A=\"}]}]}}",
  "timestamp": 87400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000138418527\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OOmgAwDQn0A=\"}]}]}}",
  "timestamp": 87500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000037373004\nKELP position: 0\nBUY: 81 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Vc76AADQn0A=\"}]}]}}",
  "timestamp": 87600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000001009071\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -25 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"tbdDAADQn0A=\"}]}]}}",
  "timestamp": 87700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000002724491\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -42 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pEgSAADQn0A=\"}]}]}}",
  "timestamp": 87800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000000073561\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xe8EAADQn0A=\"}]}]}}",
  "timestamp": 87900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000198613\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"N1UBAADQn0A=\"}]}]}}",
  "timestamp": 88000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000053626\nKELP position: 0\nBUY: 79 @ 2036\nSELL: -21 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IVwAAADQn0A=\"}]}]}}",
  "timestamp": 88100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000000001448\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"4BgAAADQn0A=\"}]}]}}",
  "timestamp": 88200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.000000000391\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -40 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"uAYAAADQn0A=\"}]}]}}",
  "timestamp": 88300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000001057\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -26 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0QEAAADQn0A=\"}]}]}}",
  "timestamp": 88400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000000284\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -28 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"fQAAAADQn0A=\"}]}]}}",
  "timestamp": 88500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000000077\nKELP position: 0\nBUY: 54 @ 2036\nSELL: -20 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"IgAAAADQn0A=\"}]}]}}",
  "timestamp": 88600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000000023\nKELP position: 0\nBUY: 52 @ 2036\nSELL: -45 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CgAAAADQn0A=\"}]}]}}",
  "timestamp": 88700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0000000000005\nKELP position: 0\nBUY: 79 @ 2036\nSELL: -48 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AgAAAADQn0A=\"}]}]}}",
  "timestamp": 88800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 77 @ 2036\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 88900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 74 @ 2036\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 81 @ 2036\nSELL: -43 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 82 @ 2036\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 75 @ 2036\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 73 @ 2036\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nSELL: -1 @ 2037\nBUY: 77 @ 2036\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 89900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 72 @ 2036\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 90000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 58 @ 2036\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 90100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 56 @ 2036\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 90200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"AAAAAADQn0A=\"}]}]}}",
  "timestamp": 90300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.6349878978085\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xnlEOorOn0A=\"}]}]}}",
  "timestamp": 90400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9014402827268\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -42 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"b1YpE5vPn0A=\"}]}]}}",
  "timestamp": 90500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9733884061284\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"giruv+TPn0A=\"}]}]}}",
  "timestamp": 90600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9928148353758\nKELP position: 0\nBUY: 70 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"scNzpPjPn0A=\"}]}]}}",
  "timestamp": 90700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.633048248662\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"LNPMPYjOn0A=\"}]}]}}",
  "timestamp": 90800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5359221701258\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kQfIyCTOn0A=\"}]}]}}",
  "timestamp": 90900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.509698923459\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"QLyD7gnOn0A=\"}]}]}}",
  "timestamp": 91000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5026187047795\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"i016rgLOn0A=\"}]}]}}",
  "timestamp": 91100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5007070499587\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zFFZuQDOn0A=\"}]}]}}",
  "timestamp": 91200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5001909034645\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"jFALMgDOn0A=\"}]}]}}",
  "timestamp": 91300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5000515439335\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CQ6DDQDOn0A=\"}]}]}}",
  "timestamp": 91400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500013916862\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3vGlAwDOn0A=\"}]}]}}",
  "timestamp": 91500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.500003757553\nKELP position: 0\nSELL: -3 @ 2036\nBUY: 72 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"RSr8AADOn0A=\"}]}]}}",
  "timestamp": 91600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.864988912074\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"C0Onv3XPn0A=\"}]}]}}",
  "timestamp": 91700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9635461239232\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wMnVq9rPn0A=\"}]}]}}",
  "timestamp": 91800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9901573891357\nKELP position: 0\nSELL: -3 @ 2036\nBUY: 51 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7JDR6/XPn0A=\"}]}]}}",
  "timestamp": 91900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9973424903774\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -44 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VIxZR/3Pn0A=\"}]}]}}",
  "timestamp": 92000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.99928247206\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -19 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"24PnQ//Pn0A=\"}]}]}}",
  "timestamp": 92100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9998062674313\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0NM2zf/Pn0A=\"}]}]}}",
  "timestamp": 92200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.6349355993907\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"zMmOLIrOn0A=\"}]}]}}",
  "timestamp": 92300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5364317303358\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UQlcTiXOn0A=\"}]}]}}",
  "timestamp": 92400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5098365029305\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"k4mUEgrOn0A=\"}]}]}}",
  "timestamp": 92500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8676442246833\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UEa6d3jPn0A=\"}]}]}}",
  "timestamp": 92600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9642630926935\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"b7/IZ9vPn0A=\"}]}]}}",
  "timestamp": 92700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.990350973209\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+sWQHvbPn0A=\"}]}]}}",
  "timestamp": 92800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9973947582598\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -48 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ti8NVf3Pn0A=\"}]}]}}",
  "timestamp": 92900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9992965844015\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CZSaR//Pn0A=\"}]}]}}",
  "timestamp": 93000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9998100777646\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"14g2zv/Pn0A=\"}]}]}}",
  "timestamp": 93100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999487209946\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"ZbmO8v/Pn0A=\"}]}]}}",
  "timestamp": 93200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999861546682\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"A9te/P/Pn0A=\"}]}]}}",
  "timestamp": 93300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999962617603\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"iCEF///Pn0A=\"}]}]}}",
  "timestamp": 93400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999998990675\nKELP position: 0\nSELL: -5 @ 2036\nBUY: 79 @ 2035\nSELL: -45 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"7kO8///Pn0A=\"}]}]}}",
  "timestamp": 93500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999997274822\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Lrbt///Pn0A=\"}]}]}}",
  "timestamp": 93600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.99999992642\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"6A/7///Pn0A=\"}]}]}}",
  "timestamp": 93700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999801335\nKELP position: 0\nBUY: 56 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"sqr+///Pn0A=\"}]}]}}",
  "timestamp": 93800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999994636\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"2aP////Pn0A=\"}]}]}}",
  "timestamp": 93900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999985519\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -42 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"H+f////Pn0A=\"}]}]}}",
  "timestamp": 94000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.3649878999336\nKELP position: 0\nBUY: 81 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mlZjv3XRn0A=\"}]}]}}",
  "timestamp": 94100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.098540285489\nKELP position: 0\nBUY: 53 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Dp6+52TQn0A=\"}]}]}}",
  "timestamp": 94200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.3915980768857\nKELP position: 0\nBUY: 81 @ 2036\nSELL: -19 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"mhUW/5DRn0A=\"}]}]}}",
  "timestamp": 94300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.1057240589157\nKELP position: 0\nBUY: 73 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xn3tQmzQn0A=\"}]}]}}",
  "timestamp": 94400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.028544954887\nKELP position: 0\nBUY: 71 @ 2036\nSELL: -29 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0n7jOh3Qn0A=\"}]}]}}",
  "timestamp": 94500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0077070983796\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -48 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"851e5AfQn0A=\"}]}]}}",
  "timestamp": 94600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0020809136875\nKELP position: 0\nBUY: 51 @ 2036\nSELL: -49 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"78B/IQLQn0A=\"}]}]}}",
  "timestamp": 94700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.6355496435672\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bJiGzYrOn0A=\"}]}]}}",
  "timestamp": 94800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5365975142229\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"z5rReSXOn0A=\"}]}]}}",
  "timestamp": 94900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5098812639942\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -14 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"y2ZQHgrOn0A=\"}]}]}}",
  "timestamp": 95000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.502667936551\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 72 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"8DBiuwLOn0A=\"}]}]}}",
  "timestamp": 95100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8657083690425\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"pTNBfHbPn0A=\"}]}]}}",
  "timestamp": 95200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9637403866836\nKELP position: 0\nBUY: 54 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kIrC3trPn0A=\"}]}]}}",
  "timestamp": 95300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9902098407647\nKELP position: 0\nBUY: 51 @ 2035\nSELL: -20 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DImR+fXPn0A=\"}]}]}}",
  "timestamp": 95400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.997356652367\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"dfEPS/3Pn0A=\"}]}]}}",
  "timestamp": 95500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9992862958009\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"OR/oRP/Pn0A=\"}]}]}}",
  "timestamp": 95600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.6347952321971\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"xufCB4rOn0A=\"}]}]}}",
  "timestamp": 95700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5363938330268\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"gcpsRCXOn0A=\"}]}]}}",
  "timestamp": 95800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5098262707909\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 74 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"wd7lDwrOn0A=\"}]}]}}",
  "timestamp": 95900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5026530884388\nKELP position: 0\nSELL: -1 @ 2036\nBUY: 71 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"UMB9twLOn0A=\"}]}]}}",
  "timestamp": 96000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.5007163335379\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"eVTIuwDOn0A=\"}]}]}}",
  "timestamp": 96100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8651813420638\nKELP position: 0\nBUY: 71 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"GAUZ8nXPn0A=\"}]}]}}",
  "timestamp": 96200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.963598082534\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"46t0udrPn0A=\"}]}]}}",
  "timestamp": 96300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.625161078011\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -16 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"KMM5KoDOn0A=\"}]}]}}",
  "timestamp": 96400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.8987866894122\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -44 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"bLSJW5jPn0A=\"}]}]}}",
  "timestamp": 96500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9726719102728\nKELP position: 0\nSELL: -3 @ 2036\nBUY: 75 @ 2035\nSELL: -47 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"cPEaBOTPn0A=\"}]}]}}",
  "timestamp": 96600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9926213796243\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"MCu9cfjPn0A=\"}]}]}}",
  "timestamp": 96700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9980077698633\nKELP position: 0\nBUY: 80 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3rK/9f3Pn0A=\"}]}]}}",
  "timestamp": 96800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999462097671\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"W/z9cv/Pn0A=\"}]}]}}",
  "timestamp": 96900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9998547663572\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"BInt2f/Pn0A=\"}]}]}}",
  "timestamp": 97000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999607869154\nKELP position: 0\nBUY: 58 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"VnS49f/Pn0A=\"}]}]}}",
  "timestamp": 97100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999894124671\nKELP position: 0\nBUY: 55 @ 2035\nSELL: -30 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"kns5/f/Pn0A=\"}]}]}}",
  "timestamp": 97200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999971413663\nKELP position: 0\nSELL: -1 @ 2037\nBUY: 71 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"DClA///Pn0A=\"}]}]}}",
  "timestamp": 97300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999228169\nKELP position: 0\nSELL: -1 @ 2037\nBUY: 80 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"CzTM///Pn0A=\"}]}]}}",
  "timestamp": 97400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999997916057\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0APy///Pn0A=\"}]}]}}",
  "timestamp": 97500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999437337\nKELP position: 0\nBUY: 52 @ 2035\nSELL: -44 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Wjn8///Pn0A=\"}]}]}}",
  "timestamp": 97600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999848083\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Avv+///Pn0A=\"}]}]}}",
  "timestamp": 97700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999958982\nKELP position: 0\nBUY: 57 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"iLn////Pn0A=\"}]}]}}",
  "timestamp": 97800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999988927\nKELP position: 0\nBUY: 73 @ 2035\nSELL: -27 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+uz////Pn0A=\"}]}]}}",
  "timestamp": 97900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999997012\nKELP position: 0\nBUY: 77 @ 2035\nSELL: -23 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3vr////Pn0A=\"}]}]}}",
  "timestamp": 98000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999193\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"nf7////Pn0A=\"}]}]}}",
  "timestamp": 98100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999782\nKELP position: 0\nBUY: 79 @ 2035\nSELL: -21 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oP/////Pn0A=\"}]}]}}",
  "timestamp": 98200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.999999999994\nKELP position: 0\nBUY: 53 @ 2035\nSELL: -29 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"5v/////Pn0A=\"}]}]}}",
  "timestamp": 98300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999984\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -22 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"+f/////Pn0A=\"}]}]}}",
  "timestamp": 98400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999995\nKELP position: 0\nBUY: 82 @ 2035\nSELL: -18 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"/v/////Pn0A=\"}]}]}}",
  "timestamp": 98500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 74 @ 2035\nSELL: -26 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 98600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 98700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -25 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 98800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 75 @ 2035\nSELL: -46 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 98900
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 78 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 99000
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 72 @ 2035\nSELL: -28 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 99100
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nBUY: 76 @ 2035\nSELL: -24 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 99200
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2035.9999999999998\nKELP position: 0\nSELL: -1 @ 2037\nBUY: 73 @ 2035\nSELL: -49 @ 2036\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"///////Pn0A=\"}]}]}}",
  "timestamp": 99300
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.3649879003246\nKELP position: 0\nBUY: 80 @ 2036\nSELL: -20 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"Ul1jv3XRn0A=\"}]}]}}",
  "timestamp": 99400
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0985402855943\nKELP position: 0\nBUY: 70 @ 2036\nSELL: -30 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"3Z++52TQn0A=\"}]}]}}",
  "timestamp": 99500
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0266054071144\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -22 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"0KVyPhvQn0A=\"}]}]}}",
  "timestamp": 99600
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0071834256587\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"HIkXWwfQn0A=\"}]}]}}",
  "timestamp": 99700
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0019395224301\nKELP position: 0\nBUY: 76 @ 2036\nSELL: -24 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"oSVv/AHQn0A=\"}]}]}}",
  "timestamp": 99800
}
{
  "sandboxLog": "\nOrders for product KELP exceeded limit of 50 set",
  "lambdaLog": "KELP fair value: 2036.0005236708741\nKELP position: 0\nBUY: 78 @ 2036\nSELL: -23 @ 2037\n{\"kelp_last_price\": {\"py/reduce\": [{\"py/function\": \"numpy.core.multiarray.scalar\"}, {\"py/tuple\": [{\"py/reduce\": [{\"py/type\": \"numpy.dtype\"}, {\"py/tuple\": [\"f8\", false, true]}, {\"py/tuple\": [3, \"<\", null, null, null, -1, -1, 0]}]}, {\"py/b64\": \"HfVGiQDQn0A=\"}]}]}}",
  "timestamp": 99900
}



Activities log:
day;timestamp;product;bid_price_1;bid_volume_1;bid_price_2;bid_volume_2;bid_price_3;bid_volume_3;ask_price_1;ask_volume_1;ask_price_2;ask_volume_2;ask_price_3;ask_volume_3;mid_price;profit_and_loss
1;0;SQUID_INK;1834;23;;;;;1838;23;;;;;1836.0;0.0
1;0;RAINFOREST_RESIN;9998;9;9995;23;;;10005;23;;;;;10001.5;0.0
1;0;KELP;2032;23;;;;;2035;23;;;;;2033.5;0.0
1;100;KELP;2034;1;2033;2;2032;22;2035;22;;;;;2034.5;0.0
1;100;SQUID_INK;1837;1;1836;2;1835;22;1839;22;;;;;1838.0;0.0
1;100;RAINFOREST_RESIN;10002;1;10000;2;9998;4;10004;1;10005;21;;;10003.0;0.0
1;200;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;200;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;200;SQUID_INK;1832;22;;;;;1835;22;;;;;1833.5;0.0
1;300;KELP;2034;1;2032;26;;;2035;26;;;;;2034.5;0.0
1;300;SQUID_INK;1836;1;1834;26;;;1837;26;;;;;1836.5;0.0
1;300;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;400;SQUID_INK;1833;28;;;;;1836;28;;;;;1834.5;0.0
1;400;RAINFOREST_RESIN;9998;8;9996;2;9995;26;10004;2;10005;26;;;10001.0;0.0
1;400;KELP;2032;28;;;;;2035;28;;;;;2033.5;0.0
1;500;KELP;2032;24;;;;;2034;3;2035;24;;;2033.0;0.0
1;500;SQUID_INK;1834;24;;;;;1836;3;1837;24;;;1835.0;0.0
1;500;RAINFOREST_RESIN;9998;8;9996;1;9995;23;10004;1;10005;23;;;10001.0;0.0
1;600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;600;KELP;2033;5;2032;30;;;2035;30;;;;;2034.0;0.0
1;600;SQUID_INK;1834;5;1832;30;;;1835;30;;;;;1834.5;0.0
1;700;KELP;2032;22;;;;;2035;23;;;;;2033.5;0.0
1;700;SQUID_INK;1834;22;;;;;1837;1;1838;22;;;1835.5;0.0
1;700;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;800;SQUID_INK;1836;25;;;;;1837;3;1839;25;;;1836.5;0.0
1;800;RAINFOREST_RESIN;9996;1;9995;24;;;10000;3;10004;1;10005;24;9998.0;0.0
1;800;KELP;2032;25;;;;;2033;3;2035;25;;;2032.5;0.0
1;900;SQUID_INK;1840;21;;;;;1843;21;;;;;1841.5;0.0
1;900;KELP;2031;21;;;;;2035;21;;;;;2033.0;0.0
1;900;RAINFOREST_RESIN;9996;1;9995;20;;;9998;11;10004;1;10005;20;9997.0;0.0
1;1000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;1000;KELP;2032;31;;;;;2035;31;;;;;2033.5;0.0
1;1000;SQUID_INK;1841;31;;;;;1844;31;;;;;1842.5;0.0
1;1100;SQUID_INK;1840;22;;;;;1843;22;;;;;1841.5;0.0
1;1100;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;1100;RAINFOREST_RESIN;9996;1;9995;21;;;10002;6;10004;1;10005;21;9999.0;0.0
1;1200;SQUID_INK;1839;22;;;;;1842;23;;;;;1840.5;0.0
1;1200;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;1200;KELP;2031;23;;;;;2032;1;2035;23;;;2031.5;0.0
1;1300;SQUID_INK;1840;25;;;;;1843;25;;;;;1841.5;0.0
1;1300;KELP;2031;25;;;;;2035;25;;;;;2033.0;0.0
1;1300;RAINFOREST_RESIN;10002;1;9995;25;;;10005;25;;;;;10003.5;0.0
1;1400;RAINFOREST_RESIN;9995;23;;;;;10000;6;10005;23;;;9997.5;0.0
1;1400;KELP;2031;23;;;;;2033;6;2035;23;;;2032.0;0.0
1;1400;SQUID_INK;1841;23;;;;;1842;6;1844;23;;;1841.5;0.0
1;1500;SQUID_INK;1844;1;1842;21;;;1845;21;;;;;1844.5;0.0
1;1500;KELP;2034;1;2032;1;2031;20;2035;21;;;;;2034.5;0.0
1;1500;RAINFOREST_RESIN;9996;1;9995;20;;;9998;4;10004;1;10005;20;9997.0;0.0
1;1600;SQUID_INK;1844;2;1843;28;;;1847;30;;;;;1845.5;0.0
1;1600;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;1600;KELP;2032;30;;;;;2035;30;;;;;2033.5;0.0
1;1700;SQUID_INK;1841;28;;;;;1843;8;1844;28;;;1842.0;0.0
1;1700;KELP;2032;28;;;;;2034;8;2035;28;;;2033.0;0.0
1;1700;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;1800;RAINFOREST_RESIN;10000;4;9995;23;;;10002;10;10005;23;;;10001.0;0.0
1;1800;KELP;2033;4;2032;23;;;2035;23;;;;;2034.0;0.0
1;1800;SQUID_INK;1843;4;1841;23;;;1845;23;;;;;1844.0;0.0
1;1900;KELP;2032;31;;;;;2035;32;;;;;2033.5;0.0
1;1900;SQUID_INK;1844;32;;;;;1845;1;1847;2;1848;30;1844.5;0.0
1;1900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;2000;KELP;2032;23;;;;;2035;23;;;;;2033.5;0.0
1;2000;SQUID_INK;1846;23;;;;;1849;23;;;;;1847.5;0.0
1;2000;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;2100;SQUID_INK;1845;28;;;;;1847;5;1848;2;1849;26;1846.0;0.0
1;2100;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;2100;KELP;2032;2;2031;26;;;2034;5;2035;28;;;2033.0;0.0
1;2200;RAINFOREST_RESIN;9996;1;9995;20;;;9998;4;10004;1;10005;20;9997.0;0.0
1;2200;KELP;2032;25;;;;;2035;21;;;;;2033.5;0.0
1;2200;SQUID_INK;1846;25;;;;;1849;21;;;;;1847.5;0.0
1;2300;KELP;2032;7;2031;22;;;2035;24;;;;;2033.5;0.0
1;2300;SQUID_INK;1848;7;1847;22;;;1851;24;;;;;1849.5;0.0
1;2300;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;2400;KELP;2031;22;;;;;2035;22;;;;;2033.0;0.0
1;2400;SQUID_INK;1846;22;;;;;1849;22;;;;;1847.5;0.0
1;2400;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;2500;SQUID_INK;1847;2;1846;21;;;1850;23;;;;;1848.5;0.0
1;2500;RAINFOREST_RESIN;9998;3;9996;2;9995;21;10004;2;10005;21;;;10001.0;0.0
1;2500;KELP;2032;2;2031;21;;;2035;23;;;;;2033.5;0.0
1;2600;RAINFOREST_RESIN;10002;1;9996;1;9995;29;10004;1;10005;29;;;10003.0;0.0
1;2600;KELP;2032;1;2031;29;;;2035;30;;;;;2033.5;0.0
1;2600;SQUID_INK;1849;30;;;;;1852;30;;;;;1850.5;0.0
1;2700;KELP;2032;9;2031;21;;;2035;23;;;;;2033.5;0.0
1;2700;SQUID_INK;1848;30;;;;;1851;23;;;;;1849.5;0.0
1;2700;RAINFOREST_RESIN;9998;7;9996;2;9995;21;10004;2;10005;21;;;10001.0;0.0
1;2800;KELP;2031;27;;;;;2035;27;;;;;2033.0;0.0
1;2800;SQUID_INK;1849;27;;;;;1852;27;;;;;1850.5;0.0
1;2800;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;2900;SQUID_INK;1848;22;;;;;1851;22;;;;;1849.5;0.0
1;2900;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;2900;KELP;2031;22;;;;;2035;22;;;;;2033.0;0.0
1;3000;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;3000;KELP;2034;1;2032;6;2031;29;2035;30;;;;;2034.5;0.0
1;3000;SQUID_INK;1850;1;1848;35;;;1851;30;;;;;1850.5;0.0
1;3100;KELP;2032;28;;;;;2035;28;;;;;2033.5;0.0
1;3100;SQUID_INK;1848;28;;;;;1851;28;;;;;1849.5;0.0
1;3100;RAINFOREST_RESIN;9998;5;9996;1;9995;27;10004;1;10005;27;;;10001.0;0.0
1;3200;KELP;2032;24;;;;;2033;5;2035;24;;;2032.5;0.0
1;3200;SQUID_INK;1848;24;;;;;1849;5;1851;24;;;1848.5;0.0
1;3200;RAINFOREST_RESIN;10002;2;9995;24;;;10005;24;;;;;10003.5;0.0
1;3300;SQUID_INK;1849;25;;;;;1852;25;;;;;1850.5;0.0
1;3300;RAINFOREST_RESIN;10002;1;9996;1;9995;24;10004;1;10005;24;;;10003.0;0.0
1;3300;KELP;2032;25;;;;;2035;25;;;;;2033.5;0.0
1;3400;RAINFOREST_RESIN;9998;10;9996;2;9995;27;10004;2;10005;27;;;10001.0;0.0
1;3400;KELP;2032;29;;;;;2035;29;;;;;2033.5;0.0
1;3400;SQUID_INK;1849;2;1848;27;;;1852;29;;;;;1850.5;0.0
1;3500;KELP;2032;26;;;;;2035;26;;;;;2033.5;0.0
1;3500;SQUID_INK;1850;26;;;;;1853;26;;;;;1851.5;0.0
1;3500;RAINFOREST_RESIN;9995;26;;;;;10002;10;10005;26;;;9998.5;0.0
1;3600;KELP;2032;27;;;;;2035;27;;;;;2033.5;0.0
1;3600;SQUID_INK;1850;27;;;;;1853;27;;;;;1851.5;0.0
1;3600;RAINFOREST_RESIN;9995;27;;;;;10002;8;10005;27;;;9998.5;0.0
1;3700;SQUID_INK;1851;25;;;;;1854;25;;;;;1852.5;0.0
1;3700;RAINFOREST_RESIN;9998;3;9995;25;;;10005;25;;;;;10001.5;0.0
1;3700;KELP;2032;25;;;;;2035;25;;;;;2033.5;0.0
1;3800;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;3800;KELP;2032;24;;;;;2034;7;2035;24;;;2033.0;0.0
1;3800;SQUID_INK;1853;24;;;;;1854;7;1856;24;;;1853.5;0.0
1;3900;KELP;2032;27;;;;;2035;26;;;;;2033.5;0.0
1;3900;SQUID_INK;1852;27;;;;;1855;26;;;;;1853.5;0.0
1;3900;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;4000;KELP;2032;30;;;;;2035;31;;;;;2033.5;0.0
1;4000;SQUID_INK;1854;30;;;;;1857;31;;;;;1855.5;0.0
1;4000;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;0.0
1;4100;RAINFOREST_RESIN;10000;5;9996;2;9995;22;10002;4;10004;2;10005;22;10001.0;0.0
1;4100;SQUID_INK;1855;5;1854;2;1853;22;1857;24;;;;;1856.0;0.0
1;4100;KELP;2033;5;2032;24;;;2035;24;;;;;2034.0;0.0
1;4200;RAINFOREST_RESIN;10002;5;9996;1;9995;28;10004;1;10005;28;;;10003.0;0.0
1;4200;KELP;2032;29;;;;;2034;7;2035;29;;;2033.0;0.0
1;4200;SQUID_INK;1854;29;;;;;1856;7;1857;29;;;1855.0;0.0
1;4300;KELP;2032;24;;;;;2035;26;;;;;2033.5;0.0
1;4300;RAINFOREST_RESIN;9995;26;;;;;10002;8;10005;26;;;9998.5;0.0
1;4300;SQUID_INK;1854;24;;;;;1857;26;;;;;1855.5;0.0
1;4400;KELP;2032;28;;;;;2035;28;;;;;2033.5;0.0
1;4400;SQUID_INK;1853;28;;;;;1856;28;;;;;1854.5;0.0
1;4400;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;4500;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;4500;SQUID_INK;1853;26;;;;;1854;8;1856;26;;;1853.5;0.0
1;4500;KELP;2032;26;;;;;2034;8;2035;26;;;2033.0;0.0
1;4600;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;4600;KELP;2032;21;;;;;2034;3;2035;21;;;2033.0;0.0
1;4600;SQUID_INK;1857;21;;;;;1858;3;1860;21;;;1857.5;0.0
1;4700;KELP;2032;26;;;;;2035;26;;;;;2033.5;0.0
1;4700;RAINFOREST_RESIN;9998;5;9995;26;;;10005;26;;;;;10001.5;0.0
1;4700;SQUID_INK;1855;26;;;;;1858;26;;;;;1856.5;0.0
1;4800;KELP;2034;1;2032;30;;;2035;23;;;;;2034.5;0.0
1;4800;SQUID_INK;1861;1;1860;7;1859;23;1863;23;;;;;1862.0;0.0
1;4800;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;4900;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;4900;SQUID_INK;1857;24;;;;;1859;6;1860;2;1861;22;1858.0;0.0
1;4900;KELP;2032;24;;;;;2034;6;2035;24;;;2033.0;0.0
1;5000;RAINFOREST_RESIN;9998;9;9996;1;9995;30;10004;1;10005;30;;;10001.0;0.0
1;5000;KELP;2032;36;;;;;2035;31;;;;;2033.5;0.0
1;5000;SQUID_INK;1860;6;1859;30;;;1863;31;;;;;1861.5;0.0
1;5100;KELP;2032;26;;;;;2035;26;;;;;2033.5;0.0
1;5100;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;5100;SQUID_INK;1859;26;;;;;1862;26;;;;;1860.5;0.0
1;5200;SQUID_INK;1859;11;1858;25;;;1861;25;;;;;1860.0;0.0
1;5200;KELP;2033;5;2032;31;;;2035;25;;;;;2034.0;0.0
1;5200;RAINFOREST_RESIN;10000;5;9998;7;9996;2;10004;2;10005;23;;;10002.0;0.0
1;5300;RAINFOREST_RESIN;9995;22;;;;;9998;12;10005;22;;;9996.5;0.0
1;5300;SQUID_INK;1857;22;;;;;1860;22;;;;;1858.5;0.0
1;5300;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;5400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;5400;SQUID_INK;1857;30;;;;;1860;30;;;;;1858.5;0.0
1;5400;KELP;2032;30;;;;;2035;30;;;;;2033.5;0.0
1;5500;KELP;2032;21;;;;;2035;29;;;;;2033.5;0.0
1;5500;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;5500;SQUID_INK;1858;29;;;;;1859;8;1862;29;;;1858.5;0.0
1;5600;SQUID_INK;1859;25;;;;;1862;25;;;;;1860.5;0.0
1;5600;KELP;2032;25;;;;;2035;25;;;;;2033.5;0.0
1;5600;RAINFOREST_RESIN;9998;2;9996;2;9995;23;10004;2;10005;23;;;10001.0;0.0
1;5700;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;5700;SQUID_INK;1859;4;1858;30;;;1862;31;;;;;1860.5;0.0
1;5700;KELP;2032;34;;;;;2035;31;;;;;2033.5;0.0
1;5800;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;5800;SQUID_INK;1858;30;;;;;1861;30;;;;;1859.5;0.0
1;5800;KELP;2032;30;;;;;2035;30;;;;;2033.5;0.0
1;5900;KELP;2032;23;;;;;2035;23;;;;;2033.5;0.0
1;5900;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;5900;SQUID_INK;1857;23;;;;;1860;23;;;;;1858.5;0.0
1;6000;SQUID_INK;1859;30;;;;;1862;30;;;;;1860.5;0.0
1;6000;KELP;2032;30;;;;;2035;30;;;;;2033.5;0.0
1;6000;RAINFOREST_RESIN;9995;30;;;;;10002;10;10005;30;;;9998.5;0.0
1;6100;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;6100;SQUID_INK;1859;25;;;;;1862;25;;;;;1860.5;0.0
1;6100;KELP;2032;25;;;;;2035;25;;;;;2033.5;0.0
1;6200;RAINFOREST_RESIN;9998;3;9996;1;9995;29;10004;1;10005;29;;;10001.0;0.0
1;6200;SQUID_INK;1861;1;1859;30;;;1862;30;;;;;1861.5;0.0
1;6200;KELP;2034;1;2032;30;;;2035;30;;;;;2034.5;0.0
1;6300;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;6300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;6300;SQUID_INK;1859;22;;;;;1862;22;;;;;1860.5;0.0
1;6400;SQUID_INK;1858;24;;;;;1862;24;;;;;1860.0;0.0
1;6400;KELP;2032;24;;;;;2035;24;;;;;2033.5;0.0
1;6400;RAINFOREST_RESIN;9996;1;9995;23;;;10002;6;10004;1;10005;23;9999.0;0.0
1;6500;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;6500;SQUID_INK;1859;22;;;;;1862;22;;;;;1860.5;0.0
1;6500;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;6600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;6600;SQUID_INK;1860;22;;;;;1863;29;;;;;1861.5;0.0
1;6600;KELP;2032;22;;;;;2035;29;;;;;2033.5;0.0
1;6700;KELP;2032;31;;;;;2034;7;2035;1;2036;30;2033.0;0.0
1;6700;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;6700;SQUID_INK;1859;31;;;;;1861;7;1862;31;;;1860.0;0.0
1;6800;SQUID_INK;1860;4;1859;31;;;1862;2;1863;29;;;1861.0;0.0
1;6800;KELP;2033;4;2032;31;;;2035;31;;;;;2034.0;0.0
1;6800;RAINFOREST_RESIN;10000;5;9996;2;9995;29;10004;2;10005;29;;;10002.0;0.0
1;6900;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;6900;SQUID_INK;1860;29;;;;;1862;3;1863;29;;;1861.0;0.0
1;6900;KELP;2032;29;;;;;2034;3;2035;29;;;2033.0;0.0
1;7000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;7000;SQUID_INK;1860;7;1859;31;;;1863;31;;;;;1861.5;0.0
1;7000;KELP;2032;38;;;;;2035;31;;;;;2033.5;0.0
1;7100;KELP;2032;31;;;;;2035;31;;;;;2033.5;0.0
1;7100;RAINFOREST_RESIN;9996;1;9995;30;;;9998;5;10002;7;10004;1;9997.0;0.0
1;7100;SQUID_INK;1860;31;;;;;1863;31;;;;;1861.5;0.0
1;7200;SQUID_INK;1859;29;;;;;1862;23;;;;;1860.5;0.0
1;7200;KELP;2032;29;;;;;2035;23;;;;;2033.5;0.0
1;7200;RAINFOREST_RESIN;9996;1;9995;22;;;10002;1;10004;1;10005;22;9999.0;0.0
1;7300;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;7300;SQUID_INK;1858;26;;;;;1861;26;;;;;1859.5;0.0
1;7300;KELP;2032;26;;;;;2035;26;;;;;2033.5;0.0
1;7400;RAINFOREST_RESIN;10002;1;9995;22;;;10005;22;;;;;10003.5;0.0
1;7400;SQUID_INK;1859;22;;;;;1862;22;;;;;1860.5;0.0
1;7400;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;7500;KELP;2032;29;;;;;2034;3;2035;29;;;2033.0;0.0
1;7500;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;7500;SQUID_INK;1858;29;;;;;1860;3;1862;29;;;1859.0;0.0
1;7600;SQUID_INK;1859;27;;;;;1862;27;;;;;1860.5;0.0
1;7600;KELP;2032;27;;;;;2035;27;;;;;2033.5;0.0
1;7600;RAINFOREST_RESIN;10002;1;9995;27;;;10005;27;;;;;10003.5;0.0
1;7700;RAINFOREST_RESIN;9996;1;9995;25;;;10002;5;10004;1;10005;25;9999.0;0.0
1;7700;SQUID_INK;1858;26;;;;;1861;1;1862;25;;;1859.5;0.0
1;7700;KELP;2032;26;;;;;2035;26;;;;;2033.5;0.0
1;7800;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;7800;SQUID_INK;1859;1;1858;23;;;1861;23;;;;;1860.0;0.0
1;7800;KELP;2032;24;;;;;2035;23;;;;;2033.5;0.0
1;7900;KELP;2032;24;;;;;2035;24;;;;;2033.5;0.0
1;7900;RAINFOREST_RESIN;9996;2;9995;22;;;10002;7;10004;2;10005;22;9999.0;0.0
1;7900;SQUID_INK;1858;2;1857;22;;;1861;24;;;;;1859.5;0.0
1;8000;SQUID_INK;1858;1;1857;3;1856;30;1859;30;;;;;1858.5;0.0
1;8000;KELP;2034;1;2033;3;2032;30;2035;30;;;;;2034.5;0.0
1;8000;RAINFOREST_RESIN;10000;3;9996;2;9995;28;10004;2;10005;28;;;10002.0;0.0
1;8100;SQUID_INK;1858;25;;;;;1861;25;;;;;1859.5;0.0
1;8100;KELP;2032;25;;;;;2035;25;;;;;2033.5;0.0
1;8100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;8200;SQUID_INK;1857;27;;;;;1860;27;;;;;1858.5;0.0
1;8200;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;8200;KELP;2032;27;;;;;2035;27;;;;;2033.5;0.0
1;8300;KELP;2032;28;;;;;2035;28;;;;;2033.5;0.0
1;8300;RAINFOREST_RESIN;9998;9;9995;28;;;10005;28;;;;;10001.5;0.0
1;8300;SQUID_INK;1857;28;;;;;1860;28;;;;;1858.5;0.0
1;8400;SQUID_INK;1857;29;;;;;1860;29;;;;;1858.5;0.0
1;8400;RAINFOREST_RESIN;9998;5;9995;29;;;10005;29;;;;;10001.5;0.0
1;8400;KELP;2032;29;;;;;2035;29;;;;;2033.5;0.0
1;8500;SQUID_INK;1858;35;;;;;1861;27;;;;;1859.5;0.0
1;8500;KELP;2032;35;;;;;2035;27;;;;;2033.5;0.0
1;8500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;8600;SQUID_INK;1857;29;;;;;1860;29;;;;;1858.5;0.0
1;8600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;8600;KELP;2032;29;;;;;2035;29;;;;;2033.5;0.0
1;8700;KELP;2034;1;2032;32;;;2035;24;;;;;2034.5;0.0
1;8700;SQUID_INK;1858;1;1857;8;1856;24;1859;2;1860;22;;;1858.5;0.0
1;8700;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;8800;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;8800;KELP;2032;31;;;;;2035;1;2036;30;;;2033.5;0.0
1;8800;SQUID_INK;1857;31;;;;;1860;31;;;;;1858.5;0.0
1;8900;KELP;2032;28;;;;;2036;26;;;;;2034.0;0.0
1;8900;SQUID_INK;1856;28;;;;;1859;26;;;;;1857.5;0.0
1;8900;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;9000;SQUID_INK;1856;23;;;;;1859;23;;;;;1857.5;0.0
1;9000;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;9000;KELP;2032;23;;;;;2036;23;;;;;2034.0;0.0
1;9100;KELP;2033;5;2032;22;;;2036;22;;;;;2034.5;0.0
1;9100;SQUID_INK;1855;27;;;;;1858;22;;;;;1856.5;0.0
1;9100;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;0.0
1;9200;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;9200;KELP;2033;3;2032;27;;;2036;27;;;;;2034.5;0.0
1;9200;SQUID_INK;1855;30;;;;;1858;27;;;;;1856.5;0.0
1;9300;KELP;2032;30;;;;;2036;30;;;;;2034.0;0.0
1;9300;SQUID_INK;1854;30;;;;;1857;30;;;;;1855.5;0.0
1;9300;RAINFOREST_RESIN;10002;11;9998;1;9996;1;10004;1;10005;29;;;10003.0;0.0
1;9400;SQUID_INK;1855;33;;;;;1858;30;;;;;1856.5;0.0
1;9400;RAINFOREST_RESIN;10002;1;9996;2;9995;28;10004;2;10005;28;;;10003.0;0.0
1;9400;KELP;2033;3;2032;30;;;2036;30;;;;;2034.5;0.0
1;9500;KELP;2032;26;;;;;2036;26;;;;;2034.0;0.0
1;9500;SQUID_INK;1853;26;;;;;1856;26;;;;;1854.5;0.0
1;9500;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;0.0
1;9600;RAINFOREST_RESIN;9996;1;9995;20;;;10002;6;10004;1;10005;20;9999.0;0.0
1;9600;KELP;2032;21;;;;;2036;21;;;;;2034.0;0.0
1;9600;SQUID_INK;1855;21;;;;;1858;21;;;;;1856.5;0.0
1;9700;SQUID_INK;1855;31;;;;;1856;5;1857;5;1858;31;1855.5;0.0
1;9700;KELP;2032;31;;;;;2034;10;2036;31;;;2033.0;0.0
1;9700;RAINFOREST_RESIN;9996;1;9995;30;;;10000;4;10004;1;10005;30;9998.0;0.0
1;9800;SQUID_INK;1855;26;;;;;1858;26;;;;;1856.5;0.0
1;9800;RAINFOREST_RESIN;9998;1;9996;2;9995;24;10004;2;10005;24;;;10001.0;0.0
1;9800;KELP;2032;26;;;;;2036;26;;;;;2034.0;0.0
1;9900;SQUID_INK;1858;24;;;;;1861;24;;;;;1859.5;0.0
1;9900;KELP;2032;24;;;;;2036;24;;;;;2034.0;0.0
1;9900;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;10000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;10000;KELP;2032;27;;;;;2036;27;;;;;2034.0;0.0
1;10000;SQUID_INK;1856;27;;;;;1859;27;;;;;1857.5;0.0
1;10100;SQUID_INK;1857;21;;;;;1859;5;1860;21;;;1858.0;0.0
1;10100;KELP;2033;21;;;;;2035;5;2036;21;;;2034.0;0.0
1;10100;RAINFOREST_RESIN;10002;4;9996;1;9995;20;10004;1;10005;20;;;10003.0;0.0
1;10200;SQUID_INK;1857;20;;;;;1860;20;;;;;1858.5;0.0
1;10200;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;10200;KELP;2033;20;;;;;2036;20;;;;;2034.5;0.0
1;10300;SQUID_INK;1858;30;;;;;1861;25;;;;;1859.5;0.0
1;10300;KELP;2033;30;;;;;2036;25;;;;;2034.5;0.0
1;10300;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;10400;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;10400;KELP;2033;25;;;;;2036;25;;;;;2034.5;0.0
1;10400;SQUID_INK;1856;25;;;;;1859;25;;;;;1857.5;0.0
1;10500;SQUID_INK;1856;34;;;;;1859;26;;;;;1857.5;0.0
1;10500;KELP;2033;34;;;;;2036;26;;;;;2034.5;0.0
1;10500;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;10600;SQUID_INK;1858;3;1856;20;;;1859;20;;;;;1858.5;0.0
1;10600;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;10600;KELP;2035;3;2033;20;;;2036;20;;;;;2035.5;0.0
1;10700;SQUID_INK;1857;31;;;;;1860;24;;;;;1858.5;0.0
1;10700;KELP;2033;31;;;;;2036;24;;;;;2034.5;0.0
1;10700;RAINFOREST_RESIN;9995;24;;;;;9998;3;10005;24;;;9996.5;0.0
1;10800;RAINFOREST_RESIN;9995;23;;;;;10002;1;10005;23;;;9998.5;0.0
1;10800;KELP;2033;29;;;;;2036;23;;;;;2034.5;0.0
1;10800;SQUID_INK;1857;6;1856;23;;;1859;23;;;;;1858.0;0.0
1;10900;KELP;2033;23;;;;;2034;6;2036;23;;;2033.5;0.0
1;10900;SQUID_INK;1860;1;1859;22;;;1861;6;1863;23;;;1860.5;0.0
1;10900;RAINFOREST_RESIN;9996;1;9995;22;;;10000;6;10004;1;10005;22;9998.0;0.0
1;11000;KELP;2033;27;;;;;2035;2;2036;27;;;2034.0;0.0
1;11000;SQUID_INK;1864;1;1863;26;;;1865;2;1867;27;;;1864.5;0.0
1;11000;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;11100;SQUID_INK;1864;32;;;;;1867;31;;;;;1865.5;0.0
1;11100;RAINFOREST_RESIN;9996;1;9995;30;;;10002;1;10004;1;10005;30;9999.0;0.0
1;11100;KELP;2033;2;2032;30;;;2036;31;;;;;2034.5;0.0
1;11200;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;11200;KELP;2032;30;;;;;2034;5;2036;30;;;2033.0;0.0
1;11200;SQUID_INK;1863;30;;;;;1865;5;1866;30;;;1864.0;0.0
1;11300;KELP;2033;2;2032;25;;;2036;27;;;;;2034.5;0.0
1;11300;SQUID_INK;1862;27;;;;;1865;27;;;;;1863.5;0.0
1;11300;RAINFOREST_RESIN;9996;2;9995;25;;;10002;2;10004;2;10005;25;9999.0;0.0
1;11400;KELP;2032;30;;;;;2036;30;;;;;2034.0;0.0
1;11400;SQUID_INK;1858;30;;;;;1861;30;;;;;1859.5;0.0
1;11400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;11500;SQUID_INK;1856;29;;;;;1858;5;1860;29;;;1857.0;0.0
1;11500;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;11500;KELP;2033;29;;;;;2035;5;2036;29;;;2034.0;0.0
1;11600;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;11600;KELP;2033;2;2032;22;;;2035;7;2036;24;;;2034.0;0.0
1;11600;SQUID_INK;1858;24;;;;;1860;7;1861;24;;;1859.0;0.0
1;11700;KELP;2034;4;2033;2;2032;20;2036;22;;;;;2035.0;0.0
1;11700;SQUID_INK;1858;4;1857;22;;;1860;22;;;;;1859.0;0.0
1;11700;RAINFOREST_RESIN;10000;4;9996;2;9995;20;10004;2;10005;20;;;10002.0;0.0
1;11800;KELP;2033;1;2032;21;;;2036;22;;;;;2034.5;0.0
1;11800;SQUID_INK;1857;22;;;;;1860;22;;;;;1858.5;0.0
1;11800;RAINFOREST_RESIN;9998;10;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
1;11900;SQUID_INK;1857;4;1856;23;;;1859;23;;;;;1858.0;0.0
1;11900;RAINFOREST_RESIN;10002;1;10000;4;9998;1;10004;1;10005;22;;;10003.0;0.0
1;11900;KELP;2034;4;2032;23;;;2036;23;;;;;2035.0;0.0
1;12000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;12000;KELP;2033;1;2032;27;;;2036;28;;;;;2034.5;0.0
1;12000;SQUID_INK;1855;28;;;;;1858;28;;;;;1856.5;0.0
1;12100;KELP;2032;25;;;;;2036;25;;;;;2034.0;0.0
1;12100;SQUID_INK;1853;25;;;;;1856;25;;;;;1854.5;0.0
1;12100;RAINFOREST_RESIN;9996;2;9995;23;;;9998;8;10004;2;10005;23;9997.0;0.0
1;12200;KELP;2032;25;;;;;2036;25;;;;;2034.0;0.0
1;12200;SQUID_INK;1855;25;;;;;1859;25;;;;;1857.0;0.0
1;12200;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;12300;SQUID_INK;1856;29;;;;;1859;25;;;;;1857.5;0.0
1;12300;RAINFOREST_RESIN;9996;1;9995;24;;;10002;3;10004;1;10005;24;9999.0;0.0
1;12300;KELP;2032;29;;;;;2035;25;;;;;2033.5;0.0
1;12400;RAINFOREST_RESIN;10002;1;9998;5;9995;29;10005;29;;;;;10003.5;0.0
1;12400;KELP;2032;29;;;;;2036;29;;;;;2034.0;0.0
1;12400;SQUID_INK;1857;29;;;;;1860;29;;;;;1858.5;0.0
1;12500;KELP;2033;3;2032;23;;;2035;1;2036;22;;;2034.0;0.0
1;12500;SQUID_INK;1858;3;1857;23;;;1860;23;;;;;1859.0;0.0
1;12500;RAINFOREST_RESIN;10000;3;9996;1;9995;22;10004;1;10005;22;;;10002.0;0.0
1;12600;KELP;2033;4;2032;26;;;2036;26;;;;;2034.5;0.0
1;12600;SQUID_INK;1859;4;1858;26;;;1861;26;;;;;1860.0;0.0
1;12600;RAINFOREST_RESIN;10000;4;9995;26;;;10005;26;;;;;10002.5;0.0
1;12700;SQUID_INK;1856;28;;;;;1859;28;;;;;1857.5;0.0
1;12700;RAINFOREST_RESIN;10002;1;9996;1;9995;27;10004;1;10005;27;;;10003.0;0.0
1;12700;KELP;2032;28;;;;;2035;28;;;;;2033.5;0.0
1;12800;RAINFOREST_RESIN;10000;4;9996;2;9995;28;10002;9;10004;2;10005;28;10001.0;0.0
1;12800;KELP;2033;4;2032;30;;;2035;2;2036;28;;;2034.0;0.0
1;12800;SQUID_INK;1854;4;1853;30;;;1856;30;;;;;1855.0;0.0
1;12900;KELP;2032;23;;;;;2034;2;2035;2;2036;21;2033.0;0.0
1;12900;SQUID_INK;1853;23;;;;;1855;2;1856;23;;;1854.0;0.0
1;12900;RAINFOREST_RESIN;9996;2;9995;21;;;10002;4;10004;2;10005;21;9999.0;0.0
1;13000;KELP;2032;32;;;;;2035;32;;;;;2033.5;0.0
1;13000;SQUID_INK;1851;32;;;;;1854;2;1855;30;;;1852.5;0.0
1;13000;RAINFOREST_RESIN;9996;2;9995;30;;;10002;2;10004;2;10005;30;9999.0;0.0
1;13100;RAINFOREST_RESIN;9995;21;;;;;10000;2;10005;21;;;9997.5;0.0
1;13100;SQUID_INK;1851;21;;;;;1852;2;1854;21;;;1851.5;0.0
1;13100;KELP;2032;21;;;;;2033;2;2036;21;;;2032.5;0.0
1;13200;RAINFOREST_RESIN;9998;9;9996;2;9995;29;10004;2;10005;29;;;10001.0;0.0
1;13200;KELP;2034;1;2032;38;;;2035;2;2036;29;;;2034.5;0.0
1;13200;SQUID_INK;1852;1;1850;38;;;1853;31;;;;;1852.5;0.0
1;13300;KELP;2032;23;;;;;2035;1;2036;22;;;2033.5;0.0
1;13300;RAINFOREST_RESIN;10002;2;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
1;13300;SQUID_INK;1851;23;;;;;1854;23;;;;;1852.5;0.0
1;13400;KELP;2032;26;;;;;2035;26;;;;;2033.5;0.0
1;13400;SQUID_INK;1852;26;;;;;1855;26;;;;;1853.5;0.0
1;13400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;13500;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;13500;SQUID_INK;1853;25;;;;;1856;25;;;;;1854.5;0.0
1;13500;KELP;2032;25;;;;;2035;25;;;;;2033.5;0.0
1;13600;RAINFOREST_RESIN;9996;2;9995;24;;;10002;6;10004;2;10005;24;9999.0;0.0
1;13600;KELP;2032;26;;;;;2034;3;2035;26;;;2033.0;0.0
1;13600;SQUID_INK;1849;26;;;;;1851;3;1852;26;;;1850.0;0.0
1;13700;KELP;2032;28;;;;;2035;28;;;;;2033.5;0.0
1;13700;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;0.0
1;13700;SQUID_INK;1847;28;;;;;1850;28;;;;;1848.5;0.0
1;13800;KELP;2032;23;;;;;2035;23;;;;;2033.5;0.0
1;13800;SQUID_INK;1846;23;;;;;1850;23;;;;;1848.0;0.0
1;13800;RAINFOREST_RESIN;9998;1;9995;23;;;10005;23;;;;;10001.5;0.0
1;13900;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;13900;SQUID_INK;1849;18;;;;;1852;21;;;;;1850.5;0.0
1;13900;KELP;2032;21;;;;;2033;3;2035;21;;;2032.5;0.0
1;14000;RAINFOREST_RESIN;10002;6;9998;1;9996;1;10004;1;10005;28;;;10003.0;0.0
1;14000;KELP;2032;31;;;;;2035;29;;;;;2033.5;0.0
1;14000;SQUID_INK;1852;3;1851;28;;;1855;29;;;;;1853.5;0.0
1;14100;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;14100;RAINFOREST_RESIN;9996;2;9995;20;;;10002;4;10004;2;10005;20;9999.0;0.0
1;14100;SQUID_INK;1851;22;;;;;1854;22;;;;;1852.5;0.0
1;14200;SQUID_INK;1852;21;;;;;1855;21;;;;;1853.5;0.0
1;14200;KELP;2032;21;;;;;2035;21;;;;;2033.5;0.0
1;14200;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;14300;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;14300;SQUID_INK;1849;22;;;;;1852;22;;;;;1850.5;0.0
1;14300;KELP;2032;22;;;;;2035;1;2036;21;;;2033.5;0.0
1;14400;RAINFOREST_RESIN;10002;4;9996;2;9995;21;10004;2;10005;21;;;10003.0;0.0
1;14400;SQUID_INK;1853;22;;;;;1856;23;;;;;1854.5;0.0
1;14400;KELP;2032;22;;;;;2036;23;;;;;2034.0;0.0
1;14500;KELP;2032;29;;;;;2034;6;2035;1;2036;28;2033.0;0.0
1;14500;RAINFOREST_RESIN;9996;1;9995;28;;;10002;10;10004;1;10005;28;9999.0;0.0
1;14500;SQUID_INK;1852;1;1851;28;;;1853;6;1855;29;;;1852.5;0.0
1;14600;SQUID_INK;1848;28;;;;;1849;3;1851;28;;;1848.5;0.0
1;14600;KELP;2032;28;;;;;2033;3;2035;1;2036;27;2032.5;0.0
1;14600;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;14700;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;14700;SQUID_INK;1850;24;;;;;1852;2;1853;24;;;1851.0;0.0
1;14700;KELP;2032;24;;;;;2034;2;2035;1;2036;23;2033.0;0.0
1;14800;RAINFOREST_RESIN;9996;1;9995;30;;;9998;1;10004;1;10005;30;9997.0;0.0
1;14800;SQUID_INK;1849;31;;;;;1851;3;1852;1;1853;30;1850.0;0.0
1;14800;KELP;2032;31;;;;;2034;3;2036;31;;;2033.0;0.0
1;14900;KELP;2034;4;2032;26;;;2035;1;2036;25;;;2034.5;0.0
1;14900;RAINFOREST_RESIN;9996;1;9995;25;;;10002;1;10004;1;10005;25;9999.0;0.0
1;14900;SQUID_INK;1853;4;1851;26;;;1854;26;;;;;1853.5;0.0
1;15000;SQUID_INK;1849;6;1848;25;;;1852;27;;;;;1850.5;0.0
1;15000;KELP;2033;4;2032;27;;;2035;2;2036;25;;;2034.0;0.0
1;15000;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;15100;RAINFOREST_RESIN;9996;1;9995;20;;;9998;1;10004;1;10005;20;9997.0;0.0
1;15100;SQUID_INK;1850;21;;;;;1853;21;;;;;1851.5;0.0
1;15100;KELP;2032;21;;;;;2035;1;2036;20;;;2033.5;0.0
1;15200;RAINFOREST_RESIN;10000;4;9996;2;9995;21;10002;4;10004;2;10005;21;10001.0;0.0
1;15200;SQUID_INK;1849;4;1848;27;;;1851;23;;;;;1850.0;0.0
1;15200;KELP;2033;8;2032;23;;;2035;2;2036;21;;;2034.0;0.0
1;15300;KELP;2032;24;;;;;2034;6;2035;2;2036;22;2033.0;0.0
1;15300;RAINFOREST_RESIN;9996;2;9995;22;;;10002;7;10004;2;10005;22;9999.0;0.0
1;15300;SQUID_INK;1850;24;;;;;1852;6;1853;24;;;1851.0;0.0
1;15400;SQUID_INK;1847;30;;;;;1850;30;;;;;1848.5;0.0
1;15400;KELP;2032;30;;;;;2036;30;;;;;2034.0;0.0
1;15400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;15500;RAINFOREST_RESIN;9995;25;;;;;9998;11;10005;25;;;9996.5;0.0
1;15500;SQUID_INK;1850;25;;;;;1853;25;;;;;1851.5;0.0
1;15500;KELP;2032;25;;;;;2036;25;;;;;2034.0;0.0
1;15600;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;15600;SQUID_INK;1846;23;;;;;1849;23;;;;;1847.5;0.0
1;15600;KELP;2032;23;;;;;2036;23;;;;;2034.0;0.0
1;15700;KELP;2033;2;2032;28;;;2034;1;2036;30;;;2033.5;0.0
1;15700;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;15700;SQUID_INK;1847;30;;;;;1849;1;1850;30;;;1848.0;0.0
1;15800;SQUID_INK;1851;32;;;;;1854;28;;;;;1852.5;0.0
1;15800;KELP;2033;6;2032;26;;;2036;28;;;;;2034.5;0.0
1;15800;RAINFOREST_RESIN;9998;6;9996;2;9995;26;10004;2;10005;26;;;10001.0;0.0
1;15900;RAINFOREST_RESIN;9996;1;9995;20;;;10002;8;10004;1;10005;20;9999.0;0.0
1;15900;SQUID_INK;1853;21;;;;;1854;3;1856;21;;;1853.5;0.0
1;15900;KELP;2032;21;;;;;2033;3;2036;21;;;2032.5;0.0
1;16000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;16000;SQUID_INK;1856;22;;;;;1858;4;1859;22;;;1857.0;0.0
1;16000;KELP;2032;22;;;;;2034;4;2036;22;;;2033.0;0.0
1;16100;KELP;2032;26;;;;;2033;1;2034;8;2036;27;2032.5;0.0
1;16100;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;16100;SQUID_INK;1856;27;;;;;1857;2;1858;8;1859;27;1856.5;0.0
1;16200;SQUID_INK;1853;26;;;;;1856;27;;;;;1854.5;0.0
1;16200;KELP;2032;26;;;;;2036;27;;;;;2034.0;0.0
1;16200;RAINFOREST_RESIN;9995;27;;;;;10002;4;10005;27;;;9998.5;0.0
1;16300;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;16300;SQUID_INK;1850;22;;;;;1853;1;1854;21;;;1851.5;0.0
1;16300;KELP;2032;22;;;;;2035;22;;;;;2033.5;0.0
1;16400;RAINFOREST_RESIN;9996;2;9995;25;;;10002;6;10004;2;10005;25;9999.0;0.0
1;16400;SQUID_INK;1848;27;;;;;1850;7;1851;27;;;1849.0;0.0
1;16400;KELP;2032;27;;;;;2034;7;2036;27;;;2033.0;0.0
1;16500;KELP;2032;22;;;;;2035;1;2036;22;;;2033.5;0.0
1;16500;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;16500;SQUID_INK;1848;22;;;;;1849;1;1851;22;;;1848.5;0.0
1;16600;SQUID_INK;1848;7;1847;26;;;1850;26;;;;;1849.0;0.0
1;16600;KELP;2033;7;2032;26;;;2036;26;;;;;2034.5;0.0
1;16600;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;16700;RAINFOREST_RESIN;10002;1;9998;2;9995;25;10005;25;;;;;10003.5;0.0
1;16700;SQUID_INK;1842;25;;;;;1845;25;;;;;1843.5;0.0
1;16700;KELP;2032;25;;;;;2036;25;;;;;2034.0;0.0
1;16800;RAINFOREST_RESIN;10000;2;9996;2;9995;25;10004;2;10005;25;;;10002.0;0.0
1;16800;SQUID_INK;1838;2;1837;27;;;1840;27;;;;;1839.0;0.0
1;16800;KELP;2034;2;2033;27;;;2036;27;;;;;2035.0;0.0
1;16900;KELP;2033;2;2032;22;;;2036;24;;;;;2034.5;0.0
1;16900;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;16900;SQUID_INK;1842;24;;;;;1845;24;;;;;1843.5;0.0
1;17000;SQUID_INK;1843;1;1842;26;;;1845;26;;;;;1844.0;0.0
1;17000;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;17000;KELP;2033;2;2032;25;;;2036;26;;;;;2034.5;0.0
1;17100;SQUID_INK;1849;27;;;;;1852;1;1853;26;;;1850.5;0.0
1;17100;KELP;2033;1;2032;26;;;2036;27;;;;;2034.5;0.0
1;17100;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;17200;SQUID_INK;1848;33;;;;;1851;28;;;;;1849.5;0.0
1;17200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;17200;KELP;2033;33;;;;;2036;28;;;;;2034.5;0.0
1;17300;KELP;2033;28;;;;;2035;6;2036;28;;;2034.0;0.0
1;17300;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;17300;SQUID_INK;1848;28;;;;;1850;6;1851;28;;;1849.0;0.0
1;17400;RAINFOREST_RESIN;9995;25;;;;;9998;11;10005;25;;;9996.5;0.0
1;17400;KELP;2034;3;2033;27;;;2036;25;;;;;2035.0;0.0
1;17400;SQUID_INK;1849;3;1848;2;1847;25;1851;25;;;;;1850.0;0.0
1;17500;KELP;2033;28;;;;;2036;28;;;;;2034.5;0.0
1;17500;SQUID_INK;1848;28;;;;;1851;28;;;;;1849.5;0.0
1;17500;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;17600;SQUID_INK;1849;3;1848;30;;;1851;30;;;;;1850.0;0.0
1;17600;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;17600;KELP;2033;33;;;;;2036;30;;;;;2034.5;0.0
1;17700;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;17700;SQUID_INK;1847;22;;;;;1850;22;;;;;1848.5;0.0
1;17700;RAINFOREST_RESIN;9998;2;9995;22;;;10005;22;;;;;10001.5;0.0
1;17800;RAINFOREST_RESIN;9996;2;9995;30;;;9998;3;10002;5;10004;2;9997.0;0.0
1;17800;KELP;2033;32;;;;;2035;5;2036;32;;;2034.0;0.0
1;17800;SQUID_INK;1848;32;;;;;1850;5;1851;32;;;1849.0;0.0
1;17900;KELP;2035;1;2034;2;2033;21;2036;21;;;;;2035.5;0.0
1;17900;SQUID_INK;1849;1;1848;2;1847;21;1850;21;;;;;1849.5;0.0
1;17900;RAINFOREST_RESIN;9995;21;;;;;9998;1;10002;3;10005;21;9996.5;0.0
1;18000;SQUID_INK;1848;24;;;;;1852;24;;;;;1850.0;0.0
1;18000;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;18000;KELP;2033;24;;;;;2036;24;;;;;2034.5;0.0
1;18100;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;18100;SQUID_INK;1842;30;;;;;1845;30;;;;;1843.5;0.0
1;18100;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;18200;RAINFOREST_RESIN;9996;2;9995;23;;;10002;10;10004;2;10005;23;9999.0;0.0
1;18200;KELP;2033;25;;;;;2036;25;;;;;2034.5;0.0
1;18200;SQUID_INK;1840;25;;;;;1843;25;;;;;1841.5;0.0
1;18300;KELP;2033;20;;;;;2036;20;;;;;2034.5;0.0
1;18300;SQUID_INK;1839;20;;;;;1842;20;;;;;1840.5;0.0
1;18300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;18400;SQUID_INK;1840;1;1839;1;1838;21;1842;22;;;;;1841.0;0.0
1;18400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;18400;KELP;2035;1;2033;22;;;2036;22;;;;;2035.5;0.0
1;18500;SQUID_INK;1840;22;;;;;1843;23;;;;;1841.5;0.0
1;18500;KELP;2033;22;;;;;2036;23;;;;;2034.5;0.0
1;18500;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;18600;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;18600;KELP;2033;13;;;;;2036;22;;;;;2034.5;0.0
1;18600;SQUID_INK;1836;21;;;;;1837;8;1840;22;;;1836.5;0.0
1;18700;SQUID_INK;1838;30;;;;;1841;30;;;;;1839.5;0.0
1;18700;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;18700;RAINFOREST_RESIN;10002;1;9995;30;;;10005;30;;;;;10003.5;0.0
1;18800;SQUID_INK;1836;24;;;;;1840;24;;;;;1838.0;0.0
1;18800;RAINFOREST_RESIN;9995;24;;;;;10002;7;10005;24;;;9998.5;0.0
1;18800;KELP;2033;24;;;;;2036;24;;;;;2034.5;0.0
1;18900;SQUID_INK;1830;32;;;;;1833;25;;;;;1831.5;0.0
1;18900;KELP;2033;32;;;;;2036;25;;;;;2034.5;0.0
1;18900;RAINFOREST_RESIN;10002;1;9995;25;;;10005;25;;;;;10003.5;0.0
1;19000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;19000;KELP;2033;31;;;;;2036;31;;;;;2034.5;0.0
1;19000;SQUID_INK;1828;31;;;;;1831;31;;;;;1829.5;0.0
1;19100;SQUID_INK;1821;23;;;;;1824;23;;;;;1822.5;0.0
1;19100;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;19100;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;19200;SQUID_INK;1823;26;;;;;1826;26;;;;;1824.5;0.0
1;19200;RAINFOREST_RESIN;9995;26;;;;;10002;1;10005;26;;;9998.5;0.0
1;19200;KELP;2033;26;;;;;2036;26;;;;;2034.5;0.0
1;19300;SQUID_INK;1825;25;;;;;1828;25;;;;;1826.5;0.0
1;19300;KELP;2033;25;;;;;2036;25;;;;;2034.5;0.0
1;19300;RAINFOREST_RESIN;9996;2;9995;23;;;9998;6;10004;2;10005;23;9997.0;0.0
1;19400;RAINFOREST_RESIN;9996;2;9995;24;;;10002;5;10004;2;10005;24;9999.0;0.0
1;19400;KELP;2033;26;;;;;2036;26;;;;;2034.5;0.0
1;19400;SQUID_INK;1829;26;;;;;1832;26;;;;;1830.5;0.0
1;19500;SQUID_INK;1828;23;;;;;1832;23;;;;;1830.0;0.0
1;19500;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;19500;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;19600;SQUID_INK;1828;27;;;;;1831;27;;;;;1829.5;0.0
1;19600;RAINFOREST_RESIN;10002;1;9998;5;9996;1;10004;1;10005;26;;;10003.0;0.0
1;19600;KELP;2033;27;;;;;2036;27;;;;;2034.5;0.0
1;19700;SQUID_INK;1826;31;;;;;1829;31;;;;;1827.5;0.0
1;19700;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;19700;KELP;2033;31;;;;;2036;31;;;;;2034.5;0.0
1;19800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;19800;KELP;2033;28;;;;;2036;28;;;;;2034.5;0.0
1;19800;SQUID_INK;1825;28;;;;;1828;28;;;;;1826.5;0.0
1;19900;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;19900;SQUID_INK;1826;23;;;;;1829;1;1830;22;;;1827.5;0.0
1;19900;RAINFOREST_RESIN;9996;1;9995;22;;;9998;1;10004;1;10005;22;9997.0;0.0
1;20000;KELP;2033;26;;;;;2035;4;2036;26;;;2034.0;0.0
1;20000;SQUID_INK;1831;26;;;;;1833;4;1834;26;;;1832.0;0.0
1;20000;RAINFOREST_RESIN;9995;26;;;;;9998;1;10005;26;;;9996.5;0.0
1;20100;SQUID_INK;1832;30;;;;;1834;4;1835;30;;;1833.0;0.0
1;20100;RAINFOREST_RESIN;9996;1;9995;29;;;9998;4;10004;1;10005;29;9997.0;0.0
1;20100;KELP;2033;30;;;;;2035;4;2036;30;;;2034.0;0.0
1;20200;RAINFOREST_RESIN;10002;1;9995;20;;;10005;20;;;;;10003.5;0.0
1;20200;KELP;2033;20;;;;;2036;20;;;;;2034.5;0.0
1;20200;SQUID_INK;1833;20;;;;;1837;20;;;;;1835.0;0.0
1;20300;KELP;2033;24;;;;;2036;24;;;;;2034.5;0.0
1;20300;SQUID_INK;1833;24;;;;;1836;24;;;;;1834.5;0.0
1;20300;RAINFOREST_RESIN;10002;4;9995;24;;;10005;24;;;;;10003.5;0.0
1;20400;KELP;2033;25;;;;;2036;28;;;;;2034.5;0.0
1;20400;SQUID_INK;1830;28;;;;;1831;3;1833;28;;;1830.5;0.0
1;20400;RAINFOREST_RESIN;10002;2;9996;1;9995;27;10004;1;10005;27;;;10003.0;0.0
1;20500;SQUID_INK;1833;18;;;;;1836;26;;;;;1834.5;0.0
1;20500;RAINFOREST_RESIN;9998;7;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;20500;KELP;2033;18;;;;;2036;26;;;;;2034.5;0.0
1;20600;RAINFOREST_RESIN;9996;1;9995;24;;;9998;4;10002;5;10004;1;9997.0;0.0
1;20600;KELP;2033;25;;;;;2036;25;;;;;2034.5;0.0
1;20600;SQUID_INK;1833;25;;;;;1836;25;;;;;1834.5;0.0
1;20700;KELP;2034;2;2033;33;;;2036;30;;;;;2035.0;0.0
1;20700;SQUID_INK;1837;2;1835;33;;;1838;30;;;;;1837.5;0.0
1;20700;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;20800;KELP;2033;26;;;;;2036;26;;;;;2034.5;0.0
1;20800;SQUID_INK;1839;26;;;;;1842;26;;;;;1840.5;0.0
1;20800;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;20900;SQUID_INK;1837;31;;;;;1838;1;1840;2;1841;29;1837.5;0.0
1;20900;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;20900;KELP;2033;30;;;;;2036;31;;;;;2034.5;0.0
1;21000;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;21000;KELP;2033;26;;;;;2036;26;;;;;2034.5;0.0
1;21000;SQUID_INK;1835;26;;;;;1838;26;;;;;1836.5;0.0
1;21100;KELP;2033;28;;;;;2034;2;2036;28;;;2033.5;0.0
1;21100;SQUID_INK;1835;28;;;;;1836;2;1838;28;;;1835.5;0.0
1;21100;RAINFOREST_RESIN;9995;28;;;;;10000;2;10005;28;;;9997.5;0.0
1;21200;KELP;2035;1;2033;29;;;2036;29;;;;;2035.5;0.0
1;21200;SQUID_INK;1836;1;1834;29;;;1837;29;;;;;1836.5;0.0
1;21200;RAINFOREST_RESIN;9995;29;;;;;9998;1;10005;29;;;9996.5;0.0
1;21300;SQUID_INK;1833;22;;;;;1835;2;1836;22;;;1834.0;0.0
1;21300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;21300;KELP;2033;22;;;;;2035;2;2036;22;;;2034.0;0.0
1;21400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;21400;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;21400;SQUID_INK;1835;30;;;;;1838;30;;;;;1836.5;0.0
1;21500;KELP;2032;28;;;;;2033;5;2036;30;;;2032.5;0.0
1;21500;SQUID_INK;1838;28;;;;;1839;5;1842;30;;;1838.5;0.0
1;21500;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;21600;KELP;2033;2;2032;20;;;2036;22;;;;;2034.5;0.0
1;21600;SQUID_INK;1843;22;;;;;1846;2;1847;20;;;1844.5;0.0
1;21600;RAINFOREST_RESIN;9998;5;9996;2;9995;20;10004;2;10005;20;;;10001.0;0.0
1;21700;SQUID_INK;1844;4;1843;27;;;1846;27;;;;;1845.0;0.0
1;21700;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;21700;KELP;2033;6;2032;25;;;2036;27;;;;;2034.5;0.0
1;21800;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;21800;KELP;2033;1;2032;25;;;2036;26;;;;;2034.5;0.0
1;21800;SQUID_INK;1844;26;;;;;1847;26;;;;;1845.5;0.0
1;21900;KELP;2032;27;;;;;2036;27;;;;;2034.0;0.0
1;21900;RAINFOREST_RESIN;9995;27;;;;;10002;3;10005;27;;;9998.5;0.0
1;21900;SQUID_INK;1845;27;;;;;1848;27;;;;;1846.5;0.0
1;22000;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;22000;SQUID_INK;1844;22;;;;;1847;22;;;;;1845.5;0.0
1;22000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;22100;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;22100;SQUID_INK;1848;22;;;;;1850;4;1852;22;;;1849.0;0.0
1;22100;KELP;2032;22;;;;;2034;4;2036;22;;;2033.0;0.0
1;22200;RAINFOREST_RESIN;10002;1;9995;23;;;10005;23;;;;;10003.5;0.0
1;22200;KELP;2033;3;2032;23;;;2036;23;;;;;2034.5;0.0
1;22200;SQUID_INK;1849;26;;;;;1852;23;;;;;1850.5;0.0
1;22300;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;22300;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;22300;SQUID_INK;1848;30;;;;;1851;2;1852;28;;;1849.5;0.0
1;22400;KELP;2033;24;;;;;2036;24;;;;;2034.5;0.0
1;22400;SQUID_INK;1846;24;;;;;1849;24;;;;;1847.5;0.0
1;22400;RAINFOREST_RESIN;9996;1;9995;23;;;10002;2;10004;1;10005;23;9999.0;0.0
1;22500;RAINFOREST_RESIN;9998;2;9995;27;;;10005;27;;;;;10001.5;0.0
1;22500;SQUID_INK;1849;1;1847;27;;;1851;27;;;;;1850.0;0.0
1;22500;KELP;2035;1;2032;27;;;2036;27;;;;;2035.5;0.0
1;22600;RAINFOREST_RESIN;9998;5;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;22600;KELP;2035;1;2034;4;2033;30;2036;26;;;;;2035.5;0.0
1;22600;SQUID_INK;1851;1;1850;4;1849;30;1852;26;;;;;1851.5;0.0
1;22700;KELP;2033;26;;;;;2036;26;;;;;2034.5;0.0
1;22700;RAINFOREST_RESIN;9996;1;9995;25;;;10002;9;10004;1;10005;25;9999.0;0.0
1;22700;SQUID_INK;1849;26;;;;;1852;26;;;;;1850.5;0.0
1;22800;KELP;2033;27;;;;;2036;27;;;;;2034.5;0.0
1;22800;SQUID_INK;1847;27;;;;;1850;27;;;;;1848.5;0.0
1;22800;RAINFOREST_RESIN;10002;1;9996;1;9995;26;10004;1;10005;26;;;10003.0;0.0
1;22900;RAINFOREST_RESIN;10002;2;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
1;22900;SQUID_INK;1845;23;;;;;1846;1;1847;4;1848;1;1845.5;0.0
1;22900;KELP;2033;22;;;;;2035;4;2036;23;;;2034.0;0.0
1;23000;RAINFOREST_RESIN;9996;1;9995;20;;;10002;2;10004;1;10005;20;9999.0;0.0
1;23000;SQUID_INK;1847;1;1845;21;;;1848;21;;;;;1847.5;0.0
1;23000;KELP;2035;1;2033;21;;;2036;21;;;;;2035.5;0.0
1;23100;KELP;2033;35;;;;;2036;28;;;;;2034.5;0.0
1;23100;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;23100;SQUID_INK;1844;7;1843;28;;;1846;2;1847;26;;;1845.0;0.0
1;23200;SQUID_INK;1842;26;;;;;1845;25;;;;;1843.5;0.0
1;23200;KELP;2033;26;;;;;2036;25;;;;;2034.5;0.0
1;23200;RAINFOREST_RESIN;9996;1;9995;24;;;10002;4;10004;1;10005;24;9999.0;0.0
1;23300;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;23300;SQUID_INK;1841;23;;;;;1844;23;;;;;1842.5;0.0
1;23300;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;23400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;23400;SQUID_INK;1840;30;;;;;1843;1;1844;29;;;1841.5;0.0
1;23400;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;23500;KELP;2033;34;;;;;2036;31;;;;;2034.5;0.0
1;23500;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;23500;SQUID_INK;1841;34;;;;;1844;31;;;;;1842.5;0.0
1;23600;SQUID_INK;1843;26;;;;;1846;2;1847;25;;;1844.5;0.0
1;23600;KELP;2033;26;;;;;2036;27;;;;;2034.5;0.0
1;23600;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;23700;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;23700;SQUID_INK;1846;1;1844;21;;;1847;1;1848;20;;;1846.5;0.0
1;23700;KELP;2035;1;2033;21;;;2036;21;;;;;2035.5;0.0
1;23800;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;23800;SQUID_INK;1842;22;;;;;1846;22;;;;;1844.0;0.0
1;23800;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;23900;KELP;2033;27;;;;;2036;27;;;;;2034.5;0.0
1;23900;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;23900;SQUID_INK;1843;27;;;;;1846;27;;;;;1844.5;0.0
1;24000;SQUID_INK;1845;35;;;;;1848;29;;;;;1846.5;0.0
1;24000;KELP;2033;35;;;;;2036;29;;;;;2034.5;0.0
1;24000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;24100;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;24100;SQUID_INK;1841;2;1840;20;;;1844;22;;;;;1842.5;0.0
1;24100;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;24200;RAINFOREST_RESIN;9996;1;9995;23;;;10002;7;10004;1;10005;23;9999.0;0.0
1;24200;SQUID_INK;1849;1;1848;23;;;1850;8;1852;24;;;1849.5;0.0
1;24200;KELP;2033;24;;;;;2035;8;2036;24;;;2034.0;0.0
1;24300;KELP;2033;26;;;;;2035;5;2036;27;;;2034.0;0.0
1;24300;RAINFOREST_RESIN;10002;1;9995;27;;;10005;27;;;;;10003.5;0.0
1;24300;SQUID_INK;1846;26;;;;;1848;5;1849;27;;;1847.0;0.0
1;24400;SQUID_INK;1845;37;;;;;1848;29;;;;;1846.5;0.0
1;24400;KELP;2033;37;;;;;2036;29;;;;;2034.5;0.0
1;24400;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;24500;RAINFOREST_RESIN;9996;2;9995;24;;;10002;10;10004;2;10005;24;9999.0;0.0
1;24500;SQUID_INK;1844;26;;;;;1847;26;;;;;1845.5;0.0
1;24500;KELP;2033;26;;;;;2036;26;;;;;2034.5;0.0
1;24600;RAINFOREST_RESIN;9996;2;9995;22;;;10002;10;10004;2;10005;22;9999.0;0.0
1;24600;SQUID_INK;1846;24;;;;;1849;24;;;;;1847.5;0.0
1;24600;KELP;2033;24;;;;;2036;24;;;;;2034.5;0.0
1;24700;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;24700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;24700;SQUID_INK;1848;22;;;;;1851;22;;;;;1849.5;0.0
1;24800;SQUID_INK;1849;28;;;;;1852;28;;;;;1850.5;0.0
1;24800;KELP;2033;28;;;;;2036;28;;;;;2034.5;0.0
1;24800;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;24900;RAINFOREST_RESIN;9998;7;9995;24;;;10005;24;;;;;10001.5;0.0
1;24900;SQUID_INK;1848;24;;;;;1852;24;;;;;1850.0;0.0
1;24900;KELP;2033;24;;;;;2036;24;;;;;2034.5;0.0
1;25000;RAINFOREST_RESIN;10002;1;9996;1;9995;27;10004;1;10005;27;;;10003.0;0.0
1;25000;SQUID_INK;1852;28;;;;;1855;28;;;;;1853.5;0.0
1;25000;KELP;2033;28;;;;;2036;28;;;;;2034.5;0.0
1;25100;KELP;2033;27;;;;;2036;27;;;;;2034.5;0.0
1;25100;RAINFOREST_RESIN;9998;8;9996;1;9995;26;10004;1;10005;26;;;10001.0;0.0
1;25100;SQUID_INK;1850;27;;;;;1853;27;;;;;1851.5;0.0
1;25200;SQUID_INK;1851;32;;;;;1852;4;1854;26;;;1851.5;0.0
1;25200;KELP;2033;32;;;;;2034;4;2036;26;;;2033.5;0.0
1;25200;RAINFOREST_RESIN;9996;2;9995;24;;;10000;4;10004;2;10005;24;9998.0;0.0
1;25300;RAINFOREST_RESIN;9998;9;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
1;25300;SQUID_INK;1854;22;;;;;1857;22;;;;;1855.5;0.0
1;25300;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;25400;RAINFOREST_RESIN;10002;3;9996;2;9995;27;10004;2;10005;27;;;10003.0;0.0
1;25400;SQUID_INK;1852;29;;;;;1855;29;;;;;1853.5;0.0
1;25400;KELP;2033;29;;;;;2036;29;;;;;2034.5;0.0
1;25500;KELP;2033;24;;;;;2035;6;2036;24;;;2034.0;0.0
1;25500;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;25500;SQUID_INK;1852;24;;;;;1854;6;1855;1;1856;23;1853.0;0.0
1;25600;SQUID_INK;1853;24;;;;;1855;6;1856;24;;;1854.0;0.0
1;25600;KELP;2033;24;;;;;2035;6;2036;24;;;2034.0;0.0
1;25600;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;25700;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;25700;SQUID_INK;1849;25;;;;;1852;25;;;;;1850.5;0.0
1;25700;KELP;2033;25;;;;;2036;25;;;;;2034.5;0.0
1;25800;RAINFOREST_RESIN;10002;1;9996;2;9995;27;10004;2;10005;27;;;10003.0;0.0
1;25800;SQUID_INK;1849;29;;;;;1852;29;;;;;1850.5;0.0
1;25800;KELP;2033;29;;;;;2036;29;;;;;2034.5;0.0
1;25900;KELP;2033;29;;;;;2036;29;;;;;2034.5;0.0
1;25900;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;25900;SQUID_INK;1849;29;;;;;1852;29;;;;;1850.5;0.0
1;26000;SQUID_INK;1851;1;1849;27;;;1852;27;;;;;1851.5;0.0
1;26000;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;26000;KELP;2035;1;2033;27;;;2036;27;;;;;2035.5;0.0
1;26100;SQUID_INK;1850;1;1849;2;1848;25;1851;1;1852;24;;;1850.5;0.0
1;26100;KELP;2035;1;2033;27;;;2036;25;;;;;2035.5;0.0
1;26100;RAINFOREST_RESIN;10002;1;9998;3;9996;1;10004;1;10005;24;;;10003.0;0.0
1;26200;SQUID_INK;1848;29;;;;;1851;29;;;;;1849.5;0.0
1;26200;RAINFOREST_RESIN;10002;1;9996;2;9995;27;10004;2;10005;27;;;10003.0;0.0
1;26200;KELP;2033;29;;;;;2036;29;;;;;2034.5;0.0
1;26300;KELP;2033;25;;;;;2036;26;;;;;2034.5;0.0
1;26300;SQUID_INK;1847;25;;;;;1851;26;;;;;1849.0;0.0
1;26300;RAINFOREST_RESIN;9996;1;9995;25;;;10002;1;10004;1;10005;25;9999.0;0.0
1;26400;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;26400;KELP;2033;27;;;;;2036;27;;;;;2034.5;0.0
1;26400;SQUID_INK;1848;27;;;;;1851;27;;;;;1849.5;0.0
1;26500;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;26500;SQUID_INK;1847;22;;;;;1850;22;;;;;1848.5;0.0
1;26500;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;26600;SQUID_INK;1847;31;;;;;1850;31;;;;;1848.5;0.0
1;26600;RAINFOREST_RESIN;9996;2;9995;29;;;9998;4;10004;2;10005;29;9997.0;0.0
1;26600;KELP;2033;31;;;;;2036;31;;;;;2034.5;0.0
1;26700;KELP;2035;1;2033;34;;;2036;26;;;;;2035.5;0.0
1;26700;SQUID_INK;1846;1;1845;8;1844;26;1847;26;;;;;1846.5;0.0
1;26700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;26800;RAINFOREST_RESIN;10002;1;9998;7;9995;20;10005;20;;;;;10003.5;0.0
1;26800;KELP;2033;20;;;;;2036;20;;;;;2034.5;0.0
1;26800;SQUID_INK;1844;20;;;;;1847;20;;;;;1845.5;0.0
1;26900;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;26900;SQUID_INK;1846;22;;;;;1849;22;;;;;1847.5;0.0
1;26900;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;27000;SQUID_INK;1849;27;;;;;1850;6;1852;27;;;1849.5;0.0
1;27000;RAINFOREST_RESIN;9998;2;9996;1;9995;26;10004;1;10005;26;;;10001.0;0.0
1;27000;KELP;2033;27;;;;;2035;6;2036;27;;;2034.0;0.0
1;27100;KELP;2035;1;2033;29;;;2036;29;;;;;2035.5;0.0
1;27100;SQUID_INK;1851;1;1849;29;;;1852;29;;;;;1851.5;0.0
1;27100;RAINFOREST_RESIN;9996;2;9995;27;;;9998;1;10002;10;10004;2;9997.0;0.0
1;27200;RAINFOREST_RESIN;9998;3;9996;2;9995;23;10004;2;10005;23;;;10001.0;0.0
1;27200;KELP;2035;1;2033;32;;;2036;25;;;;;2035.5;0.0
1;27200;SQUID_INK;1853;1;1851;32;;;1854;25;;;;;1853.5;0.0
1;27300;KELP;2033;24;;;;;2036;25;;;;;2034.5;0.0
1;27300;SQUID_INK;1850;24;;;;;1853;25;;;;;1851.5;0.0
1;27300;RAINFOREST_RESIN;9995;25;;;;;10002;8;10005;25;;;9998.5;0.0
1;27400;SQUID_INK;1849;6;1848;23;;;1851;1;1852;22;;;1850.0;0.0
1;27400;RAINFOREST_RESIN;9996;1;9995;22;;;9998;3;10004;1;10005;22;9997.0;0.0
1;27400;KELP;2034;6;2033;23;;;2036;23;;;;;2035.0;0.0
1;27500;SQUID_INK;1848;30;;;;;1851;30;;;;;1849.5;0.0
1;27500;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;27500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;27600;RAINFOREST_RESIN;9996;2;9995;26;;;10002;4;10004;2;10005;26;9999.0;0.0
1;27600;KELP;2035;1;2033;34;;;2036;28;;;;;2035.5;0.0
1;27600;SQUID_INK;1851;1;1849;34;;;1852;28;;;;;1851.5;0.0
1;27700;SQUID_INK;1849;32;;;;;1852;32;;;;;1850.5;0.0
1;27700;KELP;2033;32;;;;;2036;32;;;;;2034.5;0.0
1;27700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;27800;SQUID_INK;1848;27;;;;;1851;22;;;;;1849.5;0.0
1;27800;RAINFOREST_RESIN;9998;2;9996;2;9995;20;10004;2;10005;20;;;10001.0;0.0
1;27800;KELP;2033;27;;;;;2036;22;;;;;2034.5;0.0
1;27900;SQUID_INK;1848;29;;;;;1850;8;1851;29;;;1849.0;0.0
1;27900;KELP;2033;29;;;;;2035;8;2036;29;;;2034.0;0.0
1;27900;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;28000;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;28000;KELP;2033;26;;;;;2036;22;;;;;2034.5;0.0
1;28000;SQUID_INK;1849;26;;;;;1852;22;;;;;1850.5;0.0
1;28100;SQUID_INK;1848;1;1847;20;;;1851;21;;;;;1849.5;0.0
1;28100;KELP;2033;21;;;;;2036;21;;;;;2034.5;0.0
1;28100;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;28200;SQUID_INK;1849;23;;;;;1852;23;;;;;1850.5;0.0
1;28200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;28200;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;28300;SQUID_INK;1849;30;;;;;1852;30;;;;;1850.5;0.0
1;28300;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;28300;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;28400;RAINFOREST_RESIN;9995;20;;;;;10002;8;10005;20;;;9998.5;0.0
1;28400;KELP;2033;20;;;;;2036;20;;;;;2034.5;0.0
1;28400;SQUID_INK;1849;20;;;;;1853;20;;;;;1851.0;0.0
1;28500;KELP;2033;33;;;;;2036;30;;;;;2034.5;0.0
1;28500;SQUID_INK;1847;33;;;;;1850;30;;;;;1848.5;0.0
1;28500;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;28600;KELP;2033;27;;;;;2034;5;2036;28;;;2033.5;0.0
1;28600;SQUID_INK;1848;27;;;;;1849;5;1851;28;;;1848.5;0.0
1;28600;RAINFOREST_RESIN;9996;2;9995;26;;;10000;5;10002;5;10004;2;9998.0;0.0
1;28700;SQUID_INK;1848;23;;;;;1851;24;;;;;1849.5;0.0
1;28700;RAINFOREST_RESIN;9998;8;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;28700;KELP;2033;23;;;;;2036;24;;;;;2034.5;0.0
1;28800;RAINFOREST_RESIN;9995;21;;;;;10002;8;10005;21;;;9998.5;0.0
1;28800;KELP;2033;21;;;;;2036;21;;;;;2034.5;0.0
1;28800;SQUID_INK;1848;21;;;;;1851;21;;;;;1849.5;0.0
1;28900;KELP;2033;24;;;;;2036;23;;;;;2034.5;0.0
1;28900;SQUID_INK;1850;24;;;;;1853;23;;;;;1851.5;0.0
1;28900;RAINFOREST_RESIN;9996;1;9995;22;;;10002;5;10004;1;10005;22;9999.0;0.0
1;29000;KELP;2033;26;;;;;2036;26;;;;;2034.5;0.0
1;29000;SQUID_INK;1851;2;1850;24;;;1854;26;;;;;1852.5;0.0
1;29000;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;0.0
1;29100;SQUID_INK;1850;23;;;;;1853;23;;;;;1851.5;0.0
1;29100;RAINFOREST_RESIN;9995;23;;;;;10002;2;10005;23;;;9998.5;0.0
1;29100;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;29200;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;29200;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;29200;SQUID_INK;1850;23;;;;;1853;1;1854;22;;;1851.5;0.0
1;29300;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;29300;SQUID_INK;1850;1;1849;22;;;1853;23;;;;;1851.5;0.0
1;29300;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;29400;KELP;2033;25;;;;;2036;25;;;;;2034.5;0.0
1;29400;SQUID_INK;1851;25;;;;;1854;25;;;;;1852.5;0.0
1;29400;RAINFOREST_RESIN;9996;2;9995;23;;;10002;4;10004;2;10005;23;9999.0;0.0
1;29500;SQUID_INK;1850;19;;;;;1853;20;;;;;1851.5;0.0
1;29500;RAINFOREST_RESIN;9998;6;9995;20;;;10005;20;;;;;10001.5;0.0
1;29500;KELP;2033;19;;;;;2036;20;;;;;2034.5;0.0
1;29600;RAINFOREST_RESIN;9996;1;9995;26;;;10000;4;10004;1;10005;26;9998.0;0.0
1;29600;KELP;2033;27;;;;;2034;4;2036;27;;;2033.5;0.0
1;29600;SQUID_INK;1853;27;;;;;1854;4;1856;27;;;1853.5;0.0
1;29700;KELP;2033;23;;;;;2035;8;2036;23;;;2034.0;0.0
1;29700;SQUID_INK;1851;1;1850;22;;;1852;8;1854;23;;;1851.5;0.0
1;29700;RAINFOREST_RESIN;9996;1;9995;22;;;10002;7;10004;1;10005;22;9999.0;0.0
1;29800;KELP;2035;1;2033;29;;;2036;25;;;;;2035.5;0.0
1;29800;SQUID_INK;1855;1;1853;29;;;1856;25;;;;;1855.5;0.0
1;29800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;29900;SQUID_INK;1854;32;;;;;1857;32;;;;;1855.5;0.0
1;29900;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;29900;KELP;2033;32;;;;;2036;32;;;;;2034.5;0.0
1;30000;RAINFOREST_RESIN;9998;10;9996;2;9995;23;10004;2;10005;23;;;10001.0;0.0
1;30000;KELP;2033;29;;;;;2036;25;;;;;2034.5;0.0
1;30000;SQUID_INK;1854;29;;;;;1857;25;;;;;1855.5;0.0
1;30100;KELP;2033;21;;;;;2036;1;2037;20;;;2034.5;0.0
1;30100;SQUID_INK;1853;21;;;;;1856;21;;;;;1854.5;0.0
1;30100;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;30200;KELP;2033;30;;;;;2036;2;2037;28;;;2034.5;0.0
1;30200;SQUID_INK;1851;30;;;;;1854;2;1855;28;;;1852.5;0.0
1;30200;RAINFOREST_RESIN;9996;2;9995;28;;;9998;1;10002;8;10004;2;9997.0;0.0
1;30300;SQUID_INK;1851;31;;;;;1853;1;1854;31;;;1852.0;0.0
1;30300;RAINFOREST_RESIN;10002;4;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
1;30300;KELP;2033;31;;;;;2035;1;2036;2;2037;29;2034.0;0.0
1;30400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;30400;KELP;2035;2;2033;30;;;2037;30;;;;;2036.0;0.0
1;30400;SQUID_INK;1852;2;1850;30;;;1853;30;;;;;1852.5;0.0
1;30500;KELP;2034;5;2033;30;;;2037;30;;;;;2035.5;0.0
1;30500;SQUID_INK;1852;35;;;;;1855;30;;;;;1853.5;0.0
1;30500;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;30600;KELP;2033;32;;;;;2035;7;2036;2;2037;30;2034.0;0.0
1;30600;SQUID_INK;1851;2;1850;30;;;1852;7;1854;32;;;1851.5;0.0
1;30600;RAINFOREST_RESIN;10002;1;9996;2;9995;30;10004;2;10005;30;;;10003.0;0.0
1;30700;SQUID_INK;1851;2;1850;27;;;1854;29;;;;;1852.5;0.0
1;30700;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;30700;KELP;2033;29;;;;;2037;29;;;;;2035.0;0.0
1;30800;RAINFOREST_RESIN;9998;8;9996;2;9995;29;10004;2;10005;29;;;10001.0;0.0
1;30800;KELP;2033;31;;;;;2036;2;2037;29;;;2034.5;0.0
1;30800;SQUID_INK;1849;31;;;;;1852;31;;;;;1850.5;0.0
1;30900;KELP;2033;21;;;;;2035;7;2036;21;;;2034.0;0.0
1;30900;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;30900;SQUID_INK;1850;21;;;;;1852;7;1853;21;;;1851.0;0.0
1;31000;KELP;2035;6;2033;28;;;2036;28;;;;;2035.5;0.0
1;31000;SQUID_INK;1851;6;1849;28;;;1852;2;1853;26;;;1851.5;0.0
1;31000;RAINFOREST_RESIN;9996;2;9995;26;;;10002;2;10004;2;10005;26;9999.0;0.0
1;31100;RAINFOREST_RESIN;10002;1;9995;23;;;10005;23;;;;;10003.5;0.0
1;31100;SQUID_INK;1850;14;;;;;1853;23;;;;;1851.5;0.0
1;31100;KELP;2033;23;;;;;2034;9;2037;23;;;2033.5;0.0
1;31200;RAINFOREST_RESIN;9996;1;9995;21;;;10002;6;10004;1;10005;21;9999.0;0.0
1;31200;KELP;2033;21;;;;;2035;8;2037;22;;;2034.0;0.0
1;31200;SQUID_INK;1850;21;;;;;1852;8;1853;22;;;1851.0;0.0
1;31300;KELP;2034;2;2033;20;;;2037;22;;;;;2035.5;0.0
1;31300;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;31300;SQUID_INK;1851;2;1850;20;;;1854;22;;;;;1852.5;0.0
1;31400;KELP;2033;22;;;;;2037;22;;;;;2035.0;0.0
1;31400;SQUID_INK;1851;22;;;;;1855;22;;;;;1853.0;0.0
1;31400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;31500;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;31500;SQUID_INK;1852;22;;;;;1855;22;;;;;1853.5;0.0
1;31500;KELP;2034;1;2033;21;;;2037;22;;;;;2035.5;0.0
1;31600;RAINFOREST_RESIN;9995;24;;;;;9998;3;10005;24;;;9996.5;0.0
1;31600;KELP;2033;24;;;;;2037;24;;;;;2035.0;0.0
1;31600;SQUID_INK;1851;24;;;;;1854;24;;;;;1852.5;0.0
1;31700;KELP;2033;29;;;;;2037;29;;;;;2035.0;0.0
1;31700;RAINFOREST_RESIN;9995;29;;;;;10002;3;10005;29;;;9998.5;0.0
1;31700;SQUID_INK;1852;29;;;;;1856;29;;;;;1854.0;0.0
1;31800;KELP;2035;2;2033;24;;;2037;24;;;;;2036.0;0.0
1;31800;SQUID_INK;1850;2;1849;24;;;1852;24;;;;;1851.0;0.0
1;31800;RAINFOREST_RESIN;9996;2;9995;22;;;10002;2;10004;2;10005;22;9999.0;0.0
1;31900;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;31900;SQUID_INK;1848;8;1847;26;;;1851;28;;;;;1849.5;0.0
1;31900;KELP;2034;6;2033;28;;;2037;28;;;;;2035.5;0.0
1;32000;RAINFOREST_RESIN;9996;2;9995;20;;;10002;10;10004;2;10005;20;9999.0;0.0
1;32000;SQUID_INK;1847;22;;;;;1850;22;;;;;1848.5;0.0
1;32000;KELP;2033;22;;;;;2037;22;;;;;2035.0;0.0
1;32100;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;32100;RAINFOREST_RESIN;9998;9;9995;25;;;10005;25;;;;;10001.5;0.0
1;32100;SQUID_INK;1848;25;;;;;1851;25;;;;;1849.5;0.0
1;32200;SQUID_INK;1846;25;;;;;1849;25;;;;;1847.5;0.0
1;32200;KELP;2033;25;;;;;2036;1;2037;24;;;2034.5;0.0
1;32200;RAINFOREST_RESIN;9996;1;9995;24;;;10002;5;10004;1;10005;24;9999.0;0.0
1;32300;RAINFOREST_RESIN;10000;3;9996;2;9995;30;10004;2;10005;30;;;10002.0;0.0
1;32300;SQUID_INK;1847;3;1846;32;;;1849;32;;;;;1848.0;0.0
1;32300;KELP;2034;3;2033;32;;;2037;32;;;;;2035.5;0.0
1;32400;RAINFOREST_RESIN;9998;2;9995;29;;;10005;29;;;;;10001.5;0.0
1;32400;SQUID_INK;1846;29;;;;;1849;29;;;;;1847.5;0.0
1;32400;KELP;2033;29;;;;;2037;29;;;;;2035.0;0.0
1;32500;KELP;2034;3;2033;24;;;2037;26;;;;;2035.5;0.0
1;32500;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;0.0
1;32500;SQUID_INK;1846;1;1845;26;;;1848;2;1849;24;;;1847.0;0.0
1;32600;SQUID_INK;1843;28;;;;;1846;28;;;;;1844.5;0.0
1;32600;KELP;2034;2;2033;26;;;2037;28;;;;;2035.5;0.0
1;32600;RAINFOREST_RESIN;9998;1;9996;2;9995;26;10004;2;10005;26;;;10001.0;0.0
1;32700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;32700;SQUID_INK;1839;32;;;;;1842;32;;;;;1840.5;0.0
1;32700;KELP;2034;32;;;;;2037;32;;;;;2035.5;0.0
1;32800;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;32800;SQUID_INK;1838;29;;;;;1841;29;;;;;1839.5;0.0
1;32800;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;32900;KELP;2034;21;;;;;2037;21;;;;;2035.5;0.0
1;32900;RAINFOREST_RESIN;9996;1;9995;20;;;10002;10;10004;1;10005;20;9999.0;0.0
1;32900;SQUID_INK;1834;21;;;;;1837;21;;;;;1835.5;0.0
1;33000;SQUID_INK;1837;28;;;;;1839;4;1840;28;;;1838.0;0.0
1;33000;KELP;2034;28;;;;;2036;4;2037;28;;;2035.0;0.0
1;33000;RAINFOREST_RESIN;9998;2;9995;28;;;10005;28;;;;;10001.5;0.0
1;33100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;33100;SQUID_INK;1836;26;;;;;1839;26;;;;;1837.5;0.0
1;33100;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;33200;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;33200;SQUID_INK;1835;24;;;;;1837;5;1838;24;;;1836.0;0.0
1;33200;KELP;2034;1;2033;23;;;2035;5;2037;24;;;2034.5;0.0
1;33300;KELP;2034;31;;;;;2037;31;;;;;2035.5;0.0
1;33300;RAINFOREST_RESIN;9996;1;9995;30;;;10002;1;10004;1;10005;30;9999.0;0.0
1;33300;SQUID_INK;1833;31;;;;;1836;31;;;;;1834.5;0.0
1;33400;SQUID_INK;1833;20;;;;;1835;2;1836;20;;;1834.0;0.0
1;33400;KELP;2034;20;;;;;2036;2;2037;20;;;2035.0;0.0
1;33400;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;33500;RAINFOREST_RESIN;9996;2;9995;21;;;10002;4;10004;2;10005;21;9999.0;0.0
1;33500;SQUID_INK;1840;23;;;;;1843;23;;;;;1841.5;0.0
1;33500;KELP;2034;2;2033;21;;;2037;23;;;;;2035.5;0.0
1;33600;RAINFOREST_RESIN;9995;27;;;;;9998;2;10005;27;;;9996.5;0.0
1;33600;SQUID_INK;1843;27;;;;;1846;27;;;;;1844.5;0.0
1;33600;KELP;2033;27;;;;;2037;27;;;;;2035.0;0.0
1;33700;KELP;2034;1;2033;25;;;2036;6;2037;26;;;2035.0;0.0
1;33700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;33700;SQUID_INK;1842;26;;;;;1844;6;1845;26;;;1843.0;0.0
1;33800;SQUID_INK;1845;21;;;;;1848;21;;;;;1846.5;0.0
1;33800;KELP;2033;21;;;;;2037;21;;;;;2035.0;0.0
1;33800;RAINFOREST_RESIN;9995;21;;;;;10002;4;10005;21;;;9998.5;0.0
1;33900;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;33900;SQUID_INK;1845;28;;;;;1848;28;;;;;1846.5;0.0
1;33900;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;34000;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;34000;SQUID_INK;1848;1;1846;30;;;1849;30;;;;;1848.5;0.0
1;34000;KELP;2036;1;2034;2;2033;28;2037;30;;;;;2036.5;0.0
1;34100;KELP;2034;27;;;;;2037;27;;;;;2035.5;0.0
1;34100;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;34100;SQUID_INK;1845;27;;;;;1848;2;1849;25;;;1846.5;0.0
1;34200;SQUID_INK;1847;32;;;;;1850;32;;;;;1848.5;0.0
1;34200;KELP;2034;2;2033;30;;;2037;32;;;;;2035.5;0.0
1;34200;RAINFOREST_RESIN;9996;2;9995;30;;;10002;2;10004;2;10005;30;9999.0;0.0
1;34300;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;34300;SQUID_INK;1846;28;;;;;1849;29;;;;;1847.5;0.0
1;34300;KELP;2034;28;;;;;2037;29;;;;;2035.5;0.0
1;34400;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;34400;SQUID_INK;1846;30;;;;;1849;30;;;;;1847.5;0.0
1;34400;KELP;2034;2;2033;28;;;2037;30;;;;;2035.5;0.0
1;34500;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;34500;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;34500;SQUID_INK;1844;24;;;;;1847;24;;;;;1845.5;0.0
1;34600;SQUID_INK;1846;24;;;;;1849;24;;;;;1847.5;0.0
1;34600;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;34600;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;34700;SQUID_INK;1847;32;;;;;1850;25;;;;;1848.5;0.0
1;34700;KELP;2034;32;;;;;2037;25;;;;;2035.5;0.0
1;34700;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;34800;SQUID_INK;1846;14;;;;;1849;24;;;;;1847.5;0.0
1;34800;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;34800;KELP;2034;14;;;;;2037;24;;;;;2035.5;0.0
1;34900;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;34900;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;34900;SQUID_INK;1844;24;;;;;1848;24;;;;;1846.0;0.0
1;35000;SQUID_INK;1844;29;;;;;1847;29;;;;;1845.5;0.0
1;35000;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;35000;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;35100;SQUID_INK;1844;23;;;;;1847;23;;;;;1845.5;0.0
1;35100;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;35100;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;35200;SQUID_INK;1844;24;;;;;1846;3;1847;24;;;1845.0;0.0
1;35200;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;35200;KELP;2034;24;;;;;2036;3;2037;24;;;2035.0;0.0
1;35300;KELP;2034;31;;;;;2037;23;;;;;2035.5;0.0
1;35300;SQUID_INK;1845;31;;;;;1848;23;;;;;1846.5;0.0
1;35300;RAINFOREST_RESIN;9998;8;9996;1;9995;22;10004;1;10005;22;;;10001.0;0.0
1;35400;RAINFOREST_RESIN;10002;1;9996;2;9995;25;10004;2;10005;25;;;10003.0;0.0
1;35400;KELP;2034;27;;;;;2037;2;2038;25;;;2035.5;0.0
1;35400;SQUID_INK;1844;27;;;;;1847;27;;;;;1845.5;0.0
1;35500;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;35500;SQUID_INK;1845;29;;;;;1848;29;;;;;1846.5;0.0
1;35500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;35600;SQUID_INK;1844;24;;;;;1847;24;;;;;1845.5;0.0
1;35600;RAINFOREST_RESIN;9996;1;9995;23;;;10002;3;10004;1;10005;23;9999.0;0.0
1;35600;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;35700;KELP;2034;2;2033;29;;;2037;31;;;;;2035.5;0.0
1;35700;SQUID_INK;1842;31;;;;;1845;31;;;;;1843.5;0.0
1;35700;RAINFOREST_RESIN;9996;2;9995;29;;;10002;9;10004;2;10005;29;9999.0;0.0
1;35800;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;35800;KELP;2034;29;;;;;2037;23;;;;;2035.5;0.0
1;35800;SQUID_INK;1843;29;;;;;1846;23;;;;;1844.5;0.0
1;35900;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;35900;SQUID_INK;1839;30;;;;;1842;2;1843;28;;;1840.5;0.0
1;35900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;36000;SQUID_INK;1841;30;;;;;1842;2;1843;2;1844;30;1841.5;0.0
1;36000;RAINFOREST_RESIN;9995;30;;;;;10000;2;10002;9;10005;30;9997.5;0.0
1;36000;KELP;2034;30;;;;;2035;2;2036;2;2037;30;2034.5;0.0
1;36100;KELP;2034;23;;;;;2036;6;2037;23;;;2035.0;0.0
1;36100;SQUID_INK;1841;23;;;;;1843;6;1844;23;;;1842.0;0.0
1;36100;RAINFOREST_RESIN;9998;7;9996;2;9995;21;10004;2;10005;21;;;10001.0;0.0
1;36200;RAINFOREST_RESIN;9998;5;9996;1;9995;29;10004;1;10005;29;;;10001.0;0.0
1;36200;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;36200;SQUID_INK;1842;30;;;;;1845;30;;;;;1843.5;0.0
1;36300;SQUID_INK;1843;31;;;;;1846;31;;;;;1844.5;0.0
1;36300;KELP;2034;31;;;;;2037;31;;;;;2035.5;0.0
1;36300;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;36400;SQUID_INK;1842;30;;;;;1845;29;;;;;1843.5;0.0
1;36400;RAINFOREST_RESIN;9996;1;9995;28;;;10002;8;10004;1;10005;28;9999.0;0.0
1;36400;KELP;2034;30;;;;;2037;29;;;;;2035.5;0.0
1;36500;SQUID_INK;1843;28;;;;;1846;29;;;;;1844.5;0.0
1;36500;KELP;2034;28;;;;;2037;29;;;;;2035.5;0.0
1;36500;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;36600;RAINFOREST_RESIN;9996;1;9995;30;;;10000;2;10004;1;10005;30;9998.0;0.0
1;36600;KELP;2034;31;;;;;2035;2;2037;31;;;2034.5;0.0
1;36600;SQUID_INK;1841;31;;;;;1842;2;1844;31;;;1841.5;0.0
1;36700;SQUID_INK;1842;22;;;;;1845;22;;;;;1843.5;0.0
1;36700;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;36700;RAINFOREST_RESIN;10002;1;9996;1;9995;21;10004;1;10005;21;;;10003.0;0.0
1;36800;SQUID_INK;1844;2;1843;23;;;1847;25;;;;;1845.5;0.0
1;36800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;36800;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;36900;SQUID_INK;1845;22;;;;;1848;22;;;;;1846.5;0.0
1;36900;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;36900;RAINFOREST_RESIN;9998;6;9995;22;;;10005;22;;;;;10001.5;0.0
1;37000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;37000;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;37000;SQUID_INK;1844;22;;;;;1847;22;;;;;1845.5;0.0
1;37100;SQUID_INK;1845;5;1844;24;;;1847;24;;;;;1846.0;0.0
1;37100;KELP;2035;5;2034;24;;;2037;24;;;;;2036.0;0.0
1;37100;RAINFOREST_RESIN;10000;5;9995;24;;;10005;24;;;;;10002.5;0.0
1;37200;SQUID_INK;1844;29;;;;;1847;29;;;;;1845.5;0.0
1;37200;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;37200;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;37300;SQUID_INK;1840;23;;;;;1842;4;1843;23;;;1841.0;0.0
1;37300;KELP;2034;23;;;;;2036;4;2037;23;;;2035.0;0.0
1;37300;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;37400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;37400;KELP;2034;26;;;;;2037;22;;;;;2035.5;0.0
1;37400;SQUID_INK;1842;26;;;;;1845;22;;;;;1843.5;0.0
1;37500;KELP;2035;5;2034;31;;;2037;31;;;;;2036.0;0.0
1;37500;SQUID_INK;1844;5;1843;31;;;1846;31;;;;;1845.0;0.0
1;37500;RAINFOREST_RESIN;10000;5;9996;1;9995;30;10004;1;10005;30;;;10002.0;0.0
1;37600;KELP;2034;25;;;;;2036;5;2037;25;;;2035.0;0.0
1;37600;SQUID_INK;1845;25;;;;;1847;5;1848;25;;;1846.0;0.0
1;37600;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;37700;SQUID_INK;1844;20;;;;;1847;20;;;;;1845.5;0.0
1;37700;RAINFOREST_RESIN;10002;1;9995;20;;;10005;20;;;;;10003.5;0.0
1;37700;KELP;2034;20;;;;;2037;20;;;;;2035.5;0.0
1;37800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;37800;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;37800;SQUID_INK;1848;25;;;;;1851;25;;;;;1849.5;0.0
1;37900;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;37900;SQUID_INK;1848;29;;;;;1851;29;;;;;1849.5;0.0
1;37900;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;38000;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;38000;SQUID_INK;1848;30;;;;;1852;30;;;;;1850.0;0.0
1;38000;RAINFOREST_RESIN;9998;3;9995;30;;;10005;30;;;;;10001.5;0.0
1;38100;SQUID_INK;1848;29;;;;;1850;4;1851;29;;;1849.0;0.0
1;38100;RAINFOREST_RESIN;9998;4;9996;1;9995;28;10004;1;10005;28;;;10001.0;0.0
1;38100;KELP;2034;29;;;;;2036;4;2037;29;;;2035.0;0.0
1;38200;RAINFOREST_RESIN;9998;4;9996;2;9995;29;10004;2;10005;29;;;10001.0;0.0
1;38200;KELP;2034;31;;;;;2037;31;;;;;2035.5;0.0
1;38200;SQUID_INK;1848;31;;;;;1851;31;;;;;1849.5;0.0
1;38300;KELP;2034;27;;;;;2037;22;;;;;2035.5;0.0
1;38300;SQUID_INK;1849;27;;;;;1852;22;;;;;1850.5;0.0
1;38300;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;38400;KELP;2034;27;;;;;2037;31;;;;;2035.5;0.0
1;38400;SQUID_INK;1849;29;;;;;1850;2;1853;31;;;1849.5;0.0
1;38400;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;38500;SQUID_INK;1850;24;;;;;1853;24;;;;;1851.5;0.0
1;38500;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;38500;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;38600;RAINFOREST_RESIN;10002;1;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
1;38600;KELP;2034;31;;;;;2037;31;;;;;2035.5;0.0
1;38600;SQUID_INK;1850;31;;;;;1853;31;;;;;1851.5;0.0
1;38700;KELP;2034;21;;;;;2037;22;;;;;2035.5;0.0
1;38700;SQUID_INK;1850;21;;;;;1853;22;;;;;1851.5;0.0
1;38700;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;38800;KELP;2034;27;;;;;2036;2;2037;27;;;2035.0;0.0
1;38800;SQUID_INK;1850;27;;;;;1852;2;1853;27;;;1851.0;0.0
1;38800;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;38900;SQUID_INK;1851;25;;;;;1854;25;;;;;1852.5;0.0
1;38900;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;38900;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;39000;RAINFOREST_RESIN;9996;1;9995;23;;;10000;3;10004;1;10005;23;9998.0;0.0
1;39000;KELP;2034;24;;;;;2035;3;2036;6;2037;24;2034.5;0.0
1;39000;SQUID_INK;1852;1;1851;23;;;1853;9;1855;24;;;1852.5;0.0
1;39100;KELP;2034;38;;;;;2037;30;;;;;2035.5;0.0
1;39100;SQUID_INK;1850;38;;;;;1853;30;;;;;1851.5;0.0
1;39100;RAINFOREST_RESIN;9996;2;9995;28;;;9998;3;10004;2;10005;28;9997.0;0.0
1;39200;KELP;2034;26;;;;;2035;4;2037;21;;;2034.5;0.0
1;39200;SQUID_INK;1849;26;;;;;1850;4;1852;21;;;1849.5;0.0
1;39200;RAINFOREST_RESIN;9995;21;;;;;10000;4;10005;21;;;9997.5;0.0
1;39300;SQUID_INK;1849;24;;;;;1853;24;;;;;1851.0;0.0
1;39300;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;39300;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;39400;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;39400;KELP;2034;21;;;;;2038;21;;;;;2036.0;0.0
1;39400;SQUID_INK;1848;21;;;;;1851;21;;;;;1849.5;0.0
1;39500;KELP;2034;29;;;;;2036;3;2037;29;;;2035.0;0.0
1;39500;SQUID_INK;1847;29;;;;;1849;3;1851;29;;;1848.0;0.0
1;39500;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;39600;SQUID_INK;1849;31;;;;;1852;31;;;;;1850.5;0.0
1;39600;KELP;2034;31;;;;;2037;31;;;;;2035.5;0.0
1;39600;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;39700;RAINFOREST_RESIN;9996;1;9995;29;;;10000;6;10004;1;10005;29;9998.0;0.0
1;39700;SQUID_INK;1849;29;;;;;1850;6;1852;30;;;1849.5;0.0
1;39700;KELP;2034;29;;;;;2035;6;2037;30;;;2034.5;0.0
1;39800;RAINFOREST_RESIN;9996;2;9995;22;;;9998;1;10004;2;10005;22;9997.0;0.0
1;39800;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;39800;SQUID_INK;1849;24;;;;;1852;24;;;;;1850.5;0.0
1;39900;KELP;2034;29;;;;;2036;7;2037;29;;;2035.0;0.0
1;39900;RAINFOREST_RESIN;9998;10;9996;1;9995;28;10004;1;10005;28;;;10001.0;0.0
1;39900;SQUID_INK;1849;29;;;;;1851;7;1853;29;;;1850.0;0.0
1;40000;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;40000;SQUID_INK;1849;26;;;;;1852;26;;;;;1850.5;0.0
1;40000;RAINFOREST_RESIN;10002;11;9996;1;9995;25;10004;1;10005;25;;;10003.0;0.0
1;40100;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;40100;SQUID_INK;1851;30;;;;;1853;4;1854;30;;;1852.0;0.0
1;40100;KELP;2034;30;;;;;2036;4;2037;30;;;2035.0;0.0
1;40200;RAINFOREST_RESIN;9996;1;9995;24;;;10002;7;10004;1;10005;24;9999.0;0.0
1;40200;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;40200;SQUID_INK;1851;25;;;;;1854;25;;;;;1852.5;0.0
1;40300;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;40300;RAINFOREST_RESIN;10002;4;9996;1;9995;29;10004;1;10005;29;;;10003.0;0.0
1;40300;SQUID_INK;1851;30;;;;;1854;30;;;;;1852.5;0.0
1;40400;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;40400;SQUID_INK;1852;25;;;;;1855;25;;;;;1853.5;0.0
1;40400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;40500;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;40500;SQUID_INK;1851;22;;;;;1854;22;;;;;1852.5;0.0
1;40500;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;40600;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;0.0
1;40600;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;40600;SQUID_INK;1851;28;;;;;1854;28;;;;;1852.5;0.0
1;40700;KELP;2036;1;2034;36;;;2037;30;;;;;2036.5;0.0
1;40700;RAINFOREST_RESIN;9998;10;9996;1;9995;29;10004;1;10005;29;;;10001.0;0.0
1;40700;SQUID_INK;1854;1;1853;6;1852;30;1856;30;;;;;1855.0;0.0
1;40800;SQUID_INK;1852;21;;;;;1855;21;;;;;1853.5;0.0
1;40800;KELP;2034;21;;;;;2037;21;;;;;2035.5;0.0
1;40800;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;40900;RAINFOREST_RESIN;9998;2;9995;25;;;10005;25;;;;;10001.5;0.0
1;40900;SQUID_INK;1852;3;1851;25;;;1855;25;;;;;1853.5;0.0
1;40900;KELP;2034;28;;;;;2037;25;;;;;2035.5;0.0
1;41000;RAINFOREST_RESIN;9998;10;9996;1;9995;20;10000;2;10004;1;10005;20;9999.0;0.0
1;41000;SQUID_INK;1852;21;;;;;1853;2;1854;7;1855;21;1852.5;0.0
1;41000;KELP;2034;1;2033;20;;;2035;2;2036;7;2037;21;2034.5;0.0
1;41100;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;41100;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;41100;SQUID_INK;1851;25;;;;;1854;25;;;;;1852.5;0.0
1;41200;SQUID_INK;1852;20;;;;;1855;20;;;;;1853.5;0.0
1;41200;KELP;2034;20;;;;;2037;20;;;;;2035.5;0.0
1;41200;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;41300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;41300;SQUID_INK;1856;35;;;;;1859;27;;;;;1857.5;0.0
1;41300;KELP;2034;35;;;;;2037;27;;;;;2035.5;0.0
1;41400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;41400;SQUID_INK;1855;30;;;;;1858;30;;;;;1856.5;0.0
1;41400;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;41500;KELP;2034;38;;;;;2037;31;;;;;2035.5;0.0
1;41500;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;41500;SQUID_INK;1854;38;;;;;1857;31;;;;;1855.5;0.0
1;41600;SQUID_INK;1853;26;;;;;1856;26;;;;;1854.5;0.0
1;41600;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;41600;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;41700;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;41700;SQUID_INK;1859;2;1857;23;;;1860;23;;;;;1859.5;0.0
1;41700;KELP;2036;2;2034;23;;;2038;23;;;;;2037.0;0.0
1;41800;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;41800;SQUID_INK;1857;21;;;;;1860;22;;;;;1858.5;0.0
1;41800;KELP;2034;21;;;;;2037;1;2038;21;;;2035.5;0.0
1;41900;KELP;2034;28;;;;;2038;28;;;;;2036.0;0.0
1;41900;RAINFOREST_RESIN;9995;28;;;;;10002;8;10005;28;;;9998.5;0.0
1;41900;SQUID_INK;1855;28;;;;;1859;28;;;;;1857.0;0.0
1;42000;SQUID_INK;1857;28;;;;;1860;28;;;;;1858.5;0.0
1;42000;KELP;2034;28;;;;;2037;1;2038;27;;;2035.5;0.0
1;42000;RAINFOREST_RESIN;9996;1;9995;27;;;9998;1;10004;1;10005;27;9997.0;0.0
1;42100;RAINFOREST_RESIN;10002;2;9995;22;;;10005;22;;;;;10003.5;0.0
1;42100;SQUID_INK;1857;29;;;;;1860;22;;;;;1858.5;0.0
1;42100;KELP;2035;7;2034;22;;;2038;22;;;;;2036.5;0.0
1;42200;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;42200;SQUID_INK;1858;22;;;;;1861;22;;;;;1859.5;0.0
1;42200;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;42300;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;42300;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;42300;SQUID_INK;1860;22;;;;;1863;22;;;;;1861.5;0.0
1;42400;SQUID_INK;1859;28;;;;;1862;2;1863;26;;;1860.5;0.0
1;42400;KELP;2034;28;;;;;2037;2;2038;26;;;2035.5;0.0
1;42400;RAINFOREST_RESIN;9996;2;9995;26;;;10002;2;10004;2;10005;26;9999.0;0.0
1;42500;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;42500;SQUID_INK;1860;24;;;;;1861;2;1863;24;;;1860.5;0.0
1;42500;KELP;2034;24;;;;;2036;2;2038;24;;;2035.0;0.0
1;42600;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;42600;SQUID_INK;1860;1;1858;28;;;1861;28;;;;;1860.5;0.0
1;42600;KELP;2036;1;2034;28;;;2038;28;;;;;2037.0;0.0
1;42700;KELP;2034;24;;;;;2037;1;2038;23;;;2035.5;0.0
1;42700;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;42700;SQUID_INK;1860;24;;;;;1863;24;;;;;1861.5;0.0
1;42800;SQUID_INK;1858;29;;;;;1859;2;1861;29;;;1858.5;0.0
1;42800;KELP;2034;29;;;;;2035;2;2038;29;;;2034.5;0.0
1;42800;RAINFOREST_RESIN;9995;29;;;;;10000;2;10005;29;;;9997.5;0.0
1;42900;RAINFOREST_RESIN;10002;5;9995;20;;;10005;20;;;;;10003.5;0.0
1;42900;SQUID_INK;1860;20;;;;;1863;20;;;;;1861.5;0.0
1;42900;KELP;2034;20;;;;;2038;20;;;;;2036.0;0.0
1;43000;RAINFOREST_RESIN;9996;1;9995;26;;;10002;6;10004;1;10005;26;9999.0;0.0
1;43000;SQUID_INK;1864;27;;;;;1867;27;;;;;1865.5;0.0
1;43000;KELP;2034;27;;;;;2037;1;2038;26;;;2035.5;0.0
1;43100;KELP;2034;25;;;;;2037;1;2038;24;;;2035.5;0.0
1;43100;RAINFOREST_RESIN;9998;9;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
1;43100;SQUID_INK;1865;1;1864;24;;;1868;25;;;;;1866.5;0.0
1;43200;SQUID_INK;1863;31;;;;;1866;31;;;;;1864.5;0.0
1;43200;KELP;2034;31;;;;;2037;2;2038;29;;;2035.5;0.0
1;43200;RAINFOREST_RESIN;9996;2;9995;29;;;10002;5;10004;2;10005;29;9999.0;0.0
1;43300;RAINFOREST_RESIN;9998;10;9995;20;;;10005;20;;;;;10001.5;0.0
1;43300;SQUID_INK;1864;1;1861;20;;;1865;20;;;;;1864.5;0.0
1;43300;KELP;2036;1;2034;20;;;2038;20;;;;;2037.0;0.0
1;43400;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;43400;SQUID_INK;1860;24;;;;;1863;24;;;;;1861.5;0.0
1;43400;KELP;2034;24;;;;;2038;24;;;;;2036.0;0.0
1;43500;KELP;2035;6;2034;25;;;2038;25;;;;;2036.5;0.0
1;43500;RAINFOREST_RESIN;9996;1;9995;24;;;10002;7;10004;1;10005;24;9999.0;0.0
1;43500;SQUID_INK;1861;31;;;;;1864;25;;;;;1862.5;0.0
1;43600;SQUID_INK;1853;22;;;;;1855;1;1856;22;;;1854.0;0.0
1;43600;RAINFOREST_RESIN;9995;22;;;;;10002;5;10005;22;;;9998.5;0.0
1;43600;KELP;2034;22;;;;;2036;1;2038;22;;;2035.0;0.0
1;43700;SQUID_INK;1853;30;;;;;1856;30;;;;;1854.5;0.0
1;43700;KELP;2034;30;;;;;2037;1;2038;29;;;2035.5;0.0
1;43700;RAINFOREST_RESIN;9996;1;9995;29;;;10002;6;10004;1;10005;29;9999.0;0.0
1;43800;SQUID_INK;1853;1;1852;22;;;1856;23;;;;;1854.5;0.0
1;43800;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;43800;KELP;2034;23;;;;;2037;1;2038;22;;;2035.5;0.0
1;43900;KELP;2034;32;;;;;2037;26;;;;;2035.5;0.0
1;43900;RAINFOREST_RESIN;9996;2;9995;24;;;10002;2;10004;2;10005;24;9999.0;0.0
1;43900;SQUID_INK;1852;32;;;;;1855;26;;;;;1853.5;0.0
1;44000;SQUID_INK;1852;27;;;;;1855;27;;;;;1853.5;0.0
1;44000;RAINFOREST_RESIN;10002;4;9998;10;9996;2;10004;2;10005;25;;;10003.0;0.0
1;44000;KELP;2034;27;;;;;2037;27;;;;;2035.5;0.0
1;44100;KELP;2034;24;;;;;2036;4;2037;24;;;2035.0;0.0
1;44100;SQUID_INK;1849;24;;;;;1851;4;1852;24;;;1850.0;0.0
1;44100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;44200;SQUID_INK;1847;24;;;;;1850;24;;;;;1848.5;0.0
1;44200;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;44200;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;44300;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;44300;SQUID_INK;1850;26;;;;;1853;26;;;;;1851.5;0.0
1;44300;RAINFOREST_RESIN;9996;2;9995;24;;;9998;2;10004;2;10005;24;9997.0;0.0
1;44400;RAINFOREST_RESIN;9996;1;9995;25;;;10002;7;10004;1;10005;25;9999.0;0.0
1;44400;KELP;2034;27;;;;;2037;26;;;;;2035.5;0.0
1;44400;SQUID_INK;1850;1;1849;26;;;1853;26;;;;;1851.5;0.0
1;44500;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;44500;SQUID_INK;1849;30;;;;;1852;30;;;;;1850.5;0.0
1;44500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;44600;SQUID_INK;1850;22;;;;;1853;22;;;;;1851.5;0.0
1;44600;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;44600;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;44700;KELP;2034;27;;;;;2036;6;2037;27;;;2035.0;0.0
1;44700;SQUID_INK;1849;27;;;;;1851;6;1852;2;1853;25;1850.0;0.0
1;44700;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;44800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;44800;KELP;2034;25;;;;;2036;3;2037;25;;;2035.0;0.0
1;44800;SQUID_INK;1849;25;;;;;1851;3;1852;25;;;1850.0;0.0
1;44900;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;44900;SQUID_INK;1849;23;;;;;1852;23;;;;;1850.5;0.0
1;44900;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;45000;SQUID_INK;1847;27;;;;;1850;28;;;;;1848.5;0.0
1;45000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;45000;KELP;2034;27;;;;;2037;28;;;;;2035.5;0.0
1;45100;KELP;2034;27;;;;;2037;27;;;;;2035.5;0.0
1;45100;SQUID_INK;1848;27;;;;;1851;27;;;;;1849.5;0.0
1;45100;RAINFOREST_RESIN;9995;27;;;;;9998;1;10005;27;;;9996.5;0.0
1;45200;RAINFOREST_RESIN;10002;1;9996;1;9995;20;10004;1;10005;20;;;10003.0;0.0
1;45200;KELP;2034;20;;;;;2037;21;;;;;2035.5;0.0
1;45200;SQUID_INK;1848;20;;;;;1851;21;;;;;1849.5;0.0
1;45300;SQUID_INK;1848;22;;;;;1851;23;;;;;1849.5;0.0
1;45300;KELP;2034;22;;;;;2037;23;;;;;2035.5;0.0
1;45300;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;45400;SQUID_INK;1846;25;;;;;1849;25;;;;;1847.5;0.0
1;45400;RAINFOREST_RESIN;9998;4;9995;25;;;10005;25;;;;;10001.5;0.0
1;45400;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;45500;SQUID_INK;1846;21;;;;;1847;3;1849;21;;;1846.5;0.0
1;45500;KELP;2033;20;;;;;2034;2;2037;21;;;2033.5;0.0
1;45500;RAINFOREST_RESIN;9996;1;9995;20;;;9998;3;10004;1;10005;20;9997.0;0.0
1;45600;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;45600;KELP;2034;1;2033;23;;;2035;6;2037;24;;;2034.5;0.0
1;45600;SQUID_INK;1847;24;;;;;1849;6;1850;24;;;1848.0;0.0
1;45700;SQUID_INK;1847;23;;;;;1850;23;;;;;1848.5;0.0
1;45700;KELP;2034;2;2033;21;;;2037;23;;;;;2035.5;0.0
1;45700;RAINFOREST_RESIN;10002;1;9996;2;9995;21;10004;2;10005;21;;;10003.0;0.0
1;45800;SQUID_INK;1848;5;1847;2;1846;30;1850;32;;;;;1849.0;0.0
1;45800;RAINFOREST_RESIN;10000;5;9998;7;9996;2;10004;2;10005;30;;;10002.0;0.0
1;45800;KELP;2035;5;2033;32;;;2037;32;;;;;2036.0;0.0
1;45900;SQUID_INK;1847;25;;;;;1851;26;;;;;1849.0;0.0
1;45900;KELP;2033;25;;;;;2037;26;;;;;2035.0;0.0
1;45900;RAINFOREST_RESIN;9998;8;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;46000;RAINFOREST_RESIN;9995;23;;;;;9998;1;10005;23;;;9996.5;0.0
1;46000;KELP;2033;23;;;;;2037;23;;;;;2035.0;0.0
1;46000;SQUID_INK;1848;23;;;;;1851;23;;;;;1849.5;0.0
1;46100;SQUID_INK;1849;29;;;;;1852;25;;;;;1850.5;0.0
1;46100;KELP;2034;4;2033;25;;;2037;25;;;;;2035.5;0.0
1;46100;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;46200;SQUID_INK;1849;28;;;;;1852;24;;;;;1850.5;0.0
1;46200;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;46200;KELP;2034;4;2033;24;;;2037;24;;;;;2035.5;0.0
1;46300;SQUID_INK;1848;28;;;;;1851;28;;;;;1849.5;0.0
1;46300;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;46300;KELP;2033;28;;;;;2037;28;;;;;2035.0;0.0
1;46400;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;46400;KELP;2035;1;2033;24;;;2037;24;;;;;2036.0;0.0
1;46400;SQUID_INK;1849;1;1847;24;;;1851;24;;;;;1850.0;0.0
1;46500;KELP;2035;2;2033;30;;;2036;1;2037;29;;;2035.5;0.0
1;46500;SQUID_INK;1847;2;1845;30;;;1848;30;;;;;1847.5;0.0
1;46500;RAINFOREST_RESIN;9996;1;9995;29;;;9998;1;10004;1;10005;29;9997.0;0.0
1;46600;KELP;2035;1;2034;4;2033;28;2037;28;;;;;2036.0;0.0
1;46600;SQUID_INK;1848;1;1847;4;1846;28;1850;28;;;;;1849.0;0.0
1;46600;RAINFOREST_RESIN;9998;1;9995;28;;;10005;28;;;;;10001.5;0.0
1;46700;SQUID_INK;1844;30;;;;;1847;30;;;;;1845.5;0.0
1;46700;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;46700;KELP;2033;30;;;;;2036;30;;;;;2034.5;0.0
1;46800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;46800;KELP;2033;25;;;;;2036;25;;;;;2034.5;0.0
1;46800;SQUID_INK;1847;25;;;;;1850;25;;;;;1848.5;0.0
1;46900;KELP;2033;20;;;;;2036;30;;;;;2034.5;0.0
1;46900;SQUID_INK;1846;30;;;;;1847;10;1850;30;;;1846.5;0.0
1;46900;RAINFOREST_RESIN;9996;1;9995;29;;;10002;3;10004;1;10005;29;9999.0;0.0
1;47000;KELP;2033;23;;;;;2036;1;2037;22;;;2034.5;0.0
1;47000;SQUID_INK;1843;23;;;;;1846;1;1847;22;;;1844.5;0.0
1;47000;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;47100;SQUID_INK;1843;22;;;;;1846;22;;;;;1844.5;0.0
1;47100;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;0.0
1;47100;KELP;2033;22;;;;;2036;22;;;;;2034.5;0.0
1;47200;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;47200;KELP;2035;1;2033;23;;;2036;23;;;;;2035.5;0.0
1;47200;SQUID_INK;1848;1;1846;23;;;1849;23;;;;;1848.5;0.0
1;47300;KELP;2033;26;;;;;2036;21;;;;;2034.5;0.0
1;47300;SQUID_INK;1846;5;1845;21;;;1849;21;;;;;1847.5;0.0
1;47300;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;47400;KELP;2035;5;2033;22;;;2037;22;;;;;2036.0;0.0
1;47400;SQUID_INK;1847;5;1845;22;;;1849;22;;;;;1848.0;0.0
1;47400;RAINFOREST_RESIN;9998;7;9995;22;;;10005;22;;;;;10001.5;0.0
1;47500;SQUID_INK;1846;22;;;;;1848;5;1849;22;;;1847.0;0.0
1;47500;RAINFOREST_RESIN;9996;1;9995;21;;;9998;1;10004;1;10005;21;9997.0;0.0
1;47500;KELP;2033;22;;;;;2035;5;2036;22;;;2034.0;0.0
1;47600;RAINFOREST_RESIN;9998;5;9995;21;;;10005;21;;;;;10001.5;0.0
1;47600;KELP;2033;21;;;;;2036;21;;;;;2034.5;0.0
1;47600;SQUID_INK;1846;21;;;;;1849;21;;;;;1847.5;0.0
1;47700;KELP;2033;23;;;;;2035;4;2036;23;;;2034.0;0.0
1;47700;SQUID_INK;1845;23;;;;;1847;4;1849;23;;;1846.0;0.0
1;47700;RAINFOREST_RESIN;9998;1;9995;23;;;10005;23;;;;;10001.5;0.0
1;47800;KELP;2033;20;;;;;2035;7;2036;20;;;2034.0;0.0
1;47800;SQUID_INK;1845;20;;;;;1847;7;1848;20;;;1846.0;0.0
1;47800;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;47900;SQUID_INK;1845;23;;;;;1848;23;;;;;1846.5;0.0
1;47900;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;47900;KELP;2033;23;;;;;2036;23;;;;;2034.5;0.0
1;48000;RAINFOREST_RESIN;10002;2;9996;1;9995;26;10004;1;10005;26;;;10003.0;0.0
1;48000;KELP;2033;27;;;;;2036;27;;;;;2034.5;0.0
1;48000;SQUID_INK;1845;1;1844;26;;;1848;27;;;;;1846.5;0.0
1;48100;KELP;2033;30;;;;;2035;1;2037;30;;;2034.0;0.0
1;48100;SQUID_INK;1844;30;;;;;1845;1;1847;30;;;1844.5;0.0
1;48100;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;48200;KELP;2033;28;;;;;2036;27;;;;;2034.5;0.0
1;48200;SQUID_INK;1842;28;;;;;1845;27;;;;;1843.5;0.0
1;48200;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;48300;SQUID_INK;1839;17;;;;;1842;21;;;;;1840.5;0.0
1;48300;RAINFOREST_RESIN;9998;4;9996;1;9995;20;10004;1;10005;20;;;10001.0;0.0
1;48300;KELP;2033;21;;;;;2034;4;2036;21;;;2033.5;0.0
1;48400;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;48400;KELP;2033;32;;;;;2035;6;2036;32;;;2034.0;0.0
1;48400;SQUID_INK;1838;32;;;;;1840;6;1841;32;;;1839.0;0.0
1;48500;KELP;2033;29;;;;;2036;29;;;;;2034.5;0.0
1;48500;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;48500;SQUID_INK;1838;29;;;;;1841;29;;;;;1839.5;0.0
1;48600;KELP;2033;27;;;;;2036;27;;;;;2034.5;0.0
1;48600;SQUID_INK;1839;1;1838;26;;;1842;27;;;;;1840.5;0.0
1;48600;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;48700;RAINFOREST_RESIN;9996;1;9995;22;;;10000;2;10004;1;10005;22;9998.0;0.0
1;48700;SQUID_INK;1840;23;;;;;1841;2;1843;23;;;1840.5;0.0
1;48700;KELP;2033;23;;;;;2034;2;2036;23;;;2033.5;0.0
1;48800;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;48800;KELP;2033;29;;;;;2036;29;;;;;2034.5;0.0
1;48800;SQUID_INK;1839;29;;;;;1842;29;;;;;1840.5;0.0
1;48900;KELP;2033;21;;;;;2036;22;;;;;2034.5;0.0
1;48900;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;48900;SQUID_INK;1839;22;;;;;1840;1;1843;22;;;1839.5;0.0
1;49000;KELP;2033;29;;;;;2036;1;2037;28;;;2034.5;0.0
1;49000;SQUID_INK;1838;29;;;;;1841;29;;;;;1839.5;0.0
1;49000;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;49100;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;49100;SQUID_INK;1834;30;;;;;1837;30;;;;;1835.5;0.0
1;49100;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;49200;RAINFOREST_RESIN;10002;3;9996;1;9995;25;10004;1;10005;25;;;10003.0;0.0
1;49200;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;49200;SQUID_INK;1833;26;;;;;1836;26;;;;;1834.5;0.0
1;49300;KELP;2034;6;2033;29;;;2037;29;;;;;2035.5;0.0
1;49300;RAINFOREST_RESIN;9998;3;9995;29;;;10005;29;;;;;10001.5;0.0
1;49300;SQUID_INK;1834;35;;;;;1837;29;;;;;1835.5;0.0
1;49400;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;49400;SQUID_INK;1833;1;1832;22;;;1836;23;;;;;1834.5;0.0
1;49400;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;49500;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;49500;SQUID_INK;1833;25;;;;;1836;25;;;;;1834.5;0.0
1;49500;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;49600;RAINFOREST_RESIN;9996;2;9995;28;;;10000;3;10002;9;10004;2;9998.0;0.0
1;49600;SQUID_INK;1831;30;;;;;1832;3;1834;30;;;1831.5;0.0
1;49600;KELP;2034;2;2033;28;;;2035;3;2037;30;;;2034.5;0.0
1;49700;KELP;2036;1;2034;27;;;2037;21;;;;;2036.5;0.0
1;49700;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;49700;SQUID_INK;1832;1;1830;27;;;1833;21;;;;;1832.5;0.0
1;49800;SQUID_INK;1832;19;;;;;1835;20;;;;;1833.5;0.0
1;49800;KELP;2034;19;;;;;2037;20;;;;;2035.5;0.0
1;49800;RAINFOREST_RESIN;9995;20;;;;;10002;7;10005;20;;;9998.5;0.0
1;49900;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;49900;SQUID_INK;1833;5;1832;24;;;1835;24;;;;;1834.0;0.0
1;49900;KELP;2034;29;;;;;2037;24;;;;;2035.5;0.0
1;50000;RAINFOREST_RESIN;9996;2;9995;24;;;10002;5;10004;2;10005;24;9999.0;0.0
1;50000;SQUID_INK;1830;26;;;;;1834;26;;;;;1832.0;0.0
1;50000;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;50100;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;50100;RAINFOREST_RESIN;10002;4;9996;2;9995;22;10004;2;10005;22;;;10003.0;0.0
1;50100;SQUID_INK;1832;24;;;;;1835;24;;;;;1833.5;0.0
1;50200;SQUID_INK;1832;29;;;;;1835;29;;;;;1833.5;0.0
1;50200;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;50200;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;50300;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;50300;SQUID_INK;1832;23;;;;;1833;4;1835;23;;;1832.5;0.0
1;50300;KELP;2034;23;;;;;2036;4;2037;23;;;2035.0;0.0
1;50400;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;50400;SQUID_INK;1831;22;;;;;1834;23;;;;;1832.5;0.0
1;50400;KELP;2034;22;;;;;2037;23;;;;;2035.5;0.0
1;50500;KELP;2035;4;2034;28;;;2037;28;;;;;2036.0;0.0
1;50500;RAINFOREST_RESIN;10000;4;9998;7;9996;1;10004;1;10005;27;;;10002.0;0.0
1;50500;SQUID_INK;1832;4;1831;28;;;1834;28;;;;;1833.0;0.0
1;50600;SQUID_INK;1831;24;;;;;1832;4;1834;24;;;1831.5;0.0
1;50600;KELP;2034;24;;;;;2035;4;2037;24;;;2034.5;0.0
1;50600;RAINFOREST_RESIN;9998;7;9996;2;9995;22;10000;5;10004;2;10005;22;9999.0;0.0
1;50700;RAINFOREST_RESIN;9998;9;9995;20;;;10005;20;;;;;10001.5;0.0
1;50700;SQUID_INK;1829;20;;;;;1833;20;;;;;1831.0;0.0
1;50700;KELP;2034;20;;;;;2037;20;;;;;2035.5;0.0
1;50800;RAINFOREST_RESIN;9998;7;9996;2;9995;26;10004;2;10005;26;;;10001.0;0.0
1;50800;SQUID_INK;1830;28;;;;;1833;28;;;;;1831.5;0.0
1;50800;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;50900;KELP;2034;29;;;;;2035;5;2037;30;;;2034.5;0.0
1;50900;RAINFOREST_RESIN;9998;2;9995;30;;;10000;5;10005;30;;;9999.0;0.0
1;50900;SQUID_INK;1831;29;;;;;1832;5;1834;30;;;1831.5;0.0
1;51000;SQUID_INK;1831;2;1830;23;;;1834;25;;;;;1832.5;0.0
1;51000;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;51000;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;51100;RAINFOREST_RESIN;9995;29;;;;;10002;1;10005;29;;;9998.5;0.0
1;51100;SQUID_INK;1831;32;;;;;1834;29;;;;;1832.5;0.0
1;51100;KELP;2034;32;;;;;2037;29;;;;;2035.5;0.0
1;51200;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;51200;SQUID_INK;1831;30;;;;;1834;30;;;;;1832.5;0.0
1;51200;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;51300;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;51300;RAINFOREST_RESIN;9996;2;9995;23;;;9998;5;10002;5;10004;2;9997.0;0.0
1;51300;SQUID_INK;1830;25;;;;;1833;25;;;;;1831.5;0.0
1;51400;SQUID_INK;1829;23;;;;;1831;5;1832;23;;;1830.0;0.0
1;51400;KELP;2034;23;;;;;2036;5;2037;23;;;2035.0;0.0
1;51400;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;51500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;51500;SQUID_INK;1829;21;;;;;1832;21;;;;;1830.5;0.0
1;51500;KELP;2034;21;;;;;2037;21;;;;;2035.5;0.0
1;51600;RAINFOREST_RESIN;9996;2;9995;21;;;10002;5;10004;2;10005;21;9999.0;0.0
1;51600;SQUID_INK;1829;3;1828;23;;;1831;23;;;;;1830.0;0.0
1;51600;KELP;2036;3;2034;23;;;2037;23;;;;;2036.5;0.0
1;51700;KELP;2034;32;;;;;2037;32;;;;;2035.5;0.0
1;51700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;51700;SQUID_INK;1828;2;1827;30;;;1831;32;;;;;1829.5;0.0
1;51800;SQUID_INK;1828;25;;;;;1831;25;;;;;1829.5;0.0
1;51800;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;51800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;51900;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;51900;SQUID_INK;1828;28;;;;;1831;28;;;;;1829.5;0.0
1;51900;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;52000;RAINFOREST_RESIN;9998;2;9995;21;;;10000;5;10005;21;;;9999.0;0.0
1;52000;SQUID_INK;1829;26;;;;;1830;5;1832;21;;;1829.5;0.0
1;52000;KELP;2034;26;;;;;2035;5;2037;21;;;2034.5;0.0
1;52100;KELP;2034;1;2033;27;;;2037;28;;;;;2035.5;0.0
1;52100;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;52100;SQUID_INK;1827;28;;;;;1830;28;;;;;1828.5;0.0
1;52200;SQUID_INK;1827;22;;;;;1830;23;;;;;1828.5;0.0
1;52200;KELP;2033;23;;;;;2034;1;2037;23;;;2033.5;0.0
1;52200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;52300;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;52300;SQUID_INK;1827;30;;;;;1831;30;;;;;1829.0;0.0
1;52300;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;52400;RAINFOREST_RESIN;10002;3;9996;1;9995;20;10004;1;10005;20;;;10003.0;0.0
1;52400;SQUID_INK;1834;2;1833;20;;;1835;4;1837;21;;;1834.5;0.0
1;52400;KELP;2034;1;2033;21;;;2035;4;2037;21;;;2034.5;0.0
1;52500;KELP;2033;27;;;;;2037;27;;;;;2035.0;0.0
1;52500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;52500;SQUID_INK;1834;27;;;;;1837;27;;;;;1835.5;0.0
1;52600;SQUID_INK;1834;31;;;;;1837;31;;;;;1835.5;0.0
1;52600;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;52600;KELP;2033;31;;;;;2037;31;;;;;2035.0;0.0
1;52700;SQUID_INK;1838;1;1836;25;;;1839;25;;;;;1838.5;0.0
1;52700;KELP;2036;1;2033;25;;;2037;25;;;;;2036.5;0.0
1;52700;RAINFOREST_RESIN;9996;1;9995;24;;;10002;9;10004;1;10005;24;9999.0;0.0
1;52800;SQUID_INK;1839;1;1837;28;;;1840;2;1841;26;;;1839.5;0.0
1;52800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;52800;KELP;2036;1;2033;28;;;2037;28;;;;;2036.5;0.0
1;52900;KELP;2033;27;;;;;2037;27;;;;;2035.0;0.0
1;52900;RAINFOREST_RESIN;9996;1;9995;26;;;10002;3;10004;1;10005;26;9999.0;0.0
1;52900;SQUID_INK;1839;27;;;;;1842;27;;;;;1840.5;0.0
1;53000;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;53000;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;53000;SQUID_INK;1840;1;1839;29;;;1843;30;;;;;1841.5;0.0
1;53100;KELP;2033;23;;;;;2037;23;;;;;2035.0;0.0
1;53100;SQUID_INK;1838;23;;;;;1841;23;;;;;1839.5;0.0
1;53100;RAINFOREST_RESIN;9996;2;9995;21;;;9998;5;10004;2;10005;21;9997.0;0.0
1;53200;SQUID_INK;1839;1;1837;23;;;1841;23;;;;;1840.0;0.0
1;53200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;53200;KELP;2036;1;2034;23;;;2037;23;;;;;2036.5;0.0
1;53300;KELP;2034;20;;;;;2037;20;;;;;2035.5;0.0
1;53300;SQUID_INK;1840;20;;;;;1843;20;;;;;1841.5;0.0
1;53300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;53400;RAINFOREST_RESIN;9996;2;9995;30;;;9998;1;10004;2;10005;30;9997.0;0.0
1;53400;KELP;2034;39;;;;;2037;32;;;;;2035.5;0.0
1;53400;SQUID_INK;1841;7;1840;32;;;1843;2;1844;30;;;1842.0;0.0
1;53500;KELP;2034;25;;;;;2036;2;2037;25;;;2035.0;0.0
1;53500;SQUID_INK;1840;25;;;;;1841;2;1843;25;;;1840.5;0.0
1;53500;RAINFOREST_RESIN;9995;25;;;;;10002;7;10005;25;;;9998.5;0.0
1;53600;SQUID_INK;1840;23;;;;;1843;23;;;;;1841.5;0.0
1;53600;RAINFOREST_RESIN;9998;2;9996;1;9995;22;10004;1;10005;22;;;10001.0;0.0
1;53600;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;53700;KELP;2034;24;;;;;2037;23;;;;;2035.5;0.0
1;53700;SQUID_INK;1840;24;;;;;1843;23;;;;;1841.5;0.0
1;53700;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;53800;RAINFOREST_RESIN;9998;8;9995;29;;;10005;29;;;;;10001.5;0.0
1;53800;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;53800;SQUID_INK;1838;29;;;;;1842;29;;;;;1840.0;0.0
1;53900;KELP;2034;26;;;;;2035;4;2037;26;;;2034.5;0.0
1;53900;SQUID_INK;1838;26;;;;;1839;4;1841;26;;;1838.5;0.0
1;53900;RAINFOREST_RESIN;9996;1;9995;25;;;10000;4;10002;8;10004;1;9998.0;0.0
1;54000;SQUID_INK;1837;29;;;;;1840;22;;;;;1838.5;0.0
1;54000;RAINFOREST_RESIN;9996;1;9995;21;;;10002;1;10004;1;10005;21;9999.0;0.0
1;54000;KELP;2034;29;;;;;2037;22;;;;;2035.5;0.0
1;54100;SQUID_INK;1839;4;1838;22;;;1841;22;;;;;1840.0;0.0
1;54100;KELP;2034;26;;;;;2037;22;;;;;2035.5;0.0
1;54100;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;54200;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;54200;KELP;2034;20;;;;;2037;21;;;;;2035.5;0.0
1;54200;SQUID_INK;1839;20;;;;;1843;21;;;;;1841.0;0.0
1;54300;SQUID_INK;1836;28;;;;;1839;28;;;;;1837.5;0.0
1;54300;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;54300;RAINFOREST_RESIN;10002;1;9996;2;9995;26;10004;2;10005;26;;;10003.0;0.0
1;54400;SQUID_INK;1836;22;;;;;1839;22;;;;;1837.5;0.0
1;54400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;54400;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;54500;SQUID_INK;1835;29;;;;;1838;29;;;;;1836.5;0.0
1;54500;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;54500;RAINFOREST_RESIN;9996;2;9995;27;;;10002;2;10004;2;10005;27;9999.0;0.0
1;54600;RAINFOREST_RESIN;10002;2;9996;1;9995;29;10004;1;10005;29;;;10003.0;0.0
1;54600;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;54600;SQUID_INK;1836;30;;;;;1839;30;;;;;1837.5;0.0
1;54700;SQUID_INK;1839;23;;;;;1842;23;;;;;1840.5;0.0
1;54700;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;54700;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;54800;SQUID_INK;1840;32;;;;;1843;25;;;;;1841.5;0.0
1;54800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;54800;KELP;2034;32;;;;;2037;25;;;;;2035.5;0.0
1;54900;SQUID_INK;1839;24;;;;;1841;1;1842;24;;;1840.0;0.0
1;54900;KELP;2034;24;;;;;2036;1;2037;24;;;2035.0;0.0
1;54900;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;55000;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;55000;KELP;2034;22;;;;;2036;7;2037;22;;;2035.0;0.0
1;55000;SQUID_INK;1839;22;;;;;1841;7;1842;22;;;1840.0;0.0
1;55100;SQUID_INK;1839;26;;;;;1842;26;;;;;1840.5;0.0
1;55100;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;55100;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;55200;KELP;2034;25;;;;;2037;26;;;;;2035.5;0.0
1;55200;SQUID_INK;1837;25;;;;;1841;26;;;;;1839.0;0.0
1;55200;RAINFOREST_RESIN;9998;8;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;55300;SQUID_INK;1836;22;;;;;1838;3;1839;22;;;1837.0;0.0
1;55300;RAINFOREST_RESIN;9995;22;;;;;10002;5;10005;22;;;9998.5;0.0
1;55300;KELP;2034;22;;;;;2036;3;2037;22;;;2035.0;0.0
1;55400;RAINFOREST_RESIN;9998;7;9996;1;9995;27;10004;1;10005;27;;;10001.0;0.0
1;55400;KELP;2034;33;;;;;2037;28;;;;;2035.5;0.0
1;55400;SQUID_INK;1837;5;1836;28;;;1839;28;;;;;1838.0;0.0
1;55500;KELP;2034;24;;;;;2036;2;2037;24;;;2035.0;0.0
1;55500;SQUID_INK;1840;24;;;;;1842;2;1843;24;;;1841.0;0.0
1;55500;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;55600;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;55600;SQUID_INK;1840;23;;;;;1844;23;;;;;1842.0;0.0
1;55600;RAINFOREST_RESIN;9995;23;;;;;10002;9;10005;23;;;9998.5;0.0
1;55700;SQUID_INK;1840;22;;;;;1843;22;;;;;1841.5;0.0
1;55700;RAINFOREST_RESIN;9996;1;9995;21;;;10002;7;10004;1;10005;21;9999.0;0.0
1;55700;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;55800;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;55800;KELP;2034;9;2033;25;;;2037;26;;;;;2035.5;0.0
1;55800;SQUID_INK;1839;34;;;;;1842;26;;;;;1840.5;0.0
1;55900;KELP;2035;4;2034;20;;;2037;20;;;;;2036.0;0.0
1;55900;SQUID_INK;1840;4;1839;20;;;1842;20;;;;;1841.0;0.0
1;55900;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;56000;KELP;2035;2;2034;25;;;2036;7;2037;25;;;2035.5;0.0
1;56000;SQUID_INK;1837;2;1836;25;;;1838;7;1839;1;1840;24;1837.5;0.0
1;56000;RAINFOREST_RESIN;10000;2;9996;1;9995;24;10002;6;10004;1;10005;24;10001.0;0.0
1;56100;SQUID_INK;1837;28;;;;;1840;28;;;;;1838.5;0.0
1;56100;RAINFOREST_RESIN;9996;1;9995;27;;;9998;1;10002;3;10004;1;9997.0;0.0
1;56100;KELP;2034;1;2033;27;;;2037;28;;;;;2035.5;0.0
1;56200;RAINFOREST_RESIN;9996;1;9995;30;;;10000;4;10004;1;10005;30;9998.0;0.0
1;56200;KELP;2034;31;;;;;2035;4;2037;31;;;2034.5;0.0
1;56200;SQUID_INK;1834;31;;;;;1835;4;1837;31;;;1834.5;0.0
1;56300;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;56300;SQUID_INK;1835;28;;;;;1838;28;;;;;1836.5;0.0
1;56300;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;56400;KELP;2034;2;2033;27;;;2037;29;;;;;2035.5;0.0
1;56400;SQUID_INK;1835;29;;;;;1838;29;;;;;1836.5;0.0
1;56400;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;56500;SQUID_INK;1836;21;;;;;1839;21;;;;;1837.5;0.0
1;56500;RAINFOREST_RESIN;9995;21;;;;;10002;9;10005;21;;;9998.5;0.0
1;56500;KELP;2034;21;;;;;2037;21;;;;;2035.5;0.0
1;56600;RAINFOREST_RESIN;9996;2;9995;28;;;10002;2;10004;2;10005;28;9999.0;0.0
1;56600;KELP;2034;30;;;;;2036;3;2037;30;;;2035.0;0.0
1;56600;SQUID_INK;1839;30;;;;;1840;3;1842;30;;;1839.5;0.0
1;56700;KELP;2033;27;;;;;2034;2;2037;27;;;2033.5;0.0
1;56700;SQUID_INK;1841;25;;;;;1844;27;;;;;1842.5;0.0
1;56700;RAINFOREST_RESIN;9998;5;9995;27;;;10005;27;;;;;10001.5;0.0
1;56800;KELP;2034;8;2033;23;;;2037;23;;;;;2035.5;0.0
1;56800;SQUID_INK;1841;31;;;;;1844;23;;;;;1842.5;0.0
1;56800;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;56900;SQUID_INK;1842;21;;;;;1845;21;;;;;1843.5;0.0
1;56900;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;56900;KELP;2034;1;2033;20;;;2037;21;;;;;2035.5;0.0
1;57000;RAINFOREST_RESIN;9996;2;9995;20;;;10002;10;10004;2;10005;20;9999.0;0.0
1;57000;KELP;2034;2;2033;20;;;2037;22;;;;;2035.5;0.0
1;57000;SQUID_INK;1843;22;;;;;1846;22;;;;;1844.5;0.0
1;57100;KELP;2036;1;2033;24;;;2037;24;;;;;2036.5;0.0
1;57100;SQUID_INK;1846;1;1844;24;;;1848;24;;;;;1847.0;0.0
1;57100;RAINFOREST_RESIN;9998;6;9995;24;;;10005;24;;;;;10001.5;0.0
1;57200;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;57200;SQUID_INK;1847;26;;;;;1850;26;;;;;1848.5;0.0
1;57200;RAINFOREST_RESIN;9998;5;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;57300;SQUID_INK;1847;31;;;;;1849;1;1850;31;;;1848.0;0.0
1;57300;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;57300;KELP;2034;1;2033;30;;;2035;1;2037;31;;;2034.5;0.0
1;57400;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;57400;KELP;2034;1;2033;27;;;2037;28;;;;;2035.5;0.0
1;57400;SQUID_INK;1846;28;;;;;1849;28;;;;;1847.5;0.0
1;57500;KELP;2034;2;2033;21;;;2037;21;;;;;2035.5;0.0
1;57500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;57500;SQUID_INK;1844;2;1843;21;;;1847;21;;;;;1845.5;0.0
1;57600;KELP;2035;5;2034;2;2033;20;2037;22;;;;;2036.0;0.0
1;57600;SQUID_INK;1843;5;1841;22;;;1845;22;;;;;1844.0;0.0
1;57600;RAINFOREST_RESIN;10000;4;9996;2;9995;20;10004;2;10005;20;;;10002.0;0.0
1;57700;RAINFOREST_RESIN;9998;2;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
1;57700;SQUID_INK;1839;22;;;;;1842;22;;;;;1840.5;0.0
1;57700;KELP;2034;1;2033;21;;;2037;22;;;;;2035.5;0.0
1;57800;RAINFOREST_RESIN;9996;2;9995;26;;;10002;4;10004;2;10005;26;9999.0;0.0
1;57800;KELP;2034;9;2033;26;;;2037;28;;;;;2035.5;0.0
1;57800;SQUID_INK;1840;35;;;;;1843;28;;;;;1841.5;0.0
1;57900;KELP;2033;28;;;;;2034;5;2037;28;;;2033.5;0.0
1;57900;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;57900;SQUID_INK;1840;23;;;;;1843;28;;;;;1841.5;0.0
1;58000;KELP;2033;28;;;;;2037;28;;;;;2035.0;0.0
1;58000;SQUID_INK;1840;28;;;;;1843;28;;;;;1841.5;0.0
1;58000;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;58100;RAINFOREST_RESIN;9998;7;9995;20;;;10005;20;;;;;10001.5;0.0
1;58100;SQUID_INK;1837;20;;;;;1841;20;;;;;1839.0;0.0
1;58100;KELP;2033;20;;;;;2037;20;;;;;2035.0;0.0
1;58200;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;58200;KELP;2033;29;;;;;2037;29;;;;;2035.0;0.0
1;58200;SQUID_INK;1837;29;;;;;1840;29;;;;;1838.5;0.0
1;58300;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;58300;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;58300;SQUID_INK;1836;30;;;;;1840;30;;;;;1838.0;0.0
1;58400;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;58400;SQUID_INK;1837;25;;;;;1840;25;;;;;1838.5;0.0
1;58400;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;58500;RAINFOREST_RESIN;9998;3;9996;2;9995;20;10004;2;10005;20;;;10001.0;0.0
1;58500;SQUID_INK;1841;22;;;;;1843;2;1844;22;;;1842.0;0.0
1;58500;KELP;2033;22;;;;;2035;2;2037;22;;;2034.0;0.0
1;58600;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;58600;SQUID_INK;1840;23;;;;;1843;23;;;;;1841.5;0.0
1;58600;KELP;2033;23;;;;;2037;23;;;;;2035.0;0.0
1;58700;KELP;2033;30;;;;;2035;4;2037;30;;;2034.0;0.0
1;58700;RAINFOREST_RESIN;9996;1;9995;29;;;9998;1;10000;4;10004;1;9997.0;0.0
1;58700;SQUID_INK;1838;1;1837;29;;;1839;4;1841;30;;;1838.5;0.0
1;58800;SQUID_INK;1837;31;;;;;1839;5;1840;1;1841;30;1838.0;0.0
1;58800;KELP;2034;1;2033;30;;;2035;5;2037;31;;;2034.5;0.0
1;58800;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;58900;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;58900;SQUID_INK;1841;1;1839;25;;;1842;25;;;;;1841.5;0.0
1;58900;KELP;2036;1;2034;2;2033;23;2037;25;;;;;2036.5;0.0
1;59000;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;59000;SQUID_INK;1839;24;;;;;1842;24;;;;;1840.5;0.0
1;59000;KELP;2034;1;2033;23;;;2037;24;;;;;2035.5;0.0
1;59100;KELP;2034;1;2033;20;;;2037;21;;;;;2035.5;0.0
1;59100;RAINFOREST_RESIN;9998;7;9996;1;9995;20;10004;1;10005;20;;;10001.0;0.0
1;59100;SQUID_INK;1840;21;;;;;1843;21;;;;;1841.5;0.0
1;59200;SQUID_INK;1842;10;1840;33;;;1843;25;;;;;1842.5;0.0
1;59200;KELP;2036;10;2034;33;;;2037;25;;;;;2036.5;0.0
1;59200;RAINFOREST_RESIN;10002;1;9996;2;9995;23;10004;2;10005;23;;;10003.0;0.0
1;59300;RAINFOREST_RESIN;9998;5;9995;22;;;10005;22;;;;;10001.5;0.0
1;59300;SQUID_INK;1841;22;;;;;1844;22;;;;;1842.5;0.0
1;59300;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;59400;RAINFOREST_RESIN;10002;1;9995;23;;;10005;23;;;;;10003.5;0.0
1;59400;SQUID_INK;1842;23;;;;;1845;23;;;;;1843.5;0.0
1;59400;KELP;2033;23;;;;;2037;23;;;;;2035.0;0.0
1;59500;KELP;2034;2;2033;22;;;2037;24;;;;;2035.5;0.0
1;59500;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;59500;SQUID_INK;1841;24;;;;;1844;24;;;;;1842.5;0.0
1;59600;KELP;2034;1;2033;24;;;2037;25;;;;;2035.5;0.0
1;59600;SQUID_INK;1841;25;;;;;1844;25;;;;;1842.5;0.0
1;59600;RAINFOREST_RESIN;10002;1;9996;1;9995;24;10004;1;10005;24;;;10003.0;0.0
1;59700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;59700;SQUID_INK;1844;1;1842;26;;;1845;26;;;;;1844.5;0.0
1;59700;KELP;2036;1;2034;26;;;2037;26;;;;;2036.5;0.0
1;59800;RAINFOREST_RESIN;9998;9;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;59800;SQUID_INK;1843;24;;;;;1846;2;1847;22;;;1844.5;0.0
1;59800;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;59900;KELP;2034;25;;;;;2036;4;2037;25;;;2035.0;0.0
1;59900;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;59900;SQUID_INK;1845;25;;;;;1847;4;1848;25;;;1846.0;0.0
1;60000;SQUID_INK;1842;31;;;;;1845;26;;;;;1843.5;0.0
1;60000;KELP;2034;31;;;;;2037;26;;;;;2035.5;0.0
1;60000;RAINFOREST_RESIN;9996;1;9995;25;;;9998;3;10002;10;10004;1;9997.0;0.0
1;60100;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;60100;SQUID_INK;1845;28;;;;;1848;28;;;;;1846.5;0.0
1;60100;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;60200;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;60200;SQUID_INK;1842;26;;;;;1845;1;1846;25;;;1843.5;0.0
1;60200;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;60300;KELP;2034;1;2033;23;;;2037;24;;;;;2035.5;0.0
1;60300;RAINFOREST_RESIN;9998;3;9996;1;9995;23;10004;1;10005;23;;;10001.0;0.0
1;60300;SQUID_INK;1839;24;;;;;1842;24;;;;;1840.5;0.0
1;60400;SQUID_INK;1839;24;;;;;1842;24;;;;;1840.5;0.0
1;60400;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;60400;RAINFOREST_RESIN;9996;2;9995;22;;;9998;1;10004;2;10005;22;9997.0;0.0
1;60500;RAINFOREST_RESIN;9995;25;;;;;10000;2;10005;25;;;9997.5;0.0
1;60500;SQUID_INK;1842;25;;;;;1843;2;1846;25;;;1842.5;0.0
1;60500;KELP;2033;25;;;;;2035;2;2037;25;;;2034.0;0.0
1;60600;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;60600;SQUID_INK;1840;21;;;;;1843;1;1844;21;;;1841.5;0.0
1;60600;KELP;2033;21;;;;;2037;22;;;;;2035.0;0.0
1;60700;KELP;2036;9;2033;24;;;2037;24;;;;;2036.5;0.0
1;60700;RAINFOREST_RESIN;9998;10;9995;24;;;10005;24;;;;;10001.5;0.0
1;60700;SQUID_INK;1842;9;1840;24;;;1843;24;;;;;1842.5;0.0
1;60800;SQUID_INK;1842;1;1840;28;;;1843;28;;;;;1842.5;0.0
1;60800;KELP;2036;1;2034;28;;;2037;28;;;;;2036.5;0.0
1;60800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;60900;RAINFOREST_RESIN;9998;10;9995;29;;;10005;29;;;;;10001.5;0.0
1;60900;SQUID_INK;1843;1;1841;29;;;1844;29;;;;;1843.5;0.0
1;60900;KELP;2036;1;2033;29;;;2037;29;;;;;2036.5;0.0
1;61000;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;0.0
1;61000;SQUID_INK;1841;26;;;;;1844;26;;;;;1842.5;0.0
1;61000;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;61100;KELP;2034;31;;;;;2037;31;;;;;2035.5;0.0
1;61100;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;61100;SQUID_INK;1841;31;;;;;1844;31;;;;;1842.5;0.0
1;61200;SQUID_INK;1841;24;;;;;1844;22;;;;;1842.5;0.0
1;61200;KELP;2034;24;;;;;2037;22;;;;;2035.5;0.0
1;61200;RAINFOREST_RESIN;9998;1;9995;22;;;10005;22;;;;;10001.5;0.0
1;61300;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;61300;SQUID_INK;1841;27;;;;;1844;27;;;;;1842.5;0.0
1;61300;KELP;2034;27;;;;;2037;27;;;;;2035.5;0.0
1;61400;SQUID_INK;1841;28;;;;;1844;28;;;;;1842.5;0.0
1;61400;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;61400;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;61500;KELP;2036;1;2034;22;;;2037;22;;;;;2036.5;0.0
1;61500;RAINFOREST_RESIN;9998;4;9995;22;;;10005;22;;;;;10001.5;0.0
1;61500;SQUID_INK;1844;1;1842;22;;;1845;22;;;;;1844.5;0.0
1;61600;SQUID_INK;1844;28;;;;;1847;1;1848;27;;;1845.5;0.0
1;61600;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;61600;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;61700;SQUID_INK;1840;23;;;;;1843;23;;;;;1841.5;0.0
1;61700;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;61700;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;61800;SQUID_INK;1840;25;;;;;1843;26;;;;;1841.5;0.0
1;61800;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;61800;KELP;2034;25;;;;;2037;26;;;;;2035.5;0.0
1;61900;KELP;2033;28;;;;;2037;28;;;;;2035.0;0.0
1;61900;SQUID_INK;1840;28;;;;;1843;28;;;;;1841.5;0.0
1;61900;RAINFOREST_RESIN;9995;28;;;;;10002;8;10005;28;;;9998.5;0.0
1;62000;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;62000;KELP;2033;24;;;;;2037;24;;;;;2035.0;0.0
1;62000;SQUID_INK;1840;24;;;;;1843;24;;;;;1841.5;0.0
1;62100;KELP;2034;2;2033;25;;;2037;27;;;;;2035.5;0.0
1;62100;SQUID_INK;1840;27;;;;;1843;27;;;;;1841.5;0.0
1;62100;RAINFOREST_RESIN;9996;2;9995;25;;;10002;3;10004;2;10005;25;9999.0;0.0
1;62200;SQUID_INK;1840;24;;;;;1842;1;1843;24;;;1841.0;0.0
1;62200;RAINFOREST_RESIN;9998;9;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;62200;KELP;2034;24;;;;;2036;1;2037;24;;;2035.0;0.0
1;62300;KELP;2033;21;;;;;2037;21;;;;;2035.0;0.0
1;62300;SQUID_INK;1838;21;;;;;1841;21;;;;;1839.5;0.0
1;62300;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;62400;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;62400;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;62400;SQUID_INK;1837;24;;;;;1841;24;;;;;1839.0;0.0
1;62500;KELP;2034;2;2033;25;;;2037;27;;;;;2035.5;0.0
1;62500;SQUID_INK;1836;27;;;;;1839;27;;;;;1837.5;0.0
1;62500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;62600;SQUID_INK;1835;22;;;;;1838;22;;;;;1836.5;0.0
1;62600;RAINFOREST_RESIN;9998;6;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
1;62600;KELP;2034;1;2033;21;;;2037;22;;;;;2035.5;0.0
1;62700;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;62700;SQUID_INK;1834;25;;;;;1837;25;;;;;1835.5;0.0
1;62700;RAINFOREST_RESIN;9998;3;9995;25;;;10005;25;;;;;10001.5;0.0
1;62800;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;62800;KELP;2033;22;;;;;2037;22;;;;;2035.0;0.0
1;62800;SQUID_INK;1834;22;;;;;1837;22;;;;;1835.5;0.0
1;62900;KELP;2033;22;;;;;2037;22;;;;;2035.0;0.0
1;62900;SQUID_INK;1834;22;;;;;1837;22;;;;;1835.5;0.0
1;62900;RAINFOREST_RESIN;10002;11;9998;3;9996;2;10004;2;10005;20;;;10003.0;0.0
1;63000;SQUID_INK;1834;30;;;;;1838;30;;;;;1836.0;0.0
1;63000;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;63000;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;63100;SQUID_INK;1835;30;;;;;1838;30;;;;;1836.5;0.0
1;63100;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;63100;RAINFOREST_RESIN;9995;30;;;;;9998;1;10005;30;;;9996.5;0.0
1;63200;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;63200;KELP;2034;1;2033;24;;;2037;25;;;;;2035.5;0.0
1;63200;SQUID_INK;1837;25;;;;;1840;25;;;;;1838.5;0.0
1;63300;SQUID_INK;1837;1;1835;30;;;1838;30;;;;;1837.5;0.0
1;63300;KELP;2036;1;2033;30;;;2037;30;;;;;2036.5;0.0
1;63300;RAINFOREST_RESIN;10002;4;9995;30;;;10005;30;;;;;10003.5;0.0
1;63400;SQUID_INK;1834;24;;;;;1837;24;;;;;1835.5;0.0
1;63400;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;63400;KELP;2034;2;2033;22;;;2037;24;;;;;2035.5;0.0
1;63500;SQUID_INK;1837;3;1836;28;;;1839;28;;;;;1838.0;0.0
1;63500;KELP;2034;3;2033;28;;;2037;28;;;;;2035.5;0.0
1;63500;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;63600;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;63600;KELP;2036;1;2033;22;;;2037;22;;;;;2036.5;0.0
1;63600;SQUID_INK;1838;1;1836;22;;;1839;22;;;;;1838.5;0.0
1;63700;SQUID_INK;1835;21;;;;;1836;5;1837;7;1838;21;1835.5;0.0
1;63700;KELP;2033;21;;;;;2035;12;2037;21;;;2034.0;0.0
1;63700;RAINFOREST_RESIN;9995;21;;;;;10000;5;10002;7;10005;21;9997.5;0.0
1;63800;SQUID_INK;1834;28;;;;;1837;28;;;;;1835.5;0.0
1;63800;RAINFOREST_RESIN;9996;1;9995;27;;;9998;1;10004;1;10005;27;9997.0;0.0
1;63800;KELP;2034;1;2033;27;;;2037;28;;;;;2035.5;0.0
1;63900;SQUID_INK;1833;22;;;;;1834;2;1836;22;;;1833.5;0.0
1;63900;KELP;2033;22;;;;;2035;2;2037;22;;;2034.0;0.0
1;63900;RAINFOREST_RESIN;9995;22;;;;;10000;2;10005;22;;;9997.5;0.0
1;64000;RAINFOREST_RESIN;9995;30;;;;;9998;11;10002;10;10005;30;9996.5;0.0
1;64000;KELP;2034;2;2033;30;;;2037;30;;;;;2035.5;0.0
1;64000;SQUID_INK;1831;32;;;;;1834;30;;;;;1832.5;0.0
1;64100;KELP;2034;2;2033;26;;;2035;4;2037;28;;;2034.5;0.0
1;64100;SQUID_INK;1834;2;1833;26;;;1835;4;1837;28;;;1834.5;0.0
1;64100;RAINFOREST_RESIN;9996;2;9995;26;;;10002;4;10004;2;10005;26;9999.0;0.0
1;64200;KELP;2033;27;;;;;2037;27;;;;;2035.0;0.0
1;64200;SQUID_INK;1833;27;;;;;1836;27;;;;;1834.5;0.0
1;64200;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;64300;SQUID_INK;1834;2;1833;22;;;1836;22;;;;;1835.0;0.0
1;64300;RAINFOREST_RESIN;9998;4;9996;2;9995;20;10004;2;10005;20;;;10001.0;0.0
1;64300;KELP;2034;2;2033;22;;;2037;22;;;;;2035.5;0.0
1;64400;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;64400;KELP;2034;4;2033;29;;;2037;29;;;;;2035.5;0.0
1;64400;SQUID_INK;1835;33;;;;;1838;29;;;;;1836.5;0.0
1;64500;KELP;2034;7;2033;22;;;2037;22;;;;;2035.5;0.0
1;64500;SQUID_INK;1836;29;;;;;1839;22;;;;;1837.5;0.0
1;64500;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;64600;KELP;2033;29;;;;;2037;29;;;;;2035.0;0.0
1;64600;SQUID_INK;1836;29;;;;;1839;29;;;;;1837.5;0.0
1;64600;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;64700;SQUID_INK;1839;29;;;;;1842;29;;;;;1840.5;0.0
1;64700;RAINFOREST_RESIN;10002;1;9996;1;9995;28;10004;1;10005;28;;;10003.0;0.0
1;64700;KELP;2033;29;;;;;2037;29;;;;;2035.0;0.0
1;64800;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;64800;KELP;2033;21;;;;;2034;1;2037;21;;;2033.5;0.0
1;64800;SQUID_INK;1838;20;;;;;1841;21;;;;;1839.5;0.0
1;64900;KELP;2034;2;2033;30;;;2037;32;;;;;2035.5;0.0
1;64900;SQUID_INK;1838;32;;;;;1841;32;;;;;1839.5;0.0
1;64900;RAINFOREST_RESIN;9996;2;9995;30;;;9998;4;10002;10;10004;2;9997.0;0.0
1;65000;KELP;2036;1;2034;1;2033;26;2037;27;;;;;2036.5;0.0
1;65000;SQUID_INK;1841;1;1839;27;;;1842;27;;;;;1841.5;0.0
1;65000;RAINFOREST_RESIN;9996;1;9995;26;;;10002;5;10004;1;10005;26;9999.0;0.0
1;65100;SQUID_INK;1838;26;;;;;1841;26;;;;;1839.5;0.0
1;65100;RAINFOREST_RESIN;9998;10;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;65100;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;65200;RAINFOREST_RESIN;9996;1;9995;28;;;10002;6;10004;1;10005;28;9999.0;0.0
1;65200;KELP;2034;3;2033;28;;;2037;29;;;;;2035.5;0.0
1;65200;SQUID_INK;1838;31;;;;;1841;29;;;;;1839.5;0.0
1;65300;KELP;2034;29;;;;;2036;1;2037;29;;;2035.0;0.0
1;65300;SQUID_INK;1837;29;;;;;1839;1;1840;29;;;1838.0;0.0
1;65300;RAINFOREST_RESIN;9995;29;;;;;10002;9;10005;29;;;9998.5;0.0
1;65400;KELP;2034;19;;;;;2037;21;;;;;2035.5;0.0
1;65400;SQUID_INK;1837;21;;;;;1838;2;1841;21;;;1837.5;0.0
1;65400;RAINFOREST_RESIN;9998;10;9995;21;;;10005;21;;;;;10001.5;0.0
1;65500;SQUID_INK;1838;20;;;;;1841;20;;;;;1839.5;0.0
1;65500;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;65500;KELP;2034;20;;;;;2037;20;;;;;2035.5;0.0
1;65600;RAINFOREST_RESIN;9998;3;9995;20;;;10005;20;;;;;10001.5;0.0
1;65600;KELP;2034;26;;;;;2037;20;;;;;2035.5;0.0
1;65600;SQUID_INK;1838;6;1837;20;;;1841;20;;;;;1839.5;0.0
1;65700;KELP;2034;23;;;;;2037;24;;;;;2035.5;0.0
1;65700;SQUID_INK;1837;23;;;;;1840;24;;;;;1838.5;0.0
1;65700;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;65800;KELP;2034;31;;;;;2037;30;;;;;2035.5;0.0
1;65800;SQUID_INK;1838;1;1837;30;;;1840;30;;;;;1839.0;0.0
1;65800;RAINFOREST_RESIN;10002;4;9995;30;;;10005;30;;;;;10003.5;0.0
1;65900;SQUID_INK;1838;26;;;;;1841;26;;;;;1839.5;0.0
1;65900;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;65900;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;66000;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;66000;KELP;2034;31;;;;;2037;25;;;;;2035.5;0.0
1;66000;SQUID_INK;1838;31;;;;;1841;25;;;;;1839.5;0.0
1;66100;KELP;2036;1;2034;25;;;2037;25;;;;;2036.5;0.0
1;66100;SQUID_INK;1839;1;1837;25;;;1840;25;;;;;1839.5;0.0
1;66100;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;66200;KELP;2035;5;2034;1;2033;22;2037;23;;;;;2036.0;0.0
1;66200;SQUID_INK;1839;5;1838;1;1837;22;1841;23;;;;;1840.0;0.0
1;66200;RAINFOREST_RESIN;10002;1;9996;1;9995;22;10004;1;10005;22;;;10003.0;0.0
1;66300;RAINFOREST_RESIN;10000;3;9995;20;;;10002;5;10005;20;;;10001.0;0.0
1;66300;SQUID_INK;1838;3;1837;20;;;1840;20;;;;;1839.0;0.0
1;66300;KELP;2035;3;2033;20;;;2037;20;;;;;2036.0;0.0
1;66400;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;66400;KELP;2034;2;2033;24;;;2037;26;;;;;2035.5;0.0
1;66400;SQUID_INK;1838;26;;;;;1841;26;;;;;1839.5;0.0
1;66500;KELP;2036;1;2034;1;2033;30;2037;31;;;;;2036.5;0.0
1;66500;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;66500;SQUID_INK;1839;1;1837;31;;;1840;31;;;;;1839.5;0.0
1;66600;KELP;2033;31;;;;;2037;31;;;;;2035.0;0.0
1;66600;SQUID_INK;1835;31;;;;;1838;31;;;;;1836.5;0.0
1;66600;RAINFOREST_RESIN;10002;3;9998;1;9996;2;10004;2;10005;29;;;10003.0;0.0
1;66700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;66700;SQUID_INK;1833;31;;;;;1836;26;;;;;1834.5;0.0
1;66700;KELP;2034;5;2033;26;;;2037;26;;;;;2035.5;0.0
1;66800;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;66800;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;66800;SQUID_INK;1832;26;;;;;1835;26;;;;;1833.5;0.0
1;66900;KELP;2034;3;2033;20;;;2037;20;;;;;2035.5;0.0
1;66900;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;66900;SQUID_INK;1832;23;;;;;1835;20;;;;;1833.5;0.0
1;67000;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;67000;SQUID_INK;1832;2;1831;22;;;1835;24;;;;;1833.5;0.0
1;67000;RAINFOREST_RESIN;9998;1;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;67100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;67100;SQUID_INK;1833;26;;;;;1837;26;;;;;1835.0;0.0
1;67100;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;67200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;67200;KELP;2033;23;;;;;2035;6;2037;23;;;2034.0;0.0
1;67200;SQUID_INK;1833;23;;;;;1835;6;1836;23;;;1834.0;0.0
1;67300;KELP;2034;2;2033;21;;;2037;22;;;;;2035.5;0.0
1;67300;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;67300;SQUID_INK;1832;23;;;;;1835;22;;;;;1833.5;0.0
1;67400;SQUID_INK;1833;37;;;;;1836;29;;;;;1834.5;0.0
1;67400;KELP;2034;37;;;;;2037;29;;;;;2035.5;0.0
1;67400;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;67500;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;67500;SQUID_INK;1834;22;;;;;1837;22;;;;;1835.5;0.0
1;67500;KELP;2033;22;;;;;2037;22;;;;;2035.0;0.0
1;67600;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;67600;SQUID_INK;1832;26;;;;;1835;26;;;;;1833.5;0.0
1;67600;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;67700;KELP;2034;2;2033;21;;;2035;3;2037;23;;;2034.5;0.0
1;67700;RAINFOREST_RESIN;9996;2;9995;21;;;10000;3;10004;2;10005;21;9998.0;0.0
1;67700;SQUID_INK;1831;23;;;;;1832;3;1834;23;;;1831.5;0.0
1;67800;SQUID_INK;1833;38;;;;;1836;32;;;;;1834.5;0.0
1;67800;KELP;2034;8;2033;30;;;2037;32;;;;;2035.5;0.0
1;67800;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;67900;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;67900;SQUID_INK;1832;26;;;;;1835;26;;;;;1833.5;0.0
1;67900;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;68000;RAINFOREST_RESIN;9995;25;;;;;10002;5;10005;25;;;9998.5;0.0
1;68000;SQUID_INK;1835;1;1833;25;;;1836;25;;;;;1835.5;0.0
1;68000;KELP;2036;1;2033;25;;;2037;25;;;;;2036.5;0.0
1;68100;KELP;2034;8;2033;26;;;2037;27;;;;;2035.5;0.0
1;68100;RAINFOREST_RESIN;9996;1;9995;26;;;10002;8;10004;1;10005;26;9999.0;0.0
1;68100;SQUID_INK;1836;8;1835;26;;;1839;27;;;;;1837.5;0.0
1;68200;SQUID_INK;1835;24;;;;;1838;24;;;;;1836.5;0.0
1;68200;KELP;2034;1;2033;23;;;2037;24;;;;;2035.5;0.0
1;68200;RAINFOREST_RESIN;9996;1;9995;23;;;9998;1;10004;1;10005;23;9997.0;0.0
1;68300;RAINFOREST_RESIN;9996;1;9995;25;;;10002;4;10004;1;10005;25;9999.0;0.0
1;68300;SQUID_INK;1835;1;1834;25;;;1838;26;;;;;1836.5;0.0
1;68300;KELP;2034;1;2033;25;;;2037;26;;;;;2035.5;0.0
1;68400;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;0.0
1;68400;SQUID_INK;1835;31;;;;;1838;31;;;;;1836.5;0.0
1;68400;KELP;2034;1;2033;30;;;2037;31;;;;;2035.5;0.0
1;68500;KELP;2034;1;2033;22;;;2035;5;2037;23;;;2034.5;0.0
1;68500;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;68500;SQUID_INK;1836;23;;;;;1838;5;1839;23;;;1837.0;0.0
1;68600;SQUID_INK;1838;27;;;;;1842;27;;;;;1840.0;0.0
1;68600;KELP;2033;27;;;;;2037;27;;;;;2035.0;0.0
1;68600;RAINFOREST_RESIN;9995;27;;;;;9998;1;10005;27;;;9996.5;0.0
1;68700;RAINFOREST_RESIN;9998;10;9996;2;9995;20;10004;2;10005;20;;;10001.0;0.0
1;68700;SQUID_INK;1838;22;;;;;1841;22;;;;;1839.5;0.0
1;68700;KELP;2034;2;2033;20;;;2037;22;;;;;2035.5;0.0
1;68800;RAINFOREST_RESIN;9996;1;9995;30;;;10000;6;10002;1;10004;1;9998.0;0.0
1;68800;SQUID_INK;1837;1;1836;30;;;1838;6;1840;31;;;1837.5;0.0
1;68800;KELP;2034;1;2033;30;;;2035;6;2037;31;;;2034.5;0.0
1;68900;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;68900;RAINFOREST_RESIN;9998;3;9996;2;9995;23;10004;2;10005;23;;;10001.0;0.0
1;68900;SQUID_INK;1835;25;;;;;1838;25;;;;;1836.5;0.0
1;69000;SQUID_INK;1836;28;;;;;1839;28;;;;;1837.5;0.0
1;69000;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;69000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;69100;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;69100;SQUID_INK;1837;27;;;;;1840;26;;;;;1838.5;0.0
1;69100;KELP;2034;27;;;;;2037;26;;;;;2035.5;0.0
1;69200;RAINFOREST_RESIN;9996;1;9995;20;;;10002;8;10004;1;10005;20;9999.0;0.0
1;69200;SQUID_INK;1838;21;;;;;1841;21;;;;;1839.5;0.0
1;69200;KELP;2034;1;2033;20;;;2037;21;;;;;2035.5;0.0
1;69300;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;69300;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;69300;SQUID_INK;1839;24;;;;;1842;24;;;;;1840.5;0.0
1;69400;SQUID_INK;1839;4;1838;22;;;1842;22;;;;;1840.5;0.0
1;69400;KELP;2034;26;;;;;2037;22;;;;;2035.5;0.0
1;69400;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;69500;RAINFOREST_RESIN;9996;1;9995;30;;;10002;8;10004;1;10005;30;9999.0;0.0
1;69500;SQUID_INK;1838;33;;;;;1841;31;;;;;1839.5;0.0
1;69500;KELP;2034;33;;;;;2037;31;;;;;2035.5;0.0
1;69600;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;69600;SQUID_INK;1839;27;;;;;1842;27;;;;;1840.5;0.0
1;69600;KELP;2034;27;;;;;2037;27;;;;;2035.5;0.0
1;69700;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;69700;RAINFOREST_RESIN;10002;1;9996;2;9995;24;10004;2;10005;24;;;10003.0;0.0
1;69700;SQUID_INK;1838;26;;;;;1841;26;;;;;1839.5;0.0
1;69800;SQUID_INK;1837;22;;;;;1840;23;;;;;1838.5;0.0
1;69800;KELP;2034;22;;;;;2037;23;;;;;2035.5;0.0
1;69800;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;69900;RAINFOREST_RESIN;10002;1;9998;10;9996;2;10004;2;10005;24;;;10003.0;0.0
1;69900;SQUID_INK;1838;26;;;;;1841;26;;;;;1839.5;0.0
1;69900;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;70000;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;70000;SQUID_INK;1838;30;;;;;1841;30;;;;;1839.5;0.0
1;70000;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;70100;KELP;2034;26;;;;;2037;27;;;;;2035.5;0.0
1;70100;RAINFOREST_RESIN;10002;1;9995;27;;;10005;27;;;;;10003.5;0.0
1;70100;SQUID_INK;1839;26;;;;;1842;27;;;;;1840.5;0.0
1;70200;SQUID_INK;1838;30;;;;;1841;30;;;;;1839.5;0.0
1;70200;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;70200;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;70300;SQUID_INK;1838;29;;;;;1841;25;;;;;1839.5;0.0
1;70300;KELP;2034;29;;;;;2037;25;;;;;2035.5;0.0
1;70300;RAINFOREST_RESIN;9998;10;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
1;70400;SQUID_INK;1838;31;;;;;1841;31;;;;;1839.5;0.0
1;70400;RAINFOREST_RESIN;10002;13;9996;2;9995;29;10004;2;10005;29;;;10003.0;0.0
1;70400;KELP;2034;31;;;;;2037;31;;;;;2035.5;0.0
1;70500;KELP;2034;18;;;;;2037;21;;;;;2035.5;0.0
1;70500;RAINFOREST_RESIN;10002;1;9995;21;;;10005;21;;;;;10003.5;0.0
1;70500;SQUID_INK;1838;18;;;;;1841;21;;;;;1839.5;0.0
1;70600;SQUID_INK;1840;2;1839;23;;;1842;23;;;;;1841.0;0.0
1;70600;RAINFOREST_RESIN;10002;1;10000;3;9996;1;10004;1;10005;22;;;10003.0;0.0
1;70600;KELP;2035;2;2034;23;;;2037;23;;;;;2036.0;0.0
1;70700;SQUID_INK;1838;27;;;;;1841;27;;;;;1839.5;0.0
1;70700;KELP;2034;27;;;;;2037;27;;;;;2035.5;0.0
1;70700;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;70800;SQUID_INK;1838;22;;;;;1841;22;;;;;1839.5;0.0
1;70800;RAINFOREST_RESIN;9996;2;9995;20;;;9998;5;10002;8;10004;2;9997.0;0.0
1;70800;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;70900;KELP;2034;20;;;;;2037;21;;;;;2035.5;0.0
1;70900;SQUID_INK;1838;20;;;;;1841;21;;;;;1839.5;0.0
1;70900;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;71000;RAINFOREST_RESIN;9996;2;9995;28;;;9998;3;10004;2;10005;28;9997.0;0.0
1;71000;KELP;2034;30;;;;;2036;1;2037;30;;;2035.0;0.0
1;71000;SQUID_INK;1837;30;;;;;1838;1;1840;30;;;1837.5;0.0
1;71100;KELP;2034;36;;;;;2037;30;;;;;2035.5;0.0
1;71100;SQUID_INK;1837;36;;;;;1840;30;;;;;1838.5;0.0
1;71100;RAINFOREST_RESIN;9998;4;9995;30;;;10005;30;;;;;10001.5;0.0
1;71200;SQUID_INK;1838;28;;;;;1842;28;;;;;1840.0;0.0
1;71200;RAINFOREST_RESIN;9996;1;9995;27;;;9998;1;10004;1;10005;27;9997.0;0.0
1;71200;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;71300;KELP;2034;30;;;;;2036;8;2037;30;;;2035.0;0.0
1;71300;SQUID_INK;1837;30;;;;;1839;8;1840;2;1841;28;1838.0;0.0
1;71300;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;71400;RAINFOREST_RESIN;10002;2;9996;2;9995;25;10004;2;10005;25;;;10003.0;0.0
1;71400;KELP;2034;27;;;;;2036;6;2037;27;;;2035.0;0.0
1;71400;SQUID_INK;1838;2;1837;25;;;1839;6;1841;27;;;1838.5;0.0
1;71500;KELP;2033;26;;;;;2035;5;2037;26;;;2034.0;0.0
1;71500;SQUID_INK;1838;26;;;;;1840;5;1841;26;;;1839.0;0.0
1;71500;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;71600;SQUID_INK;1841;31;;;;;1844;2;1845;29;;;1842.5;0.0
1;71600;RAINFOREST_RESIN;9998;7;9996;2;9995;29;10004;2;10005;29;;;10001.0;0.0
1;71600;KELP;2033;31;;;;;2037;31;;;;;2035.0;0.0
1;71700;KELP;2033;26;;;;;2037;26;;;;;2035.0;0.0
1;71700;SQUID_INK;1843;26;;;;;1846;26;;;;;1844.5;0.0
1;71700;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;0.0
1;71800;RAINFOREST_RESIN;9995;22;;;;;9998;1;10005;22;;;9996.5;0.0
1;71800;KELP;2033;22;;;;;2037;22;;;;;2035.0;0.0
1;71800;SQUID_INK;1842;22;;;;;1845;22;;;;;1843.5;0.0
1;71900;SQUID_INK;1843;30;;;;;1846;30;;;;;1844.5;0.0
1;71900;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;71900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;72000;SQUID_INK;1844;24;;;;;1847;24;;;;;1845.5;0.0
1;72000;RAINFOREST_RESIN;9998;2;9996;1;9995;23;10004;1;10005;23;;;10001.0;0.0
1;72000;KELP;2033;24;;;;;2037;24;;;;;2035.0;0.0
1;72100;SQUID_INK;1842;26;;;;;1845;26;;;;;1843.5;0.0
1;72100;KELP;2033;26;;;;;2037;26;;;;;2035.0;0.0
1;72100;RAINFOREST_RESIN;9996;2;9995;24;;;9998;1;10004;2;10005;24;9997.0;0.0
1;72200;RAINFOREST_RESIN;9995;25;;;;;9998;1;10005;25;;;9996.5;0.0
1;72200;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;72200;SQUID_INK;1844;25;;;;;1847;25;;;;;1845.5;0.0
1;72300;SQUID_INK;1843;23;;;;;1845;3;1846;23;;;1844.0;0.0
1;72300;KELP;2033;23;;;;;2035;3;2037;23;;;2034.0;0.0
1;72300;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;72400;SQUID_INK;1843;25;;;;;1846;25;;;;;1844.5;0.0
1;72400;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;72400;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;72500;SQUID_INK;1844;4;1843;22;;;1847;22;;;;;1845.5;0.0
1;72500;KELP;2035;4;2033;22;;;2037;22;;;;;2036.0;0.0
1;72500;RAINFOREST_RESIN;10000;4;9996;2;9995;20;10004;2;10005;20;;;10002.0;0.0
1;72600;RAINFOREST_RESIN;9998;8;9995;28;;;10005;28;;;;;10001.5;0.0
1;72600;KELP;2033;28;;;;;2037;28;;;;;2035.0;0.0
1;72600;SQUID_INK;1844;28;;;;;1847;28;;;;;1845.5;0.0
1;72700;SQUID_INK;1845;28;;;;;1848;28;;;;;1846.5;0.0
1;72700;KELP;2033;28;;;;;2037;28;;;;;2035.0;0.0
1;72700;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;72800;SQUID_INK;1846;21;;;;;1849;29;;;;;1847.5;0.0
1;72800;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;72800;KELP;2033;29;;;;;2034;8;2037;29;;;2033.5;0.0
1;72900;SQUID_INK;1844;25;;;;;1847;23;;;;;1845.5;0.0
1;72900;KELP;2034;2;2033;23;;;2037;23;;;;;2035.5;0.0
1;72900;RAINFOREST_RESIN;9996;1;9995;22;;;10002;4;10004;1;10005;22;9999.0;0.0
1;73000;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;73000;KELP;2033;21;;;;;2035;8;2037;21;;;2034.0;0.0
1;73000;SQUID_INK;1844;21;;;;;1846;8;1848;21;;;1845.0;0.0
1;73100;KELP;2033;28;;;;;2035;3;2037;28;;;2034.0;0.0
1;73100;SQUID_INK;1844;28;;;;;1846;3;1847;1;1848;27;1845.0;0.0
1;73100;RAINFOREST_RESIN;9996;1;9995;27;;;10002;7;10004;1;10005;27;9999.0;0.0
1;73200;KELP;2033;24;;;;;2037;24;;;;;2035.0;0.0
1;73200;SQUID_INK;1843;24;;;;;1846;24;;;;;1844.5;0.0
1;73200;RAINFOREST_RESIN;9996;1;9995;23;;;10002;7;10004;1;10005;23;9999.0;0.0
1;73300;SQUID_INK;1843;25;;;;;1846;25;;;;;1844.5;0.0
1;73300;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;73300;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;73400;RAINFOREST_RESIN;9995;30;;;;;10002;6;10005;30;;;9998.5;0.0
1;73400;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;73400;SQUID_INK;1841;30;;;;;1844;30;;;;;1842.5;0.0
1;73500;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;73500;SQUID_INK;1839;25;;;;;1842;25;;;;;1840.5;0.0
1;73500;RAINFOREST_RESIN;9998;6;9996;1;9995;24;10004;1;10005;24;;;10001.0;0.0
1;73600;KELP;2033;30;;;;;2037;30;;;;;2035.0;0.0
1;73600;SQUID_INK;1838;30;;;;;1841;30;;;;;1839.5;0.0
1;73600;RAINFOREST_RESIN;9995;30;;;;;9998;1;10005;30;;;9996.5;0.0
1;73700;SQUID_INK;1838;25;;;;;1842;25;;;;;1840.0;0.0
1;73700;RAINFOREST_RESIN;10002;4;9995;25;;;10005;25;;;;;10003.5;0.0
1;73700;KELP;2033;25;;;;;2037;25;;;;;2035.0;0.0
1;73800;RAINFOREST_RESIN;9998;1;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
1;73800;KELP;2034;1;2033;21;;;2037;22;;;;;2035.5;0.0
1;73800;SQUID_INK;1838;22;;;;;1841;22;;;;;1839.5;0.0
1;73900;KELP;2033;27;;;;;2037;27;;;;;2035.0;0.0
1;73900;SQUID_INK;1837;27;;;;;1841;27;;;;;1839.0;0.0
1;73900;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;74000;KELP;2035;6;2034;7;2033;29;2037;29;;;;;2036.0;0.0
1;74000;SQUID_INK;1838;6;1837;9;1836;27;1840;29;;;;;1839.0;0.0
1;74000;RAINFOREST_RESIN;10000;5;9996;2;9995;27;10004;2;10005;27;;;10002.0;0.0
1;74100;SQUID_INK;1838;3;1837;24;;;1840;24;;;;;1839.0;0.0
1;74100;RAINFOREST_RESIN;9998;5;9996;1;9995;23;10004;1;10005;23;;;10001.0;0.0
1;74100;KELP;2035;3;2034;1;2033;23;2037;24;;;;;2036.0;0.0
1;74200;RAINFOREST_RESIN;9996;1;9995;30;;;10002;1;10004;1;10005;30;9999.0;0.0
1;74200;KELP;2034;1;2033;30;;;2035;7;2037;31;;;2034.5;0.0
1;74200;SQUID_INK;1833;31;;;;;1834;7;1836;31;;;1833.5;0.0
1;74300;KELP;2034;1;2033;26;;;2035;3;2037;27;;;2034.5;0.0
1;74300;SQUID_INK;1832;27;;;;;1833;3;1835;27;;;1832.5;0.0
1;74300;RAINFOREST_RESIN;9998;6;9996;1;9995;26;10004;1;10005;26;;;10001.0;0.0
1;74400;KELP;2034;2;2033;21;;;2037;23;;;;;2035.5;0.0
1;74400;SQUID_INK;1829;23;;;;;1832;2;1833;21;;;1830.5;0.0
1;74400;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;74500;SQUID_INK;1832;1;1831;3;1830;26;1833;26;;;;;1832.5;0.0
1;74500;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;74500;KELP;2036;1;2035;3;2034;2;2037;26;;;;;2036.5;0.0
1;74600;RAINFOREST_RESIN;9996;2;9995;27;;;9998;2;10004;2;10005;27;9997.0;0.0
1;74600;KELP;2034;30;;;;;2037;29;;;;;2035.5;0.0
1;74600;SQUID_INK;1830;30;;;;;1833;29;;;;;1831.5;0.0
1;74700;KELP;2034;27;;;;;2037;27;;;;;2035.5;0.0
1;74700;SQUID_INK;1831;27;;;;;1834;27;;;;;1832.5;0.0
1;74700;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;74800;KELP;2034;27;;;;;2037;26;;;;;2035.5;0.0
1;74800;SQUID_INK;1831;27;;;;;1834;26;;;;;1832.5;0.0
1;74800;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;74900;SQUID_INK;1831;28;;;;;1834;28;;;;;1832.5;0.0
1;74900;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;74900;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;75000;RAINFOREST_RESIN;9996;1;9995;21;;;9998;4;10004;1;10005;21;9997.0;0.0
1;75000;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;75000;SQUID_INK;1830;22;;;;;1833;22;;;;;1831.5;0.0
1;75100;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;75100;SQUID_INK;1831;28;;;;;1834;28;;;;;1832.5;0.0
1;75100;RAINFOREST_RESIN;9996;2;9995;26;;;10002;8;10004;2;10005;26;9999.0;0.0
1;75200;KELP;2035;7;2034;31;;;2038;31;;;;;2036.5;0.0
1;75200;SQUID_INK;1830;38;;;;;1833;31;;;;;1831.5;0.0
1;75200;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;75300;RAINFOREST_RESIN;9998;7;9996;1;9995;26;10004;1;10005;26;;;10001.0;0.0
1;75300;SQUID_INK;1830;27;;;;;1833;27;;;;;1831.5;0.0
1;75300;KELP;2035;27;;;;;2038;27;;;;;2036.5;0.0
1;75400;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;75400;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;75400;SQUID_INK;1830;25;;;;;1833;25;;;;;1831.5;0.0
1;75500;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;75500;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;75500;SQUID_INK;1831;23;;;;;1834;23;;;;;1832.5;0.0
1;75600;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;75600;SQUID_INK;1830;25;;;;;1833;25;;;;;1831.5;0.0
1;75600;RAINFOREST_RESIN;9996;2;9995;23;;;9998;9;10004;2;10005;23;9997.0;0.0
1;75700;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;75700;SQUID_INK;1833;1;1831;27;;;1834;27;;;;;1833.5;0.0
1;75700;KELP;2036;1;2034;27;;;2037;27;;;;;2036.5;0.0
1;75800;RAINFOREST_RESIN;9996;2;9995;26;;;10002;3;10004;2;10005;26;9999.0;0.0
1;75800;KELP;2036;1;2034;29;;;2037;28;;;;;2036.5;0.0
1;75800;SQUID_INK;1834;1;1832;29;;;1835;28;;;;;1834.5;0.0
1;75900;KELP;2034;24;;;;;2036;3;2037;24;;;2035.0;0.0
1;75900;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;75900;SQUID_INK;1833;24;;;;;1835;3;1836;24;;;1834.0;0.0
1;76000;KELP;2034;34;;;;;2037;31;;;;;2035.5;0.0
1;76000;SQUID_INK;1834;34;;;;;1837;31;;;;;1835.5;0.0
1;76000;RAINFOREST_RESIN;9998;8;9996;1;9995;30;10004;1;10005;30;;;10001.0;0.0
1;76100;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;0.0
1;76100;SQUID_INK;1832;28;;;;;1835;28;;;;;1833.5;0.0
1;76100;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;76200;RAINFOREST_RESIN;9998;9;9995;28;;;10005;28;;;;;10001.5;0.0
1;76200;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;76200;SQUID_INK;1831;28;;;;;1834;28;;;;;1832.5;0.0
1;76300;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;76300;RAINFOREST_RESIN;9998;7;9996;1;9995;21;10004;1;10005;21;;;10001.0;0.0
1;76300;SQUID_INK;1830;22;;;;;1833;22;;;;;1831.5;0.0
1;76400;SQUID_INK;1830;36;;;;;1833;28;;;;;1831.5;0.0
1;76400;KELP;2034;36;;;;;2038;28;;;;;2036.0;0.0
1;76400;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;76500;RAINFOREST_RESIN;10000;2;9995;28;;;10005;28;;;;;10002.5;0.0
1;76500;SQUID_INK;1826;2;1825;28;;;1828;28;;;;;1827.0;0.0
1;76500;KELP;2035;2;2034;28;;;2037;28;;;;;2036.0;0.0
1;76600;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;76600;SQUID_INK;1825;29;;;;;1828;29;;;;;1826.5;0.0
1;76600;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;76700;KELP;2034;30;;;;;2037;31;;;;;2035.5;0.0
1;76700;RAINFOREST_RESIN;9998;9;9996;1;9995;30;10004;1;10005;30;;;10001.0;0.0
1;76700;SQUID_INK;1826;30;;;;;1829;31;;;;;1827.5;0.0
1;76800;SQUID_INK;1820;25;;;;;1824;25;;;;;1822.0;0.0
1;76800;KELP;2034;25;;;;;2037;25;;;;;2035.5;0.0
1;76800;RAINFOREST_RESIN;9995;25;;;;;10002;6;10005;25;;;9998.5;0.0
1;76900;RAINFOREST_RESIN;9998;3;9996;2;9995;27;10004;2;10005;27;;;10001.0;0.0
1;76900;SQUID_INK;1820;34;;;;;1823;29;;;;;1821.5;0.0
1;76900;KELP;2034;34;;;;;2037;29;;;;;2035.5;0.0
1;77000;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;77000;SQUID_INK;1815;28;;;;;1817;4;1819;28;;;1816.0;0.0
1;77000;KELP;2034;28;;;;;2036;4;2037;28;;;2035.0;0.0
1;77100;KELP;2036;5;2034;23;;;2038;22;;;;;2037.0;0.0
1;77100;RAINFOREST_RESIN;9998;10;9995;22;;;10005;22;;;;;10001.5;0.0
1;77100;SQUID_INK;1822;5;1821;1;1820;22;1824;22;;;;;1823.0;0.0
1;77200;SQUID_INK;1821;30;;;;;1825;30;;;;;1823.0;0.0
1;77200;KELP;2034;30;;;;;2037;30;;;;;2035.5;0.0
1;77200;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;77300;RAINFOREST_RESIN;9998;4;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;77300;SQUID_INK;1821;25;;;;;1824;26;;;;;1822.5;0.0
1;77300;KELP;2034;25;;;;;2037;1;2038;25;;;2035.5;0.0
1;77400;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;77400;SQUID_INK;1823;29;;;;;1824;3;1826;29;;;1823.5;0.0
1;77400;KELP;2034;29;;;;;2036;3;2037;29;;;2035.0;0.0
1;77500;KELP;2034;24;;;;;2037;24;;;;;2035.5;0.0
1;77500;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;77500;SQUID_INK;1823;24;;;;;1826;1;1827;23;;;1824.5;0.0
1;77600;SQUID_INK;1822;30;;;;;1825;30;;;;;1823.5;0.0
1;77600;KELP;2034;30;;;;;2038;30;;;;;2036.0;0.0
1;77600;RAINFOREST_RESIN;9998;3;9995;30;;;10005;30;;;;;10001.5;0.0
1;77700;RAINFOREST_RESIN;10002;1;9996;1;9995;30;10004;1;10005;30;;;10003.0;0.0
1;77700;SQUID_INK;1822;31;;;;;1825;1;1826;30;;;1823.5;0.0
1;77700;KELP;2034;31;;;;;2038;31;;;;;2036.0;0.0
1;77800;RAINFOREST_RESIN;9998;2;9996;2;9995;29;10004;2;10005;29;;;10001.0;0.0
1;77800;SQUID_INK;1822;31;;;;;1825;31;;;;;1823.5;0.0
1;77800;KELP;2034;31;;;;;2038;31;;;;;2036.0;0.0
1;77900;KELP;2037;1;2034;26;;;2038;26;;;;;2037.5;0.0
1;77900;RAINFOREST_RESIN;9996;2;9995;24;;;9998;1;10002;7;10004;2;9997.0;0.0
1;77900;SQUID_INK;1824;1;1822;26;;;1825;26;;;;;1824.5;0.0
1;78000;SQUID_INK;1821;21;;;;;1824;21;;;;;1822.5;0.0
1;78000;KELP;2035;21;;;;;2038;21;;;;;2036.5;0.0
1;78000;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;78100;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;78100;SQUID_INK;1821;23;;;;;1824;24;;;;;1822.5;0.0
1;78100;KELP;2035;23;;;;;2038;24;;;;;2036.5;0.0
1;78200;RAINFOREST_RESIN;10002;1;9995;24;;;10005;24;;;;;10003.5;0.0
1;78200;SQUID_INK;1821;1;1819;29;;;1822;24;;;;;1821.5;0.0
1;78200;KELP;2037;1;2035;29;;;2038;24;;;;;2037.5;0.0
1;78300;KELP;2035;25;;;;;2038;25;;;;;2036.5;0.0
1;78300;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;78300;SQUID_INK;1819;25;;;;;1822;25;;;;;1820.5;0.0
1;78400;SQUID_INK;1820;25;;;;;1823;25;;;;;1821.5;0.0
1;78400;KELP;2035;25;;;;;2038;25;;;;;2036.5;0.0
1;78400;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;78500;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;78500;SQUID_INK;1820;29;;;;;1823;25;;;;;1821.5;0.0
1;78500;KELP;2035;29;;;;;2038;25;;;;;2036.5;0.0
1;78600;RAINFOREST_RESIN;9996;2;9995;23;;;10002;5;10004;2;10005;23;9999.0;0.0
1;78600;SQUID_INK;1821;25;;;;;1823;3;1824;2;1825;23;1822.0;0.0
1;78600;KELP;2035;25;;;;;2037;3;2038;25;;;2036.0;0.0
1;78700;KELP;2035;26;;;;;2038;26;;;;;2036.5;0.0
1;78700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;78700;SQUID_INK;1821;26;;;;;1824;26;;;;;1822.5;0.0
1;78800;SQUID_INK;1821;29;;;;;1825;29;;;;;1823.0;0.0
1;78800;KELP;2035;29;;;;;2038;29;;;;;2036.5;0.0
1;78800;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;78900;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10004;1;10005;25;9997.0;0.0
1;78900;SQUID_INK;1821;26;;;;;1824;26;;;;;1822.5;0.0
1;78900;KELP;2035;26;;;;;2038;26;;;;;2036.5;0.0
1;79000;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;79000;SQUID_INK;1820;29;;;;;1823;22;;;;;1821.5;0.0
1;79000;KELP;2035;29;;;;;2038;22;;;;;2036.5;0.0
1;79100;KELP;2035;20;;;;;2038;20;;;;;2036.5;0.0
1;79100;RAINFOREST_RESIN;9995;20;;;;;9998;5;10005;20;;;9996.5;0.0
1;79100;SQUID_INK;1820;20;;;;;1823;20;;;;;1821.5;0.0
1;79200;SQUID_INK;1821;26;;;;;1824;2;1825;24;;;1822.5;0.0
1;79200;RAINFOREST_RESIN;9996;2;9995;24;;;10002;9;10004;2;10005;24;9999.0;0.0
1;79200;KELP;2035;26;;;;;2038;26;;;;;2036.5;0.0
1;79300;SQUID_INK;1822;26;;;;;1825;21;;;;;1823.5;0.0
1;79300;KELP;2035;26;;;;;2038;21;;;;;2036.5;0.0
1;79300;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;79400;SQUID_INK;1820;33;;;;;1823;29;;;;;1821.5;0.0
1;79400;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;79400;KELP;2035;33;;;;;2038;29;;;;;2036.5;0.0
1;79500;KELP;2037;7;2035;28;;;2038;28;;;;;2037.5;0.0
1;79500;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;79500;SQUID_INK;1818;7;1816;28;;;1819;28;;;;;1818.5;0.0
1;79600;RAINFOREST_RESIN;9996;2;9995;23;;;10002;4;10004;2;10005;23;9999.0;0.0
1;79600;KELP;2035;25;;;;;2037;3;2038;25;;;2036.0;0.0
1;79600;SQUID_INK;1814;25;;;;;1816;3;1817;25;;;1815.0;0.0
1;79700;KELP;2035;25;;;;;2038;25;;;;;2036.5;0.0
1;79700;SQUID_INK;1815;25;;;;;1819;25;;;;;1817.0;0.0
1;79700;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;79800;SQUID_INK;1815;25;;;;;1818;25;;;;;1816.5;0.0
1;79800;RAINFOREST_RESIN;9995;25;;;;;10005;25;;;;;10000.0;0.0
1;79800;KELP;2034;25;;;;;2038;25;;;;;2036.0;0.0
1;79900;KELP;2035;3;2034;29;;;2038;29;;;;;2036.5;0.0
1;79900;SQUID_INK;1815;32;;;;;1818;29;;;;;1816.5;0.0
1;79900;RAINFOREST_RESIN;9996;1;9995;28;;;10002;6;10004;1;10005;28;9999.0;0.0
1;80000;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;80000;KELP;2034;26;;;;;2035;1;2038;26;;;2034.5;0.0
1;80000;SQUID_INK;1815;25;;;;;1818;26;;;;;1816.5;0.0
1;80100;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;80100;SQUID_INK;1811;22;;;;;1814;22;;;;;1812.5;0.0
1;80100;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;80200;SQUID_INK;1808;22;;;;;1812;22;;;;;1810.0;0.0
1;80200;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;80200;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;80300;KELP;2034;21;;;;;2036;6;2038;21;;;2035.0;0.0
1;80300;SQUID_INK;1805;21;;;;;1806;6;1808;21;;;1805.5;0.0
1;80300;RAINFOREST_RESIN;9996;1;9995;20;;;10000;6;10004;1;10005;20;9998.0;0.0
1;80400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;80400;KELP;2034;25;;;;;2038;25;;;;;2036.0;0.0
1;80400;SQUID_INK;1804;25;;;;;1807;25;;;;;1805.5;0.0
1;80500;KELP;2034;22;;;;;2035;2;2038;22;;;2034.5;0.0
1;80500;SQUID_INK;1805;20;;;;;1808;22;;;;;1806.5;0.0
1;80500;RAINFOREST_RESIN;9996;1;9995;21;;;9998;1;10004;1;10005;21;9997.0;0.0
1;80600;SQUID_INK;1801;31;;;;;1803;2;1804;31;;;1802.0;0.0
1;80600;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;80600;KELP;2034;31;;;;;2036;2;2038;31;;;2035.0;0.0
1;80700;SQUID_INK;1804;24;;;;;1807;24;;;;;1805.5;0.0
1;80700;KELP;2034;24;;;;;2038;24;;;;;2036.0;0.0
1;80700;RAINFOREST_RESIN;9998;3;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;80800;RAINFOREST_RESIN;9996;2;9995;22;;;10002;5;10004;2;10005;22;9999.0;0.0
1;80800;KELP;2034;24;;;;;2036;6;2038;24;;;2035.0;0.0
1;80800;SQUID_INK;1805;24;;;;;1807;6;1808;24;;;1806.0;0.0
1;80900;SQUID_INK;1806;28;;;;;1808;6;1809;28;;;1807.0;0.0
1;80900;KELP;2034;28;;;;;2036;6;2038;28;;;2035.0;0.0
1;80900;RAINFOREST_RESIN;9996;1;9995;27;;;10002;7;10004;1;10005;27;9999.0;0.0
1;81000;SQUID_INK;1800;31;;;;;1803;31;;;;;1801.5;0.0
1;81000;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;81000;KELP;2034;31;;;;;2038;31;;;;;2036.0;0.0
1;81100;SQUID_INK;1802;24;;;;;1805;24;;;;;1803.5;0.0
1;81100;KELP;2034;24;;;;;2038;24;;;;;2036.0;0.0
1;81100;RAINFOREST_RESIN;9996;2;9995;22;;;10004;2;10005;22;;;10000.0;0.0
1;81200;RAINFOREST_RESIN;9996;1;9995;28;;;10002;4;10004;1;10005;28;9999.0;0.0
1;81200;KELP;2034;29;;;;;2037;1;2038;28;;;2035.5;0.0
1;81200;SQUID_INK;1804;29;;;;;1807;29;;;;;1805.5;0.0
1;81300;SQUID_INK;1806;1;1805;2;1804;28;1808;30;;;;;1807.0;0.0
1;81300;KELP;2036;1;2034;30;;;2038;30;;;;;2037.0;0.0
1;81300;RAINFOREST_RESIN;10002;1;9996;2;9995;28;10004;2;10005;28;;;10003.0;0.0
1;81400;SQUID_INK;1807;22;;;;;1810;1;1811;21;;;1808.5;0.0
1;81400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;81400;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;81500;SQUID_INK;1807;22;;;;;1810;22;;;;;1808.5;0.0
1;81500;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;81500;RAINFOREST_RESIN;9998;2;9995;22;;;10005;22;;;;;10001.5;0.0
1;81600;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;0.0
1;81600;KELP;2035;28;;;;;2038;28;;;;;2036.5;0.0
1;81600;SQUID_INK;1808;28;;;;;1811;28;;;;;1809.5;0.0
1;81700;SQUID_INK;1807;26;;;;;1810;26;;;;;1808.5;0.0
1;81700;KELP;2035;26;;;;;2038;26;;;;;2036.5;0.0
1;81700;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;81800;SQUID_INK;1812;21;;;;;1815;21;;;;;1813.5;0.0
1;81800;RAINFOREST_RESIN;9998;5;9995;21;;;10005;21;;;;;10001.5;0.0
1;81800;KELP;2035;21;;;;;2038;21;;;;;2036.5;0.0
1;81900;SQUID_INK;1811;28;;;;;1814;28;;;;;1812.5;0.0
1;81900;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;81900;KELP;2034;28;;;;;2038;28;;;;;2036.0;0.0
1;82000;RAINFOREST_RESIN;9996;1;9995;24;;;10002;3;10004;1;10005;24;9999.0;0.0
1;82000;KELP;2035;25;;;;;2038;25;;;;;2036.5;0.0
1;82000;SQUID_INK;1812;25;;;;;1815;25;;;;;1813.5;0.0
1;82100;KELP;2035;26;;;;;2038;26;;;;;2036.5;0.0
1;82100;SQUID_INK;1810;26;;;;;1814;26;;;;;1812.0;0.0
1;82100;RAINFOREST_RESIN;9995;26;;;;;9998;1;10005;26;;;9996.5;0.0
1;82200;KELP;2035;31;;;;;2038;30;;;;;2036.5;0.0
1;82200;SQUID_INK;1810;31;;;;;1813;30;;;;;1811.5;0.0
1;82200;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;82300;SQUID_INK;1809;32;;;;;1812;32;;;;;1810.5;0.0
1;82300;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;82300;KELP;2035;32;;;;;2038;32;;;;;2036.5;0.0
1;82400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;82400;KELP;2035;22;;;;;2038;22;;;;;2036.5;0.0
1;82400;SQUID_INK;1810;22;;;;;1813;22;;;;;1811.5;0.0
1;82500;KELP;2035;24;;;;;2038;24;;;;;2036.5;0.0
1;82500;SQUID_INK;1801;24;;;;;1804;24;;;;;1802.5;0.0
1;82500;RAINFOREST_RESIN;9996;1;9995;23;;;9998;3;10004;1;10005;23;9997.0;0.0
1;82600;KELP;2035;31;;;;;2036;5;2037;3;2038;31;2035.5;0.0
1;82600;SQUID_INK;1803;31;;;;;1804;5;1805;3;1806;31;1803.5;0.0
1;82600;RAINFOREST_RESIN;9996;2;9995;29;;;10000;5;10004;2;10005;29;9998.0;0.0
1;82700;SQUID_INK;1805;32;;;;;1808;30;;;;;1806.5;0.0
1;82700;RAINFOREST_RESIN;9996;1;9995;29;;;10002;1;10004;1;10005;29;9999.0;0.0
1;82700;KELP;2035;32;;;;;2038;30;;;;;2036.5;0.0
1;82800;RAINFOREST_RESIN;9998;10;9995;21;;;10005;21;;;;;10001.5;0.0
1;82800;KELP;2035;21;;;;;2037;1;2038;21;;;2036.0;0.0
1;82800;SQUID_INK;1804;21;;;;;1806;1;1807;21;;;1805.0;0.0
1;82900;KELP;2035;21;;;;;2038;21;;;;;2036.5;0.0
1;82900;SQUID_INK;1804;21;;;;;1807;21;;;;;1805.5;0.0
1;82900;RAINFOREST_RESIN;9998;9;9996;1;9995;20;10004;1;10005;20;;;10001.0;0.0
1;83000;KELP;2035;30;;;;;2038;30;;;;;2036.5;0.0
1;83000;SQUID_INK;1806;30;;;;;1809;30;;;;;1807.5;0.0
1;83000;RAINFOREST_RESIN;9998;8;9996;2;9995;28;10004;2;10005;28;;;10001.0;0.0
1;83100;SQUID_INK;1805;26;;;;;1808;26;;;;;1806.5;0.0
1;83100;RAINFOREST_RESIN;9995;26;;;;;9998;5;10005;26;;;9996.5;0.0
1;83100;KELP;2035;26;;;;;2038;26;;;;;2036.5;0.0
1;83200;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;83200;KELP;2035;31;;;;;2038;31;;;;;2036.5;0.0
1;83200;SQUID_INK;1805;31;;;;;1808;31;;;;;1806.5;0.0
1;83300;KELP;2035;23;;;;;2038;23;;;;;2036.5;0.0
1;83300;SQUID_INK;1801;1;1800;22;;;1804;23;;;;;1802.5;0.0
1;83300;RAINFOREST_RESIN;9996;1;9995;22;;;10002;7;10004;1;10005;22;9999.0;0.0
1;83400;KELP;2035;25;;;;;2037;3;2038;25;;;2036.0;0.0
1;83400;SQUID_INK;1804;25;;;;;1805;3;1807;25;;;1804.5;0.0
1;83400;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;83500;SQUID_INK;1802;1;1800;30;;;1803;30;;;;;1802.5;0.0
1;83500;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;83500;KELP;2037;1;2035;30;;;2038;30;;;;;2037.5;0.0
1;83600;RAINFOREST_RESIN;9998;1;9995;24;;;10005;24;;;;;10001.5;0.0
1;83600;KELP;2035;24;;;;;2038;24;;;;;2036.5;0.0
1;83600;SQUID_INK;1803;24;;;;;1806;24;;;;;1804.5;0.0
1;83700;KELP;2034;27;;;;;2038;27;;;;;2036.0;0.0
1;83700;SQUID_INK;1802;27;;;;;1805;27;;;;;1803.5;0.0
1;83700;RAINFOREST_RESIN;9996;1;9995;26;;;10002;7;10004;1;10005;26;9999.0;0.0
1;83800;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;83800;SQUID_INK;1800;22;;;;;1803;22;;;;;1801.5;0.0
1;83800;RAINFOREST_RESIN;9995;22;;;;;9998;2;10005;22;;;9996.5;0.0
1;83900;SQUID_INK;1799;26;;;;;1802;26;;;;;1800.5;0.0
1;83900;RAINFOREST_RESIN;9998;4;9996;1;9995;25;10004;1;10005;25;;;10001.0;0.0
1;83900;KELP;2035;1;2034;25;;;2038;26;;;;;2036.5;0.0
1;84000;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;84000;KELP;2034;20;;;;;2038;21;;;;;2036.0;0.0
1;84000;SQUID_INK;1798;20;;;;;1801;21;;;;;1799.5;0.0
1;84100;KELP;2035;30;;;;;2038;30;;;;;2036.5;0.0
1;84100;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;84100;SQUID_INK;1800;30;;;;;1803;30;;;;;1801.5;0.0
1;84200;KELP;2035;2;2034;29;;;2038;31;;;;;2036.5;0.0
1;84200;SQUID_INK;1798;31;;;;;1801;31;;;;;1799.5;0.0
1;84200;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;84300;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;84300;SQUID_INK;1797;25;;;;;1800;20;;;;;1798.5;0.0
1;84300;KELP;2035;5;2034;20;;;2038;20;;;;;2036.5;0.0
1;84400;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;84400;KELP;2034;28;;;;;2038;28;;;;;2036.0;0.0
1;84400;SQUID_INK;1797;28;;;;;1800;28;;;;;1798.5;0.0
1;84500;KELP;2035;5;2034;24;;;2038;24;;;;;2036.5;0.0
1;84500;RAINFOREST_RESIN;9998;2;9996;1;9995;23;10004;1;10005;23;;;10001.0;0.0
1;84500;SQUID_INK;1797;29;;;;;1800;24;;;;;1798.5;0.0
1;84600;KELP;2034;30;;;;;2038;30;;;;;2036.0;0.0
1;84600;SQUID_INK;1795;30;;;;;1798;30;;;;;1796.5;0.0
1;84600;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;84700;RAINFOREST_RESIN;9996;2;9995;23;;;10002;8;10004;2;10005;23;9999.0;0.0
1;84700;SQUID_INK;1799;25;;;;;1802;25;;;;;1800.5;0.0
1;84700;KELP;2034;25;;;;;2038;25;;;;;2036.0;0.0
1;84800;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;84800;KELP;2034;26;;;;;2038;26;;;;;2036.0;0.0
1;84800;SQUID_INK;1799;26;;;;;1802;26;;;;;1800.5;0.0
1;84900;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;84900;RAINFOREST_RESIN;9995;22;;;;;10002;5;10005;22;;;9998.5;0.0
1;84900;SQUID_INK;1801;22;;;;;1805;22;;;;;1803.0;0.0
1;85000;KELP;2034;24;;;;;2036;3;2038;24;;;2035.0;0.0
1;85000;SQUID_INK;1802;24;;;;;1803;3;1805;24;;;1802.5;0.0
1;85000;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;85100;RAINFOREST_RESIN;9996;1;9995;30;;;10002;4;10004;1;10005;30;9999.0;0.0
1;85100;SQUID_INK;1803;31;;;;;1806;31;;;;;1804.5;0.0
1;85100;KELP;2034;31;;;;;2037;1;2038;30;;;2035.5;0.0
1;85200;RAINFOREST_RESIN;10000;4;9995;21;;;10005;21;;;;;10002.5;0.0
1;85200;SQUID_INK;1806;4;1805;21;;;1808;21;;;;;1807.0;0.0
1;85200;KELP;2035;4;2034;21;;;2038;21;;;;;2036.5;0.0
1;85300;KELP;2034;30;;;;;2038;30;;;;;2036.0;0.0
1;85300;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;85300;SQUID_INK;1807;30;;;;;1810;30;;;;;1808.5;0.0
1;85400;SQUID_INK;1808;22;;;;;1811;1;1812;21;;;1809.5;0.0
1;85400;KELP;2035;1;2034;21;;;2038;22;;;;;2036.5;0.0
1;85400;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;85500;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;85500;SQUID_INK;1806;21;;;;;1808;5;1809;21;;;1807.0;0.0
1;85500;KELP;2035;21;;;;;2037;5;2038;21;;;2036.0;0.0
1;85600;RAINFOREST_RESIN;9995;29;;;;;10002;9;10005;29;;;9998.5;0.0
1;85600;SQUID_INK;1806;29;;;;;1809;29;;;;;1807.5;0.0
1;85600;KELP;2035;29;;;;;2038;29;;;;;2036.5;0.0
1;85700;KELP;2035;28;;;;;2038;28;;;;;2036.5;0.0
1;85700;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;85700;SQUID_INK;1806;28;;;;;1809;28;;;;;1807.5;0.0
1;85800;SQUID_INK;1808;23;;;;;1811;25;;;;;1809.5;0.0
1;85800;KELP;2034;25;;;;;2035;2;2038;25;;;2034.5;0.0
1;85800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;85900;RAINFOREST_RESIN;9996;1;9995;22;;;9998;8;10004;1;10005;22;9997.0;0.0
1;85900;SQUID_INK;1813;23;;;;;1816;23;;;;;1814.5;0.0
1;85900;KELP;2035;1;2034;22;;;2038;23;;;;;2036.5;0.0
1;86000;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;86000;SQUID_INK;1815;4;1814;23;;;1817;22;;;;;1816.0;0.0
1;86000;KELP;2036;4;2035;1;2034;22;2038;22;;;;;2037.0;0.0
1;86100;KELP;2035;2;2034;26;;;2038;28;;;;;2036.5;0.0
1;86100;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;86100;SQUID_INK;1812;28;;;;;1815;28;;;;;1813.5;0.0
1;86200;SQUID_INK;1814;27;;;;;1818;28;;;;;1816.0;0.0
1;86200;KELP;2034;27;;;;;2038;28;;;;;2036.0;0.0
1;86200;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;86300;RAINFOREST_RESIN;9998;10;9996;2;9995;30;10004;2;10005;30;;;10001.0;0.0
1;86300;SQUID_INK;1813;37;;;;;1816;32;;;;;1814.5;0.0
1;86300;KELP;2035;7;2034;30;;;2038;32;;;;;2036.5;0.0
1;86400;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;86400;SQUID_INK;1812;2;1811;23;;;1815;25;;;;;1813.5;0.0
1;86400;KELP;2035;2;2034;23;;;2038;25;;;;;2036.5;0.0
1;86500;KELP;2035;27;;;;;2038;21;;;;;2036.5;0.0
1;86500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;86500;SQUID_INK;1811;27;;;;;1814;21;;;;;1812.5;0.0
1;86600;SQUID_INK;1811;29;;;;;1814;30;;;;;1812.5;0.0
1;86600;KELP;2035;29;;;;;2038;30;;;;;2036.5;0.0
1;86600;RAINFOREST_RESIN;9995;30;;;;;9998;8;10005;30;;;9996.5;0.0
1;86700;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;86700;SQUID_INK;1812;3;1810;28;;;1814;28;;;;;1813.0;0.0
1;86700;KELP;2036;3;2035;28;;;2038;28;;;;;2037.0;0.0
1;86800;RAINFOREST_RESIN;9995;30;;;;;10002;5;10005;30;;;9998.5;0.0
1;86800;SQUID_INK;1810;30;;;;;1813;30;;;;;1811.5;0.0
1;86800;KELP;2034;30;;;;;2038;30;;;;;2036.0;0.0
1;86900;KELP;2034;28;;;;;2036;1;2038;28;;;2035.0;0.0
1;86900;RAINFOREST_RESIN;9995;28;;;;;10000;2;10005;28;;;9997.5;0.0
1;86900;SQUID_INK;1810;28;;;;;1811;1;1813;28;;;1810.5;0.0
1;87000;SQUID_INK;1809;27;;;;;1812;1;1813;26;;;1810.5;0.0
1;87000;KELP;2034;27;;;;;2038;27;;;;;2036.0;0.0
1;87000;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;87100;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;87100;SQUID_INK;1810;27;;;;;1813;27;;;;;1811.5;0.0
1;87100;KELP;2034;27;;;;;2038;27;;;;;2036.0;0.0
1;87200;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;87200;SQUID_INK;1808;23;;;;;1811;23;;;;;1809.5;0.0
1;87200;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;87300;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;87300;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;87300;SQUID_INK;1807;2;1806;27;;;1810;29;;;;;1808.5;0.0
1;87400;SQUID_INK;1808;29;;;;;1811;30;;;;;1809.5;0.0
1;87400;KELP;2034;29;;;;;2038;30;;;;;2036.0;0.0
1;87400;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;87500;RAINFOREST_RESIN;9996;1;9995;21;;;10004;1;10005;21;;;10000.0;0.0
1;87500;SQUID_INK;1808;22;;;;;1811;22;;;;;1809.5;0.0
1;87500;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;87600;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;87600;SQUID_INK;1809;1;1808;4;1807;31;1810;31;;;;;1809.5;0.0
1;87600;KELP;2036;1;2035;4;2034;31;2038;31;;;;;2037.0;0.0
1;87700;KELP;2034;25;;;;;2038;25;;;;;2036.0;0.0
1;87700;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;87700;SQUID_INK;1809;25;;;;;1812;25;;;;;1810.5;0.0
1;87800;SQUID_INK;1806;39;;;;;1809;31;;;;;1807.5;0.0
1;87800;KELP;2035;8;2034;31;;;2037;2;2038;29;;;2036.0;0.0
1;87800;RAINFOREST_RESIN;9996;2;9995;29;;;9998;1;10004;2;10005;29;9997.0;0.0
1;87900;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;87900;SQUID_INK;1809;1;1807;23;;;1810;23;;;;;1809.5;0.0
1;87900;KELP;2036;1;2034;23;;;2037;2;2038;21;;;2036.5;0.0
1;88000;RAINFOREST_RESIN;10002;1;9996;2;9995;26;10004;2;10005;26;;;10003.0;0.0
1;88000;SQUID_INK;1806;28;;;;;1809;28;;;;;1807.5;0.0
1;88000;KELP;2034;28;;;;;2038;28;;;;;2036.0;0.0
1;88100;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;88100;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;88100;SQUID_INK;1809;29;;;;;1812;29;;;;;1810.5;0.0
1;88200;SQUID_INK;1805;22;;;;;1808;22;;;;;1806.5;0.0
1;88200;RAINFOREST_RESIN;9996;2;9995;20;;;9998;3;10004;2;10005;20;9997.0;0.0
1;88200;KELP;2034;22;;;;;2037;2;2038;20;;;2035.5;0.0
1;88300;SQUID_INK;1807;10;1805;37;;;1808;30;;;;;1807.5;0.0
1;88300;KELP;2036;10;2035;7;2034;30;2037;1;2038;29;;;2036.5;0.0
1;88300;RAINFOREST_RESIN;9998;5;9996;1;9995;29;10004;1;10005;29;;;10001.0;0.0
1;88400;SQUID_INK;1807;24;;;;;1808;2;1810;24;;;1807.5;0.0
1;88400;RAINFOREST_RESIN;9996;1;9995;23;;;10004;1;10005;23;;;10000.0;0.0
1;88400;KELP;2034;24;;;;;2036;2;2037;1;2038;23;2035.0;0.0
1;88500;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;88500;SQUID_INK;1806;22;;;;;1809;22;;;;;1807.5;0.0
1;88500;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;88600;RAINFOREST_RESIN;9998;4;9995;30;;;10005;30;;;;;10001.5;0.0
1;88600;KELP;2034;30;;;;;2035;4;2036;2;2038;30;2034.5;0.0
1;88600;SQUID_INK;1806;30;;;;;1807;4;1808;2;1809;30;1806.5;0.0
1;88700;KELP;2035;5;2034;27;;;2037;2;2038;25;;;2036.0;0.0
1;88700;SQUID_INK;1807;32;;;;;1810;27;;;;;1808.5;0.0
1;88700;RAINFOREST_RESIN;9996;2;9995;25;;;9998;1;10004;2;10005;25;9997.0;0.0
1;88800;SQUID_INK;1807;2;1806;29;;;1809;2;1810;27;;;1808.0;0.0
1;88800;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;88800;KELP;2035;2;2034;29;;;2038;29;;;;;2036.5;0.0
1;88900;KELP;2034;27;;;;;2038;27;;;;;2036.0;0.0
1;88900;SQUID_INK;1807;27;;;;;1810;27;;;;;1808.5;0.0
1;88900;RAINFOREST_RESIN;9996;1;9995;26;;;10002;4;10004;1;10005;26;9999.0;0.0
1;89000;RAINFOREST_RESIN;9998;5;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;89000;KELP;2034;24;;;;;2038;24;;;;;2036.0;0.0
1;89000;SQUID_INK;1807;24;;;;;1810;24;;;;;1808.5;0.0
1;89100;KELP;2035;3;2034;21;;;2038;21;;;;;2036.5;0.0
1;89100;SQUID_INK;1807;24;;;;;1810;21;;;;;1808.5;0.0
1;89100;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;89200;SQUID_INK;1807;26;;;;;1809;1;1810;26;;;1808.0;0.0
1;89200;RAINFOREST_RESIN;9996;2;9995;24;;;10004;2;10005;24;;;10000.0;0.0
1;89200;KELP;2034;26;;;;;2036;1;2038;26;;;2035.0;0.0
1;89300;KELP;2035;3;2034;26;;;2038;26;;;;;2036.5;0.0
1;89300;SQUID_INK;1806;29;;;;;1809;26;;;;;1807.5;0.0
1;89300;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;89400;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;89400;KELP;2035;7;2034;31;;;2038;31;;;;;2036.5;0.0
1;89400;SQUID_INK;1806;38;;;;;1809;31;;;;;1807.5;0.0
1;89500;KELP;2034;32;;;;;2038;32;;;;;2036.0;0.0
1;89500;SQUID_INK;1806;32;;;;;1809;32;;;;;1807.5;0.0
1;89500;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;89600;SQUID_INK;1805;25;;;;;1806;1;1808;2;1809;23;1805.5;0.0
1;89600;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;89600;KELP;2034;24;;;;;2038;25;;;;;2036.0;0.0
1;89700;SQUID_INK;1806;23;;;;;1809;23;;;;;1807.5;0.0
1;89700;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;89700;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;89800;RAINFOREST_RESIN;9998;8;9995;27;;;10005;27;;;;;10001.5;0.0
1;89800;KELP;2037;1;2035;8;2034;27;2038;27;;;;;2037.5;0.0
1;89800;SQUID_INK;1806;1;1805;8;1804;27;1807;27;;;;;1806.5;0.0
1;89900;SQUID_INK;1806;30;;;;;1809;30;;;;;1807.5;0.0
1;89900;KELP;2034;30;;;;;2038;30;;;;;2036.0;0.0
1;89900;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;90000;SQUID_INK;1805;2;1804;22;;;1808;22;;;;;1806.5;0.0
1;90000;RAINFOREST_RESIN;9995;22;;;;;10002;3;10005;22;;;9998.5;0.0
1;90000;KELP;2035;2;2034;22;;;2038;22;;;;;2036.5;0.0
1;90100;SQUID_INK;1805;22;;;;;1806;8;1808;22;;;1805.5;0.0
1;90100;KELP;2034;22;;;;;2036;8;2037;1;2038;21;2035.0;0.0
1;90100;RAINFOREST_RESIN;9996;1;9995;21;;;9998;1;10004;1;10005;21;9997.0;0.0
1;90200;RAINFOREST_RESIN;9998;7;9996;2;9995;24;10004;2;10005;24;;;10001.0;0.0
1;90200;KELP;2034;26;;;;;2036;6;2037;2;2038;24;2035.0;0.0
1;90200;SQUID_INK;1804;2;1803;24;;;1805;6;1807;26;;;1804.5;0.0
1;90300;SQUID_INK;1805;31;;;;;1808;28;;;;;1806.5;0.0
1;90300;KELP;2035;3;2034;28;;;2038;28;;;;;2036.5;0.0
1;90300;RAINFOREST_RESIN;10002;1;9995;28;;;10005;28;;;;;10003.5;0.0
1;90400;SQUID_INK;1806;26;;;;;1808;7;1809;26;;;1807.0;0.0
1;90400;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;90400;KELP;2034;26;;;;;2036;7;2037;26;;;2035.0;0.0
1;90500;SQUID_INK;1808;8;1807;28;;;1810;28;;;;;1809.0;0.0
1;90500;KELP;2035;8;2034;28;;;2037;1;2038;27;;;2036.0;0.0
1;90500;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;90600;RAINFOREST_RESIN;9996;2;9995;21;;;10004;2;10005;21;;;10000.0;0.0
1;90600;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;90600;SQUID_INK;1806;23;;;;;1809;23;;;;;1807.5;0.0
1;90700;KELP;2034;20;;;;;2038;20;;;;;2036.0;0.0
1;90700;SQUID_INK;1806;20;;;;;1809;20;;;;;1807.5;0.0
1;90700;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;90800;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;90800;SQUID_INK;1806;1;1805;25;;;1809;26;;;;;1807.5;0.0
1;90800;RAINFOREST_RESIN;9996;1;9995;25;;;9998;1;10002;7;10004;1;9997.0;0.0
1;90900;SQUID_INK;1804;22;;;;;1808;22;;;;;1806.0;0.0
1;90900;RAINFOREST_RESIN;9998;8;9995;22;;;10005;22;;;;;10001.5;0.0
1;90900;KELP;2034;22;;;;;2037;22;;;;;2035.5;0.0
1;91000;RAINFOREST_RESIN;10002;1;9996;2;9995;30;10004;2;10005;30;;;10003.0;0.0
1;91000;KELP;2034;32;;;;;2037;32;;;;;2035.5;0.0
1;91000;SQUID_INK;1804;2;1803;30;;;1807;32;;;;;1805.5;0.0
1;91100;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;91100;SQUID_INK;1803;26;;;;;1806;26;;;;;1804.5;0.0
1;91100;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;91200;KELP;2034;21;;;;;2036;4;2037;21;;;2035.0;0.0
1;91200;SQUID_INK;1802;21;;;;;1804;4;1805;1;1806;20;1803.0;0.0
1;91200;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;91300;SQUID_INK;1800;22;;;;;1802;7;1804;22;;;1801.0;0.0
1;91300;RAINFOREST_RESIN;10002;3;9995;22;;;10005;22;;;;;10003.5;0.0
1;91300;KELP;2034;22;;;;;2036;7;2037;22;;;2035.0;0.0
1;91400;RAINFOREST_RESIN;9996;2;9995;24;;;10002;10;10004;2;10005;24;9999.0;0.0
1;91400;KELP;2034;26;;;;;2037;26;;;;;2035.5;0.0
1;91400;SQUID_INK;1801;26;;;;;1804;26;;;;;1802.5;0.0
1;91500;KELP;2034;29;;;;;2037;27;;;;;2035.5;0.0
1;91500;SQUID_INK;1802;29;;;;;1805;27;;;;;1803.5;0.0
1;91500;RAINFOREST_RESIN;9996;1;9995;26;;;10004;1;10005;26;;;10000.0;0.0
1;91600;KELP;2036;3;2034;25;;;2037;22;;;;;2036.5;0.0
1;91600;SQUID_INK;1801;3;1800;25;;;1803;22;;;;;1802.0;0.0
1;91600;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;91700;SQUID_INK;1803;26;;;;;1806;26;;;;;1804.5;0.0
1;91700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;91700;KELP;2034;26;;;;;2038;26;;;;;2036.0;0.0
1;91800;RAINFOREST_RESIN;10000;6;9996;1;9995;20;10004;1;10005;20;;;10002.0;0.0
1;91800;KELP;2035;5;2034;21;;;2037;1;2038;20;;;2036.0;0.0
1;91800;SQUID_INK;1807;5;1806;21;;;1809;21;;;;;1808.0;0.0
1;91900;KELP;2036;3;2034;30;;;2037;1;2038;29;;;2036.5;0.0
1;91900;SQUID_INK;1809;3;1807;30;;;1810;30;;;;;1809.5;0.0
1;91900;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;92000;KELP;2035;6;2034;24;;;2038;24;;;;;2036.5;0.0
1;92000;SQUID_INK;1807;30;;;;;1810;24;;;;;1808.5;0.0
1;92000;RAINFOREST_RESIN;9996;1;9995;23;;;10002;3;10004;1;10005;23;9999.0;0.0
1;92100;SQUID_INK;1807;31;;;;;1810;31;;;;;1808.5;0.0
1;92100;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;92100;KELP;2034;31;;;;;2037;2;2038;29;;;2035.5;0.0
1;92200;RAINFOREST_RESIN;10002;3;9998;5;9995;29;10005;29;;;;;10003.5;0.0
1;92200;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;92200;SQUID_INK;1807;29;;;;;1810;29;;;;;1808.5;0.0
1;92300;KELP;2034;24;;;;;2037;25;;;;;2035.5;0.0
1;92300;SQUID_INK;1807;24;;;;;1810;25;;;;;1808.5;0.0
1;92300;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;92400;KELP;2034;21;;;;;2037;21;;;;;2035.5;0.0
1;92400;SQUID_INK;1808;21;;;;;1811;21;;;;;1809.5;0.0
1;92400;RAINFOREST_RESIN;9995;21;;;;;10002;6;10005;21;;;9998.5;0.0
1;92500;SQUID_INK;1808;29;;;;;1811;29;;;;;1809.5;0.0
1;92500;RAINFOREST_RESIN;9996;2;9995;27;;;10002;5;10004;2;10005;27;9999.0;0.0
1;92500;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;92600;RAINFOREST_RESIN;9995;27;;;;;10005;27;;;;;10000.0;0.0
1;92600;KELP;2034;26;;;;;2038;27;;;;;2036.0;0.0
1;92600;SQUID_INK;1810;26;;;;;1813;27;;;;;1811.5;0.0
1;92700;KELP;2034;27;;;;;2036;7;2038;27;;;2035.0;0.0
1;92700;SQUID_INK;1811;27;;;;;1813;7;1814;27;;;1812.0;0.0
1;92700;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;92800;KELP;2034;30;;;;;2038;30;;;;;2036.0;0.0
1;92800;SQUID_INK;1813;30;;;;;1816;30;;;;;1814.5;0.0
1;92800;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;92900;SQUID_INK;1812;32;;;;;1815;30;;;;;1813.5;0.0
1;92900;RAINFOREST_RESIN;9998;1;9996;2;9995;28;10004;2;10005;28;;;10001.0;0.0
1;92900;KELP;2035;2;2034;30;;;2038;30;;;;;2036.5;0.0
1;93000;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;93000;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;93000;SQUID_INK;1811;23;;;;;1815;23;;;;;1813.0;0.0
1;93100;KELP;2034;27;;;;;2036;2;2038;27;;;2035.0;0.0
1;93100;RAINFOREST_RESIN;9998;8;9996;2;9995;25;10000;1;10004;2;10005;25;9999.0;0.0
1;93100;SQUID_INK;1811;2;1810;25;;;1812;2;1814;27;;;1811.5;0.0
1;93200;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;93200;SQUID_INK;1810;23;;;;;1813;23;;;;;1811.5;0.0
1;93200;RAINFOREST_RESIN;9998;5;9995;23;;;10005;23;;;;;10001.5;0.0
1;93300;RAINFOREST_RESIN;9995;23;;;;;10000;6;10002;3;10005;23;9997.5;0.0
1;93300;SQUID_INK;1810;23;;;;;1811;7;1813;23;;;1810.5;0.0
1;93300;KELP;2034;23;;;;;2036;7;2038;23;;;2035.0;0.0
1;93400;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;93400;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;93400;SQUID_INK;1811;23;;;;;1814;23;;;;;1812.5;0.0
1;93500;KELP;2036;5;2034;29;;;2038;29;;;;;2037.0;0.0
1;93500;RAINFOREST_RESIN;9996;1;9995;28;;;10004;1;10005;28;;;10000.0;0.0
1;93500;SQUID_INK;1817;5;1815;29;;;1818;29;;;;;1817.5;0.0
1;93600;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;93600;SQUID_INK;1815;29;;;;;1818;29;;;;;1816.5;0.0
1;93600;RAINFOREST_RESIN;9995;29;;;;;9998;1;10002;4;10005;29;9996.5;0.0
1;93700;RAINFOREST_RESIN;9998;7;9996;1;9995;29;10004;1;10005;29;;;10001.0;0.0
1;93700;SQUID_INK;1818;30;;;;;1821;30;;;;;1819.5;0.0
1;93700;KELP;2035;1;2034;29;;;2038;30;;;;;2036.5;0.0
1;93800;RAINFOREST_RESIN;9996;1;9995;20;;;9998;5;10004;1;10005;20;9997.0;0.0
1;93800;KELP;2035;1;2034;20;;;2036;6;2038;21;;;2035.5;0.0
1;93800;SQUID_INK;1815;21;;;;;1816;6;1818;21;;;1815.5;0.0
1;93900;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;93900;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;93900;SQUID_INK;1814;29;;;;;1817;29;;;;;1815.5;0.0
1;94000;KELP;2035;8;2034;22;;;2038;22;;;;;2036.5;0.0
1;94000;SQUID_INK;1815;30;;;;;1818;22;;;;;1816.5;0.0
1;94000;RAINFOREST_RESIN;9995;22;;;;;10002;7;10005;22;;;9998.5;0.0
1;94100;RAINFOREST_RESIN;9996;1;9995;30;;;10004;1;10005;30;;;10000.0;0.0
1;94100;SQUID_INK;1814;31;;;;;1817;31;;;;;1815.5;0.0
1;94100;KELP;2035;31;;;;;2038;31;;;;;2036.5;0.0
1;94200;RAINFOREST_RESIN;9995;28;;;;;10002;8;10005;28;;;9998.5;0.0
1;94200;SQUID_INK;1814;28;;;;;1816;3;1817;28;;;1815.0;0.0
1;94200;KELP;2034;28;;;;;2037;3;2038;28;;;2035.5;0.0
1;94300;KELP;2035;31;;;;;2038;31;;;;;2036.5;0.0
1;94300;RAINFOREST_RESIN;9996;2;9995;29;;;10004;2;10005;29;;;10000.0;0.0
1;94300;SQUID_INK;1815;31;;;;;1818;31;;;;;1816.5;0.0
1;94400;SQUID_INK;1815;23;;;;;1818;23;;;;;1816.5;0.0
1;94400;KELP;2035;1;2034;22;;;2038;23;;;;;2036.5;0.0
1;94400;RAINFOREST_RESIN;9998;4;9996;1;9995;22;10004;1;10005;22;;;10001.0;0.0
1;94500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;94500;SQUID_INK;1812;21;;;;;1815;21;;;;;1813.5;0.0
1;94500;KELP;2034;21;;;;;2038;21;;;;;2036.0;0.0
1;94600;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;94600;SQUID_INK;1813;2;1812;28;;;1815;28;;;;;1814.0;0.0
1;94600;KELP;2035;2;2034;28;;;2038;28;;;;;2036.5;0.0
1;94700;KELP;2036;1;2034;21;;;2037;1;2038;20;;;2036.5;0.0
1;94700;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;94700;SQUID_INK;1819;1;1818;1;1817;20;1821;21;;;;;1820.0;0.0
1;94800;SQUID_INK;1815;23;;;;;1818;23;;;;;1816.5;0.0
1;94800;KELP;2034;23;;;;;2037;23;;;;;2035.5;0.0
1;94800;RAINFOREST_RESIN;9996;1;9995;22;;;10004;1;10005;22;;;10000.0;0.0
1;94900;RAINFOREST_RESIN;10002;4;9996;2;9995;26;10004;2;10005;26;;;10003.0;0.0
1;94900;SQUID_INK;1818;28;;;;;1821;28;;;;;1819.5;0.0
1;94900;KELP;2034;28;;;;;2037;28;;;;;2035.5;0.0
1;95000;RAINFOREST_RESIN;9996;1;9995;29;;;10004;1;10005;29;;;10000.0;0.0
1;95000;SQUID_INK;1816;36;;;;;1819;30;;;;;1817.5;0.0
1;95000;KELP;2034;36;;;;;2037;30;;;;;2035.5;0.0
1;95100;KELP;2036;1;2034;22;;;2037;22;;;;;2036.5;0.0
1;95100;RAINFOREST_RESIN;9996;2;9995;20;;;10004;2;10005;20;;;10000.0;0.0
1;95100;SQUID_INK;1816;1;1814;22;;;1817;22;;;;;1816.5;0.0
1;95200;SQUID_INK;1815;29;;;;;1818;29;;;;;1816.5;0.0
1;95200;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;95200;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;95300;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;95300;SQUID_INK;1815;26;;;;;1817;4;1818;26;;;1816.0;0.0
1;95300;KELP;2034;26;;;;;2036;4;2038;26;;;2035.0;0.0
1;95400;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;95400;SQUID_INK;1814;30;;;;;1816;1;1817;2;1818;28;1815.0;0.0
1;95400;KELP;2034;30;;;;;2036;1;2037;2;2038;28;2035.0;0.0
1;95500;KELP;2034;21;;;;;2036;3;2038;21;;;2035.0;0.0
1;95500;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;95500;SQUID_INK;1813;21;;;;;1815;3;1816;21;;;1814.0;0.0
1;95600;SQUID_INK;1813;21;;;;;1816;21;;;;;1814.5;0.0
1;95600;KELP;2034;21;;;;;2038;21;;;;;2036.0;0.0
1;95600;RAINFOREST_RESIN;9995;21;;;;;9998;1;10005;21;;;9996.5;0.0
1;95700;RAINFOREST_RESIN;10002;1;9996;2;9995;27;10004;2;10005;27;;;10003.0;0.0
1;95700;SQUID_INK;1815;29;;;;;1818;29;;;;;1816.5;0.0
1;95700;KELP;2034;29;;;;;2037;29;;;;;2035.5;0.0
1;95800;RAINFOREST_RESIN;9996;1;9995;21;;;9998;1;10004;1;10005;21;9997.0;0.0
1;95800;SQUID_INK;1813;21;;;;;1816;22;;;;;1814.5;0.0
1;95800;KELP;2034;21;;;;;2037;22;;;;;2035.5;0.0
1;95900;KELP;2036;1;2034;25;;;2037;24;;;;;2036.5;0.0
1;95900;RAINFOREST_RESIN;9998;9;9996;2;9995;22;10004;2;10005;22;;;10001.0;0.0
1;95900;SQUID_INK;1814;1;1813;3;1812;22;1816;24;;;;;1815.0;0.0
1;96000;SQUID_INK;1815;1;1813;21;;;1816;21;;;;;1815.5;0.0
1;96000;KELP;2036;1;2034;21;;;2037;21;;;;;2036.5;0.0
1;96000;RAINFOREST_RESIN;9996;1;9995;20;;;10004;1;10005;20;;;10000.0;0.0
1;96100;RAINFOREST_RESIN;9996;1;9995;26;;;10002;7;10004;1;10005;26;9999.0;0.0
1;96100;SQUID_INK;1814;26;;;;;1817;27;;;;;1815.5;0.0
1;96100;KELP;2034;26;;;;;2037;27;;;;;2035.5;0.0
1;96200;RAINFOREST_RESIN;9996;1;9995;20;;;10002;2;10004;1;10005;20;9999.0;0.0
1;96200;SQUID_INK;1814;21;;;;;1817;21;;;;;1815.5;0.0
1;96200;KELP;2035;1;2034;20;;;2038;21;;;;;2036.5;0.0
1;96300;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;96300;RAINFOREST_RESIN;9995;23;;;;;10005;23;;;;;10000.0;0.0
1;96300;SQUID_INK;1814;23;;;;;1817;23;;;;;1815.5;0.0
1;96400;SQUID_INK;1816;7;1815;27;;;1818;27;;;;;1817.0;0.0
1;96400;KELP;2034;34;;;;;2037;27;;;;;2035.5;0.0
1;96400;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;96500;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;96500;SQUID_INK;1815;6;1814;27;;;1817;27;;;;;1816.0;0.0
1;96500;KELP;2035;6;2034;27;;;2038;27;;;;;2036.5;0.0
1;96600;RAINFOREST_RESIN;10000;5;9996;1;9995;24;10004;1;10005;24;;;10002.0;0.0
1;96600;SQUID_INK;1815;3;1814;1;1813;24;1817;25;;;;;1816.0;0.0
1;96600;KELP;2036;3;2034;25;;;2038;25;;;;;2037.0;0.0
1;96700;KELP;2034;32;;;;;2036;2;2038;32;;;2035.0;0.0
1;96700;RAINFOREST_RESIN;9996;2;9995;30;;;10004;2;10005;30;;;10000.0;0.0
1;96700;SQUID_INK;1813;32;;;;;1815;2;1816;2;1817;30;1814.0;0.0
1;96800;SQUID_INK;1813;34;;;;;1816;30;;;;;1814.5;0.0
1;96800;KELP;2035;4;2034;30;;;2038;30;;;;;2036.5;0.0
1;96800;RAINFOREST_RESIN;9996;2;9995;28;;;10004;2;10005;28;;;10000.0;0.0
1;96900;SQUID_INK;1814;23;;;;;1817;23;;;;;1815.5;0.0
1;96900;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;96900;RAINFOREST_RESIN;9996;1;9995;22;;;9998;1;10004;1;10005;22;9997.0;0.0
1;97000;SQUID_INK;1814;25;;;;;1817;25;;;;;1815.5;0.0
1;97000;RAINFOREST_RESIN;9996;1;9995;24;;;10002;2;10004;1;10005;24;9999.0;0.0
1;97000;KELP;2034;25;;;;;2038;25;;;;;2036.0;0.0
1;97100;KELP;2034;29;;;;;2036;8;2038;29;;;2035.0;0.0
1;97100;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;97100;SQUID_INK;1815;29;;;;;1817;8;1819;29;;;1816.0;0.0
1;97200;SQUID_INK;1813;15;;;;;1816;20;;;;;1814.5;0.0
1;97200;RAINFOREST_RESIN;9995;20;;;;;10005;20;;;;;10000.0;0.0
1;97200;KELP;2034;20;;;;;2035;5;2038;20;;;2034.5;0.0
1;97300;SQUID_INK;1814;1;1812;27;;;1815;21;;;;;1814.5;0.0
1;97300;KELP;2037;1;2035;6;2034;21;2038;21;;;;;2037.5;0.0
1;97300;RAINFOREST_RESIN;9995;21;;;;;10005;21;;;;;10000.0;0.0
1;97400;SQUID_INK;1816;1;1814;30;;;1818;30;;;;;1817.0;0.0
1;97400;RAINFOREST_RESIN;9995;30;;;;;10005;30;;;;;10000.0;0.0
1;97400;KELP;2037;1;2034;30;;;2038;30;;;;;2037.5;0.0
1;97500;KELP;2034;24;;;;;2038;24;;;;;2036.0;0.0
1;97500;SQUID_INK;1813;24;;;;;1816;24;;;;;1814.5;0.0
1;97500;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;97600;RAINFOREST_RESIN;10000;6;9996;2;9995;25;10004;2;10005;25;;;10002.0;0.0
1;97600;KELP;2035;6;2034;27;;;2036;2;2038;27;;;2035.5;0.0
1;97600;SQUID_INK;1816;4;1815;27;;;1818;27;;;;;1817.0;0.0
1;97700;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;97700;SQUID_INK;1815;29;;;;;1818;2;1819;27;;;1816.5;0.0
1;97700;RAINFOREST_RESIN;9996;2;9995;27;;;10004;2;10005;27;;;10000.0;0.0
1;97800;SQUID_INK;1814;28;;;;;1816;7;1817;2;1818;26;1815.0;0.0
1;97800;RAINFOREST_RESIN;9996;2;9995;26;;;10004;2;10005;26;;;10000.0;0.0
1;97800;KELP;2034;28;;;;;2036;7;2038;28;;;2035.0;0.0
1;97900;KELP;2034;23;;;;;2038;23;;;;;2036.0;0.0
1;97900;SQUID_INK;1814;23;;;;;1817;23;;;;;1815.5;0.0
1;97900;RAINFOREST_RESIN;10002;3;9995;23;;;10005;23;;;;;10003.5;0.0
1;98000;RAINFOREST_RESIN;9996;2;9995;25;;;10004;2;10005;25;;;10000.0;0.0
1;98000;KELP;2034;27;;;;;2038;27;;;;;2036.0;0.0
1;98000;SQUID_INK;1814;27;;;;;1817;27;;;;;1815.5;0.0
1;98100;KELP;2034;29;;;;;2036;3;2038;30;;;2035.0;0.0
1;98100;SQUID_INK;1814;29;;;;;1816;3;1817;30;;;1815.0;0.0
1;98100;RAINFOREST_RESIN;9998;8;9995;30;;;10005;30;;;;;10001.5;0.0
1;98200;SQUID_INK;1814;29;;;;;1817;29;;;;;1815.5;0.0
1;98200;RAINFOREST_RESIN;9995;29;;;;;10005;29;;;;;10000.0;0.0
1;98200;KELP;2034;29;;;;;2038;29;;;;;2036.0;0.0
1;98300;KELP;2034;21;;;;;2035;3;2038;21;;;2034.5;0.0
1;98300;SQUID_INK;1815;21;;;;;1816;3;1818;21;;;1815.5;0.0
1;98300;RAINFOREST_RESIN;9995;21;;;;;9998;1;10000;3;10005;21;9996.5;0.0
1;98400;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;98400;KELP;2034;28;;;;;2038;28;;;;;2036.0;0.0
1;98400;SQUID_INK;1815;28;;;;;1818;28;;;;;1816.5;0.0
1;98500;SQUID_INK;1816;32;;;;;1819;32;;;;;1817.5;0.0
1;98500;KELP;2034;32;;;;;2038;32;;;;;2036.0;0.0
1;98500;RAINFOREST_RESIN;9996;2;9995;30;;;9998;1;10002;7;10004;2;9997.0;0.0
1;98600;SQUID_INK;1814;24;;;;;1817;24;;;;;1815.5;0.0
1;98600;RAINFOREST_RESIN;9995;24;;;;;10005;24;;;;;10000.0;0.0
1;98600;KELP;2034;24;;;;;2038;24;;;;;2036.0;0.0
1;98700;SQUID_INK;1813;26;;;;;1816;26;;;;;1814.5;0.0
1;98700;KELP;2034;26;;;;;2038;26;;;;;2036.0;0.0
1;98700;RAINFOREST_RESIN;9996;1;9995;25;;;10004;1;10005;25;;;10000.0;0.0
1;98800;RAINFOREST_RESIN;9996;2;9995;23;;;10004;2;10005;23;;;10000.0;0.0
1;98800;KELP;2034;25;;;;;2038;25;;;;;2036.0;0.0
1;98800;SQUID_INK;1812;25;;;;;1815;25;;;;;1813.5;0.0
1;98900;SQUID_INK;1813;29;;;;;1816;25;;;;;1814.5;0.0
1;98900;KELP;2035;4;2034;25;;;2038;25;;;;;2036.5;0.0
1;98900;RAINFOREST_RESIN;9996;1;9995;24;;;10004;1;10005;24;;;10000.0;0.0
1;99000;SQUID_INK;1809;28;;;;;1812;28;;;;;1810.5;0.0
1;99000;RAINFOREST_RESIN;9996;1;9995;27;;;10004;1;10005;27;;;10000.0;0.0
1;99000;KELP;2035;1;2034;27;;;2038;28;;;;;2036.5;0.0
1;99100;SQUID_INK;1811;22;;;;;1814;22;;;;;1812.5;0.0
1;99100;KELP;2034;22;;;;;2038;22;;;;;2036.0;0.0
1;99100;RAINFOREST_RESIN;9995;22;;;;;10005;22;;;;;10000.0;0.0
1;99200;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;99200;KELP;2034;26;;;;;2038;26;;;;;2036.0;0.0
1;99200;SQUID_INK;1811;26;;;;;1814;26;;;;;1812.5;0.0
1;99300;SQUID_INK;1814;1;1813;2;1812;21;1816;23;;;;;1815.0;0.0
1;99300;KELP;2037;1;2035;2;2034;21;2038;23;;;;;2037.5;0.0
1;99300;RAINFOREST_RESIN;9996;2;9995;21;;;9998;1;10004;2;10005;21;9997.0;0.0
1;99400;SQUID_INK;1813;1;1812;29;;;1816;30;;;;;1814.5;0.0
1;99400;RAINFOREST_RESIN;9996;1;9995;29;;;10002;9;10004;1;10005;29;9999.0;0.0
1;99400;KELP;2035;30;;;;;2038;30;;;;;2036.5;0.0
1;99500;SQUID_INK;1814;20;;;;;1818;20;;;;;1816.0;0.0
1;99500;KELP;2034;20;;;;;2038;20;;;;;2036.0;0.0
1;99500;RAINFOREST_RESIN;9995;20;;;;;9998;3;10005;20;;;9996.5;0.0
1;99600;RAINFOREST_RESIN;9995;28;;;;;10005;28;;;;;10000.0;0.0
1;99600;KELP;2034;28;;;;;2038;28;;;;;2036.0;0.0
1;99600;SQUID_INK;1815;28;;;;;1818;28;;;;;1816.5;0.0
1;99700;KELP;2034;26;;;;;2038;26;;;;;2036.0;0.0
1;99700;SQUID_INK;1813;26;;;;;1817;26;;;;;1815.0;0.0
1;99700;RAINFOREST_RESIN;9995;26;;;;;10005;26;;;;;10000.0;0.0
1;99800;KELP;2034;26;;;;;2038;26;;;;;2036.0;0.0
1;99800;SQUID_INK;1814;26;;;;;1817;26;;;;;1815.5;0.0
1;99800;RAINFOREST_RESIN;9996;1;9995;25;;;10002;5;10004;1;10005;25;9999.0;0.0
1;99900;SQUID_INK;1816;27;;;;;1819;28;;;;;1817.5;0.0
1;99900;RAINFOREST_RESIN;9998;6;9996;1;9995;27;10004;1;10005;27;;;10001.0;0.0
1;99900;KELP;2034;27;;;;;2038;28;;;;;2036.0;0.0




Trade History:
[
  {
    "timestamp": 100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1835,
    "quantity": 1
  },
  {
    "timestamp": 300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 1
  },
  {
    "timestamp": 500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 1
  },
  {
    "timestamp": 600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 5
  },
  {
    "timestamp": 600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 5
  },
  {
    "timestamp": 700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 1
  },
  {
    "timestamp": 800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 1
  },
  {
    "timestamp": 900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 15
  },
  {
    "timestamp": 1200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 1200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 1
  },
  {
    "timestamp": 1300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 1400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 6
  },
  {
    "timestamp": 1500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 1500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 1500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1844,
    "quantity": 1
  },
  {
    "timestamp": 1900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 2600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 2600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 3000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 3000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 1
  },
  {
    "timestamp": 3100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 3200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 3300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 3700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 4000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 4000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1854,
    "quantity": 1
  },
  {
    "timestamp": 4200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 4300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 2
  },
  {
    "timestamp": 4300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1854,
    "quantity": 2
  },
  {
    "timestamp": 5200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 5
  },
  {
    "timestamp": 5200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 4
  },
  {
    "timestamp": 5200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1859,
    "quantity": 5
  },
  {
    "timestamp": 5200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1859,
    "quantity": 4
  },
  {
    "timestamp": 5400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 5400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 5400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1860,
    "quantity": 1
  },
  {
    "timestamp": 5500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 8
  },
  {
    "timestamp": 5500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 6200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 6200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1861,
    "quantity": 1
  },
  {
    "timestamp": 6300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 11
  },
  {
    "timestamp": 6300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1862,
    "quantity": 11
  },
  {
    "timestamp": 6600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 7
  },
  {
    "timestamp": 6600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1860,
    "quantity": 7
  },
  {
    "timestamp": 6700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 6700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 6700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1861,
    "quantity": 1
  },
  {
    "timestamp": 6800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 6800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1859,
    "quantity": 1
  },
  {
    "timestamp": 7200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 7200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 7400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 13
  },
  {
    "timestamp": 7400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1862,
    "quantity": 13
  },
  {
    "timestamp": 7600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 8000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 8000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1858,
    "quantity": 1
  },
  {
    "timestamp": 8200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 8200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 8200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1857,
    "quantity": 1
  },
  {
    "timestamp": 9100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 9400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 9500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 9700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 10300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 10300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 10300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1861,
    "quantity": 1
  },
  {
    "timestamp": 10600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 4
  },
  {
    "timestamp": 10600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1857,
    "quantity": 4
  },
  {
    "timestamp": 10700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 10800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 6
  },
  {
    "timestamp": 10800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 6
  },
  {
    "timestamp": 10800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1857,
    "quantity": 6
  },
  {
    "timestamp": 11800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 4
  },
  {
    "timestamp": 11800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1858,
    "quantity": 4
  },
  {
    "timestamp": 11900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 12700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 12700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 13100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 2
  },
  {
    "timestamp": 13100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1852,
    "quantity": 2
  },
  {
    "timestamp": 13300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 13700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 13900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 3
  },
  {
    "timestamp": 14000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 14000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 14000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 14000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1852,
    "quantity": 1
  },
  {
    "timestamp": 14100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 15
  },
  {
    "timestamp": 14100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 15
  },
  {
    "timestamp": 14400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 14400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 2
  },
  {
    "timestamp": 14400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 14400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 14400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1853,
    "quantity": 1
  },
  {
    "timestamp": 14400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1853,
    "quantity": 2
  },
  {
    "timestamp": 14600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 14600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 1
  },
  {
    "timestamp": 14800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 15000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 15000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 1
  },
  {
    "timestamp": 15100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 15800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 2
  },
  {
    "timestamp": 15800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 15800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1854,
    "quantity": 2
  },
  {
    "timestamp": 16100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 16100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 16100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1857,
    "quantity": 2
  },
  {
    "timestamp": 16200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2032,
    "quantity": 1
  },
  {
    "timestamp": 16200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 16200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1853,
    "quantity": 1
  },
  {
    "timestamp": 16300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 16300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 16500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 1
  },
  {
    "timestamp": 17400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 2
  },
  {
    "timestamp": 17400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 17400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 2
  },
  {
    "timestamp": 17500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 12
  },
  {
    "timestamp": 17500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 12
  },
  {
    "timestamp": 17900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 17900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 17900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 17900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 17900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 1
  },
  {
    "timestamp": 18100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 8
  },
  {
    "timestamp": 18100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 8
  },
  {
    "timestamp": 18200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 18200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 9
  },
  {
    "timestamp": 18200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 18200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 18500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 18500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 18500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 18500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 18600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 9
  },
  {
    "timestamp": 18600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 1
  },
  {
    "timestamp": 18900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 19300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 19300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 6
  },
  {
    "timestamp": 19500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 14
  },
  {
    "timestamp": 19500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1828,
    "quantity": 14
  },
  {
    "timestamp": 19600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 11
  },
  {
    "timestamp": 19600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 19600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1831,
    "quantity": 11
  },
  {
    "timestamp": 19900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 20000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 20200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 20400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 3
  },
  {
    "timestamp": 20500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 20500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 8
  },
  {
    "timestamp": 20500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 2
  },
  {
    "timestamp": 20500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1833,
    "quantity": 8
  },
  {
    "timestamp": 20600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 2
  },
  {
    "timestamp": 20600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 20600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 2
  },
  {
    "timestamp": 20700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 20700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 2
  },
  {
    "timestamp": 20900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 20900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 21100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 21100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 2
  },
  {
    "timestamp": 21200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 21200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 21200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 1
  },
  {
    "timestamp": 21500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 2
  },
  {
    "timestamp": 21500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 2
  },
  {
    "timestamp": 22100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 22100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 1
  },
  {
    "timestamp": 22200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 22400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 22500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 22800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 2
  },
  {
    "timestamp": 22800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 22800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 2
  },
  {
    "timestamp": 22900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 23000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 23000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 23000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 1
  },
  {
    "timestamp": 23200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 23200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 1
  },
  {
    "timestamp": 23400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 15
  },
  {
    "timestamp": 23400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 15
  },
  {
    "timestamp": 23600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 23600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1843,
    "quantity": 1
  },
  {
    "timestamp": 24300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 24300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 24300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1846,
    "quantity": 1
  },
  {
    "timestamp": 24500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 9
  },
  {
    "timestamp": 24500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1844,
    "quantity": 9
  },
  {
    "timestamp": 25100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 25900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 2
  },
  {
    "timestamp": 25900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 25900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1852,
    "quantity": 2
  },
  {
    "timestamp": 26000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 26000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 1
  },
  {
    "timestamp": 26200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 26300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 26300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 26300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 26600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 26700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 26700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1846,
    "quantity": 1
  },
  {
    "timestamp": 26800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 27100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 27100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 27100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 1
  },
  {
    "timestamp": 27200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 27200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1853,
    "quantity": 1
  },
  {
    "timestamp": 27300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 27300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 1
  },
  {
    "timestamp": 27400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 6
  },
  {
    "timestamp": 27400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 27800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 28100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 28100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 28500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 28500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 1
  },
  {
    "timestamp": 28600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 28600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 5
  },
  {
    "timestamp": 28600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 28700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 28700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 29000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 29300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 29300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 1
  },
  {
    "timestamp": 29400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 29500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 29500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 1
  },
  {
    "timestamp": 29600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 4
  },
  {
    "timestamp": 29800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 5
  },
  {
    "timestamp": 29900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 15
  },
  {
    "timestamp": 29900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1857,
    "quantity": 15
  },
  {
    "timestamp": 30200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 30400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 3
  },
  {
    "timestamp": 30400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1852,
    "quantity": 3
  },
  {
    "timestamp": 30600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 31000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 31000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 31000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 31000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1852,
    "quantity": 1
  },
  {
    "timestamp": 31100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 31100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 9
  },
  {
    "timestamp": 31100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 31100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1852,
    "quantity": 1
  },
  {
    "timestamp": 31100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 9
  },
  {
    "timestamp": 31200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 31200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 31200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 6
  },
  {
    "timestamp": 31200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 1
  },
  {
    "timestamp": 31400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 31600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 31600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 31700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 31700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 3
  },
  {
    "timestamp": 32100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 2
  },
  {
    "timestamp": 32100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 32100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 2
  },
  {
    "timestamp": 32500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 9
  },
  {
    "timestamp": 32500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 32500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 2
  },
  {
    "timestamp": 32500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 7
  },
  {
    "timestamp": 33200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 33200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 1
  },
  {
    "timestamp": 33600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 33900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 33900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 11
  },
  {
    "timestamp": 34000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 34000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 34200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 34300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 34300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1846,
    "quantity": 1
  },
  {
    "timestamp": 34600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 14
  },
  {
    "timestamp": 34600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 14
  },
  {
    "timestamp": 34800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 10
  },
  {
    "timestamp": 34800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1846,
    "quantity": 10
  },
  {
    "timestamp": 35400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 35700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 11
  },
  {
    "timestamp": 35700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1845,
    "quantity": 11
  },
  {
    "timestamp": 36000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 36000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 2
  },
  {
    "timestamp": 36500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 36500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1843,
    "quantity": 1
  },
  {
    "timestamp": 36600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 36600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 2
  },
  {
    "timestamp": 36700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 36700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 37100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 9
  },
  {
    "timestamp": 37100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 9
  },
  {
    "timestamp": 37300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 37600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 37600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 9
  },
  {
    "timestamp": 37600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 37600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 9
  },
  {
    "timestamp": 37600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 1
  },
  {
    "timestamp": 37600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1845,
    "quantity": 9
  },
  {
    "timestamp": 37800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 37800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 37800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 2
  },
  {
    "timestamp": 38400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 4
  },
  {
    "timestamp": 38400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 2
  },
  {
    "timestamp": 38400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 2
  },
  {
    "timestamp": 38700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 38700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 38700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 1
  },
  {
    "timestamp": 39100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 39100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 39100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1853,
    "quantity": 1
  },
  {
    "timestamp": 39200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 39200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 4
  },
  {
    "timestamp": 39200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 39200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 2
  },
  {
    "timestamp": 39200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1850,
    "quantity": 4
  },
  {
    "timestamp": 39700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 39700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 1
  },
  {
    "timestamp": 40000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 14
  },
  {
    "timestamp": 40000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1849,
    "quantity": 14
  },
  {
    "timestamp": 40200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 6
  },
  {
    "timestamp": 40200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1854,
    "quantity": 6
  },
  {
    "timestamp": 40500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 13
  },
  {
    "timestamp": 40500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1854,
    "quantity": 13
  },
  {
    "timestamp": 40600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 40700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 41400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 5
  },
  {
    "timestamp": 41400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1855,
    "quantity": 5
  },
  {
    "timestamp": 41800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 41800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1857,
    "quantity": 1
  },
  {
    "timestamp": 42000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 42400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 42400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 42400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1859,
    "quantity": 1
  },
  {
    "timestamp": 42500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1861,
    "quantity": 2
  },
  {
    "timestamp": 42800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 42800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1859,
    "quantity": 2
  },
  {
    "timestamp": 43200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 43600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 43800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 43800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 4
  },
  {
    "timestamp": 43800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1856,
    "quantity": 5
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1852,
    "quantity": 1
  },
  {
    "timestamp": 43900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1855,
    "quantity": 2
  },
  {
    "timestamp": 44300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 44700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 44700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1851,
    "quantity": 1
  },
  {
    "timestamp": 45000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 45000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 1
  },
  {
    "timestamp": 45200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 45200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 45200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 45300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 45300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 45500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 45500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 45500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 45500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 3
  },
  {
    "timestamp": 45900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 45900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 46000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 46400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 46500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 46500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 46500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 2
  },
  {
    "timestamp": 46600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 46900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 10
  },
  {
    "timestamp": 46900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 10
  },
  {
    "timestamp": 47200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 47200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1848,
    "quantity": 1
  },
  {
    "timestamp": 47400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 47400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 47400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1847,
    "quantity": 2
  },
  {
    "timestamp": 47700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 10
  },
  {
    "timestamp": 47700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1845,
    "quantity": 10
  },
  {
    "timestamp": 48000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 48100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1845,
    "quantity": 1
  },
  {
    "timestamp": 48200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 48200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 1
  },
  {
    "timestamp": 48300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 48300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 4
  },
  {
    "timestamp": 48300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 1
  },
  {
    "timestamp": 48300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 4
  },
  {
    "timestamp": 48900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 49000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 49000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 49800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 49800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 49800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 49800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1832,
    "quantity": 1
  },
  {
    "timestamp": 49800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1835,
    "quantity": 1
  },
  {
    "timestamp": 50100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 50400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 50400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 50400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1831,
    "quantity": 2
  },
  {
    "timestamp": 50400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1831,
    "quantity": 1
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 4
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1833,
    "quantity": 1
  },
  {
    "timestamp": 50600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1832,
    "quantity": 4
  },
  {
    "timestamp": 50900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 50900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1831,
    "quantity": 1
  },
  {
    "timestamp": 51400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 5
  },
  {
    "timestamp": 51400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1831,
    "quantity": 5
  },
  {
    "timestamp": 51500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 4
  },
  {
    "timestamp": 51500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 51500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 51500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1832,
    "quantity": 4
  },
  {
    "timestamp": 51500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1829,
    "quantity": 2
  },
  {
    "timestamp": 51600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 51600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1829,
    "quantity": 1
  },
  {
    "timestamp": 52000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 52200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 52200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1827,
    "quantity": 1
  },
  {
    "timestamp": 52400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 52400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 52600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 52600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 52600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 2
  },
  {
    "timestamp": 52700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 52700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 52800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 53100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 5
  },
  {
    "timestamp": 53300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 8
  },
  {
    "timestamp": 53300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 8
  },
  {
    "timestamp": 54000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 54100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 54100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 54100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 54100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 2
  },
  {
    "timestamp": 54200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 54200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 54300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 54300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 54300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 2
  },
  {
    "timestamp": 54600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 54700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 54700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 54700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 54700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 4
  },
  {
    "timestamp": 54700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 2
  },
  {
    "timestamp": 54900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 54900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 1
  },
  {
    "timestamp": 55200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 55200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 55300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 55300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 5
  },
  {
    "timestamp": 55300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 55300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 55400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 6
  },
  {
    "timestamp": 55900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 56500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 6
  },
  {
    "timestamp": 56700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 56700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 56700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 2
  },
  {
    "timestamp": 56700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 2
  },
  {
    "timestamp": 57100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 57100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 57300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 57600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 57900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 5
  },
  {
    "timestamp": 58000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 14
  },
  {
    "timestamp": 58000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1843,
    "quantity": 14
  },
  {
    "timestamp": 58100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 7
  },
  {
    "timestamp": 58600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 58600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 58600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 58800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 58800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 58800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 58800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 2
  },
  {
    "timestamp": 58900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 58900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 58900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 58900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 2
  },
  {
    "timestamp": 58900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 1
  },
  {
    "timestamp": 59100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 59400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 59600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 59700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 59700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1844,
    "quantity": 1
  },
  {
    "timestamp": 59900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 59900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 59900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1845,
    "quantity": 2
  },
  {
    "timestamp": 60000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 60400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 60400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 5
  },
  {
    "timestamp": 60400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 60600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 60600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 60600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 60700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 60700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 60800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 60800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1842,
    "quantity": 1
  },
  {
    "timestamp": 61000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 61200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 3
  },
  {
    "timestamp": 61200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 61200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 3
  },
  {
    "timestamp": 61200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 1
  },
  {
    "timestamp": 61500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 61500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1844,
    "quantity": 1
  },
  {
    "timestamp": 61800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 61800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 1
  },
  {
    "timestamp": 61900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 9
  },
  {
    "timestamp": 61900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 9
  },
  {
    "timestamp": 62700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 15
  },
  {
    "timestamp": 62700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 62700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 15
  },
  {
    "timestamp": 62800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 12
  },
  {
    "timestamp": 63100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 63300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 63300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 63300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 63300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 1
  },
  {
    "timestamp": 63600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 63600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 63700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 5
  },
  {
    "timestamp": 63700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 7
  },
  {
    "timestamp": 63700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1836,
    "quantity": 5
  },
  {
    "timestamp": 63900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 2
  },
  {
    "timestamp": 64000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 64000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1831,
    "quantity": 1
  },
  {
    "timestamp": 64600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 64800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 64900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 65200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 65200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 65400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 65400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 65400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 65400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 2
  },
  {
    "timestamp": 65700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 65700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 1
  },
  {
    "timestamp": 65800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 66100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 66100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 66100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 2
  },
  {
    "timestamp": 66200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 66300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 4
  },
  {
    "timestamp": 66300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 4
  },
  {
    "timestamp": 66500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 11
  },
  {
    "timestamp": 66500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1840,
    "quantity": 11
  },
  {
    "timestamp": 66600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 67400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 67400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 4
  },
  {
    "timestamp": 67700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1832,
    "quantity": 3
  },
  {
    "timestamp": 67800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 67800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 3
  },
  {
    "timestamp": 68000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 68000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 68000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1835,
    "quantity": 1
  },
  {
    "timestamp": 68200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 68400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 68500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 68500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 68500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 68500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 68500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 68600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 69100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 69100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 69100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 1
  },
  {
    "timestamp": 69800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 69800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1837,
    "quantity": 1
  },
  {
    "timestamp": 69900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 70100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 70100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 1
  },
  {
    "timestamp": 70300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 70300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 70300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 1
  },
  {
    "timestamp": 70500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 3
  },
  {
    "timestamp": 70500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 3
  },
  {
    "timestamp": 70600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 70600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 1
  },
  {
    "timestamp": 70700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 70700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 70700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 1
  },
  {
    "timestamp": 70900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 70900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 1
  },
  {
    "timestamp": 71000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 71000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 8
  },
  {
    "timestamp": 71000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1839,
    "quantity": 1
  },
  {
    "timestamp": 71100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 71200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 71400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 71700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 1
  },
  {
    "timestamp": 71700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 71700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 71700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1843,
    "quantity": 1
  },
  {
    "timestamp": 72100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 72200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 72800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 8
  },
  {
    "timestamp": 72800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1846,
    "quantity": 8
  },
  {
    "timestamp": 73400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 73600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2033,
    "quantity": 2
  },
  {
    "timestamp": 73600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 73600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1838,
    "quantity": 2
  },
  {
    "timestamp": 73700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 4
  },
  {
    "timestamp": 73900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 73900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 73900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1841,
    "quantity": 2
  },
  {
    "timestamp": 74000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 74200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 74200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 74200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 74200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 2
  },
  {
    "timestamp": 74300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 74300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 74300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 74300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 74300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 1
  },
  {
    "timestamp": 74300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1833,
    "quantity": 1
  },
  {
    "timestamp": 74500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 74500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1832,
    "quantity": 1
  },
  {
    "timestamp": 74600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 75000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 75000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 75000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 75000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1830,
    "quantity": 1
  },
  {
    "timestamp": 75500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 75500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 75500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1831,
    "quantity": 2
  },
  {
    "timestamp": 75700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 75700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 75700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1834,
    "quantity": 2
  },
  {
    "timestamp": 76700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 76700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 76700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 76700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1826,
    "quantity": 1
  },
  {
    "timestamp": 76700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1826,
    "quantity": 2
  },
  {
    "timestamp": 76900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 76900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1820,
    "quantity": 1
  },
  {
    "timestamp": 77300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 77300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1821,
    "quantity": 1
  },
  {
    "timestamp": 77400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 3
  },
  {
    "timestamp": 77400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1824,
    "quantity": 3
  },
  {
    "timestamp": 78100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 78100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1821,
    "quantity": 1
  },
  {
    "timestamp": 78200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 78200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 78200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1821,
    "quantity": 1
  },
  {
    "timestamp": 78500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 78500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 78700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 78700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 5
  },
  {
    "timestamp": 79200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 79400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 1
  },
  {
    "timestamp": 79400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 79400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1823,
    "quantity": 1
  },
  {
    "timestamp": 79500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 79500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 79500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1816,
    "quantity": 1
  },
  {
    "timestamp": 80000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1815,
    "quantity": 1
  },
  {
    "timestamp": 80100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 80100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 80100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1811,
    "quantity": 1
  },
  {
    "timestamp": 80300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1806,
    "quantity": 6
  },
  {
    "timestamp": 80500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 80500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 80500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1805,
    "quantity": 2
  },
  {
    "timestamp": 80500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 1
  },
  {
    "timestamp": 81200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 81200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 81200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1807,
    "quantity": 2
  },
  {
    "timestamp": 81300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 2
  },
  {
    "timestamp": 81300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 81300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 81300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 2
  },
  {
    "timestamp": 81500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 81600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 82000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 82100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 4
  },
  {
    "timestamp": 82300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 82300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 7
  },
  {
    "timestamp": 82500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 82600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 14
  },
  {
    "timestamp": 82600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1803,
    "quantity": 14
  },
  {
    "timestamp": 83100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 5
  },
  {
    "timestamp": 83600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 83600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 83600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 83600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1803,
    "quantity": 2
  },
  {
    "timestamp": 83800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 11
  },
  {
    "timestamp": 83800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 84000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 84000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1798,
    "quantity": 1
  },
  {
    "timestamp": 84300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 84300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1797,
    "quantity": 1
  },
  {
    "timestamp": 84700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 84700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 85100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 85500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 85500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 1
  },
  {
    "timestamp": 85800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 2
  },
  {
    "timestamp": 85800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 2
  },
  {
    "timestamp": 85800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 2
  },
  {
    "timestamp": 85900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 85900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 8
  },
  {
    "timestamp": 86000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 86000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1815,
    "quantity": 1
  },
  {
    "timestamp": 86100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 86100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1812,
    "quantity": 1
  },
  {
    "timestamp": 86200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 86200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1815,
    "quantity": 1
  },
  {
    "timestamp": 86600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 86600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 86600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1811,
    "quantity": 1
  },
  {
    "timestamp": 86700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 86700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1812,
    "quantity": 1
  },
  {
    "timestamp": 86900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 86900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1812,
    "quantity": 1
  },
  {
    "timestamp": 87000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 87000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 87000,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1809,
    "quantity": 1
  },
  {
    "timestamp": 87300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 2
  },
  {
    "timestamp": 87300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 5
  },
  {
    "timestamp": 87400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 87400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 1
  },
  {
    "timestamp": 87600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1809,
    "quantity": 1
  },
  {
    "timestamp": 87800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 88000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 88200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 88200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 88200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 2
  },
  {
    "timestamp": 88200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 1
  },
  {
    "timestamp": 88400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 88400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1809,
    "quantity": 1
  },
  {
    "timestamp": 88500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 1
  },
  {
    "timestamp": 88500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 88500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1809,
    "quantity": 1
  },
  {
    "timestamp": 89100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 89100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1807,
    "quantity": 1
  },
  {
    "timestamp": 89600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 89600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 10
  },
  {
    "timestamp": 89600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1805,
    "quantity": 10
  },
  {
    "timestamp": 89800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 89800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1806,
    "quantity": 1
  },
  {
    "timestamp": 89900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 1
  },
  {
    "timestamp": 89900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 89900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1809,
    "quantity": 1
  },
  {
    "timestamp": 90100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 90200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 90200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 90200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1805,
    "quantity": 1
  },
  {
    "timestamp": 90300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 2
  },
  {
    "timestamp": 90300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 90300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1808,
    "quantity": 2
  },
  {
    "timestamp": 90400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 8
  },
  {
    "timestamp": 90400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1806,
    "quantity": 8
  },
  {
    "timestamp": 90500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 90500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 90500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1810,
    "quantity": 1
  },
  {
    "timestamp": 90700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 1
  },
  {
    "timestamp": 90700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 1
  },
  {
    "timestamp": 90700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1809,
    "quantity": 1
  },
  {
    "timestamp": 91000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 91600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 91600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1801,
    "quantity": 1
  },
  {
    "timestamp": 91800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 91800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1806,
    "quantity": 1
  },
  {
    "timestamp": 91900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 2
  },
  {
    "timestamp": 91900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1809,
    "quantity": 2
  },
  {
    "timestamp": 92200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 92300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 92300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 92300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 92300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1807,
    "quantity": 1
  },
  {
    "timestamp": 92300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1810,
    "quantity": 1
  },
  {
    "timestamp": 92400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 92400,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 92400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1811,
    "quantity": 2
  },
  {
    "timestamp": 92600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 92600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1810,
    "quantity": 1
  },
  {
    "timestamp": 93100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 1
  },
  {
    "timestamp": 93600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 1
  },
  {
    "timestamp": 93600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 93600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1818,
    "quantity": 1
  },
  {
    "timestamp": 94500,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 15
  },
  {
    "timestamp": 94500,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1815,
    "quantity": 15
  },
  {
    "timestamp": 94700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 94800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 94800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 94800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9996,
    "quantity": 1
  },
  {
    "timestamp": 94800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1815,
    "quantity": 2
  },
  {
    "timestamp": 95100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 95100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1816,
    "quantity": 1
  },
  {
    "timestamp": 95300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 95300,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1817,
    "quantity": 1
  },
  {
    "timestamp": 95600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 95700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 7
  },
  {
    "timestamp": 95800,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 95800,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 95800,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1813,
    "quantity": 1
  },
  {
    "timestamp": 95900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 96000,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 96100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 96100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 2
  },
  {
    "timestamp": 96100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 2
  },
  {
    "timestamp": 96100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1814,
    "quantity": 1
  },
  {
    "timestamp": 96100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1817,
    "quantity": 2
  },
  {
    "timestamp": 96400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 7
  },
  {
    "timestamp": 96400,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 3
  },
  {
    "timestamp": 96400,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1816,
    "quantity": 7
  },
  {
    "timestamp": 96600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 96600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2036,
    "quantity": 1
  },
  {
    "timestamp": 96600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1814,
    "quantity": 1
  },
  {
    "timestamp": 96600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1815,
    "quantity": 1
  },
  {
    "timestamp": 97200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 5
  },
  {
    "timestamp": 97200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1813,
    "quantity": 5
  },
  {
    "timestamp": 97600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1816,
    "quantity": 2
  },
  {
    "timestamp": 97900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10002,
    "quantity": 3
  },
  {
    "timestamp": 98000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 2
  },
  {
    "timestamp": 98000,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 3
  },
  {
    "timestamp": 98100,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 1
  },
  {
    "timestamp": 98100,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 98100,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1814,
    "quantity": 1
  },
  {
    "timestamp": 98200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 6
  },
  {
    "timestamp": 98200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1814,
    "quantity": 6
  },
  {
    "timestamp": 98500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 98600,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 9
  },
  {
    "timestamp": 98900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10004,
    "quantity": 1
  },
  {
    "timestamp": 98900,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 10005,
    "quantity": 2
  },
  {
    "timestamp": 99200,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 99200,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 99200,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1811,
    "quantity": 2
  },
  {
    "timestamp": 99300,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2037,
    "quantity": 1
  },
  {
    "timestamp": 99300,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 1
  },
  {
    "timestamp": 99500,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9998,
    "quantity": 3
  },
  {
    "timestamp": 99600,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2038,
    "quantity": 12
  },
  {
    "timestamp": 99600,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1818,
    "quantity": 12
  },
  {
    "timestamp": 99700,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2034,
    "quantity": 2
  },
  {
    "timestamp": 99700,
    "buyer": "",
    "seller": "",
    "symbol": "RAINFOREST_RESIN",
    "currency": "SEASHELLS",
    "price": 9995,
    "quantity": 2
  },
  {
    "timestamp": 99700,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1813,
    "quantity": 2
  },
  {
    "timestamp": 99900,
    "buyer": "",
    "seller": "",
    "symbol": "KELP",
    "currency": "SEASHELLS",
    "price": 2035,
    "quantity": 1
  },
  {
    "timestamp": 99900,
    "buyer": "",
    "seller": "",
    "symbol": "SQUID_INK",
    "currency": "SEASHELLS",
    "price": 1816,
    "quantity": 1
  }
]